{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\components\\\\routing\\\\AdminRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux'; // Spinner\n\nimport Spinner from '../layout/Spinner';\n\nconst AdminRoute = ({\n  component: Component,\n  user,\n  loading,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }) : user && user.role_id === 1 ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst mapSateToProps = state => ({\n  user: state.auth.user,\n  loading: state.auth.loading\n});\n\nexport default connect(mapSateToProps)(AdminRoute);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/components/routing/AdminRoute.js"],"names":["React","Route","Redirect","connect","Spinner","AdminRoute","component","Component","user","loading","rest","props","role_id","mapSateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8BC,EAAAA,OAA9B;AAAuC,KAAGC;AAA1C,CAAD,KAAsD;AACvE,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACNF,OAAO,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,GAEHD,IAAI,IAAIA,IAAI,CAACI,OAAL,KAAiB,CAAzB,gBACF,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADE,gBAGF,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CAfD;;AAiBA,MAAME,cAAc,GAAIC,KAAD,KAAY;AACjCN,EAAAA,IAAI,EAAEM,KAAK,CAACC,IAAN,CAAWP,IADgB;AAEjCC,EAAAA,OAAO,EAAEK,KAAK,CAACC,IAAN,CAAWN;AAFa,CAAZ,CAAvB;;AAKA,eAAeN,OAAO,CAACU,cAAD,CAAP,CAAwBR,UAAxB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// Spinner\nimport Spinner from '../layout/Spinner';\n\nconst AdminRoute = ({ component: Component, user, loading, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        loading ? (\n          <Spinner />\n        ) : user && user.role_id === 1 ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to='/' />\n        )\n      }\n    />\n  );\n};\n\nconst mapSateToProps = (state) => ({\n  user: state.auth.user,\n  loading: state.auth.loading,\n});\n\nexport default connect(mapSateToProps)(AdminRoute);\n"]},"metadata":{},"sourceType":"module"}