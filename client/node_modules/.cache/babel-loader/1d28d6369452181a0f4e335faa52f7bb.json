{"ast":null,"code":"import axios from 'axios';\nimport { USER_PROFILE_LOADED, USER_PROFILE_ERROR, SET_LOADING_USER_PROFILE, CLEAR_ERRORS } from '../types'; // Load User\n\nexport const loadUserProfile = username => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const res = await axios.get('/api/users/' + username);\n    dispatch({\n      type: USER_PROFILE_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response;\n\n    dispatch({\n      type: USER_PROFILE_ERROR,\n      payload: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data\n    });\n  }\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING_USER_PROFILE\n  };\n}; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/master/client/src/redux/actions/userActions.js"],"names":["axios","USER_PROFILE_LOADED","USER_PROFILE_ERROR","SET_LOADING_USER_PROFILE","CLEAR_ERRORS","loadUserProfile","username","dispatch","setLoading","res","get","type","payload","data","error","response","clearErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,mBADF,EAEEC,kBAFF,EAGEC,wBAHF,EAIEC,YAJF,QAKO,UALP,C,CAOA;;AACA,OAAO,MAAMC,eAAe,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC/D,MAAI;AACFA,IAAAA,QAAQ,CAACC,UAAU,EAAX,CAAR;AAEA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,gBAAgBJ,QAA1B,CAAlB;AAEAC,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,mBADC;AAEPW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GATD,CASE,OAAOC,KAAP,EAAc;AAAA;;AACdP,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,kBADC;AAEPU,MAAAA,OAAO,qBAAEE,KAAK,CAACC,QAAR,oDAAE,gBAAgBF;AAFlB,KAAD,CAAR;AAID;AACF,CAhBM,C,CAkBP;;AACA,OAAO,MAAML,UAAU,GAAG,MAAM;AAC9B,SAAO;AAAEG,IAAAA,IAAI,EAAER;AAAR,GAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMa,WAAW,GAAG,MAAM;AAC/B,SAAO;AAAEL,IAAAA,IAAI,EAAEP;AAAR,GAAP;AACD,CAFM","sourcesContent":["import axios from 'axios';\n\nimport {\n  USER_PROFILE_LOADED,\n  USER_PROFILE_ERROR,\n  SET_LOADING_USER_PROFILE,\n  CLEAR_ERRORS,\n} from '../types';\n\n// Load User\nexport const loadUserProfile = (username) => async (dispatch) => {\n  try {\n    dispatch(setLoading());\n\n    const res = await axios.get('/api/users/' + username);\n\n    dispatch({\n      type: USER_PROFILE_LOADED,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_ERROR,\n      payload: error.response?.data,\n    });\n  }\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return { type: SET_LOADING_USER_PROFILE };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return { type: CLEAR_ERRORS };\n};\n"]},"metadata":{},"sourceType":"module"}