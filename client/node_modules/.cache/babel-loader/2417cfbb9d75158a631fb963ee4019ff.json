{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\components\\\\pages\\\\Profile\\\\index.js\";\n\n/*import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\n\n// Actions\n\nimport {\n  updateProfile,\n  updatePassword,\n  loadProfile,\n  clearErrors,\n} from '../../../redux/actions/authActions';\nimport { setAlert } from '../../../redux/actions/alertActions';\n\n// Utils\nimport { WEBSITE_NAME } from '../../../utils/websiteData';\n\n// Components\nimport Sidebar from '../../layout/Sidebar';\nimport Spinner from '../../layout/Spinner';\n\nimport useStyles from './profile-jss';\n\nconst Profile = (props) => {\n  const {\n    profile,\n    error,\n    loading_profile,\n    clearErrors,\n      updateProfile,\n  } = props;\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    }\n\n    //eslint-disable-next-line\n  }, [error]);\n\n  const [user, setUser] = useState({\n    username: '',\n    email: '',\n    full_name: '',\n    phone: '',\n  });\n\n  const {\n    username,\n    email,\n    full_name,\n    phone,\n  } = user;\n\n  useEffect(() => {\n    if (profile) {\n      setUser({\n        ...user,\n        ...profile,\n        full_name: profile.full_name ? profile.full_name : '',\n        phone: profile.phone ? profile.phone : '',\n        \n      });\n      \n    }\n\n    //eslint-disable-next-line\n  }, [profile]);\n\n  const onChangeBasic = (e) =>\n    setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (phone === '') {\n      setAlert('Phone is empty');\n      return;\n    }\n\n    await updateProfile({\n      full_name,\n      phone,\n      \n    });\n  };\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | Profile`}</title>\n      </Helmet>\n      <div className={`${classes.page} card-shadow text-center`}>\n        <h3 className='title'>Profile</h3>\n        <h6 className='subtitle'>Change your phone number & other info</h6>\n\n        <div className='content mt-5'>\n          <div className='row'>\n            <div className='col-12 col-lg-9'>\n              {profile !== null && !loading_profile ? (\n                <>\n                  <h6 className='text-left'>Edit your profile</h6>\n\n                  <div className='section basic-info mt-4'>\n                    <h5 className='title text-left mt-2'>\n                      Basic informations & Preferences\n                    </h5>\n\n                    <form onSubmit={onSubmit}>\n                      <div className='row'>\n                        <div className='form-group col-12 col-lg-6'>\n                          <label htmlFor='username' className='float-left'>\n                            Username\n                          </label>\n                          <input\n                            className='input-text'\n                            type='text'\n                            id='username'\n                            name='username'\n                            value={username}\n                            placeholder='Username'\n                            readOnly\n                          />\n                        </div>\n\n                        <div className='form-group col-12 col-lg-6'>\n                          <label htmlFor='email' className='float-left'>\n                            Email address\n                          </label>\n                          <input\n                            className='input-text'\n                            type='text'\n                            id='email'\n                            name='email'\n                            value={email}\n                            placeholder='Email address'\n                            readOnly\n                          />\n                        </div>\n\n                        <div className='form-group col-12 col-lg-6'>\n                          <label htmlFor='full_name' className='float-left'>\n                            Full name\n                          </label>\n                          <input\n                            className='input-text'\n                            type='text'\n                            id='full_name'\n                            name='full_name'\n                            value={full_name}\n                            placeholder='Full name'\n                            onChange={onChangeBasic}\n                          />\n                        </div>\n\n                        <div className='form-group col-12 col-lg-6'>\n                          <label htmlFor='phone' className='float-left'>\n                            Phone\n                          </label>\n                          <input\n                            className='input-text'\n                            type='text'\n                            id='phone'\n                            name='phone'\n                            value={phone}\n                            placeholder='Phone'\n                            onChange={onChangeBasic}\n                          />\n                        </div>\n                      </div>\n\n                      <div className='row'>\n                        <div className='col'>\n                          <input\n                            type='submit'\n                            value='Save'\n                            className='button-gray float-right mt-2'\n                          />\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n\n                  \n                </>\n              ) : (\n                <div className='content text-center mt-5'>\n                  <Spinner />\n                </div>\n              )}\n            </div>\n            <div className='d-none d-lg-block col-12 col-lg-3'>\n              <Sidebar />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapSateToProps = (state) => ({\n  profile: state.auth.user,\n  loading_profile: state.auth.loading_profile,\n  error: state.auth.error,\n});\nexport default connect(mapSateToProps, {\n  clearErrors,\n  loadProfile,\n  updateProfile,\n  updatePassword,\n})(Profile);*/\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { Container, Form, Button } from 'react-bootstrap'; // Actions\n//import { loadUserProfile } from '../../redux/actions/userActions';\n//import { sendMessage, clearErrors } from '../../redux/actions/messageActions';\n//import { setAlert } from '../../redux/actions/alertActions';\n// App layout components\n\nimport Spinner from '../../../../layout/Spinner'; // Utils\n\nimport { WEBSITE_NAME } from '../../../utils/websiteData'; // Images\n\nimport OtherPicture from \"../../other.svg\";\nimport MalePicture from \"/male.svg\";\nimport FemalePicture from \"/female.svg\";\n\nconst Profile = props => {\n  const {\n    match,\n    user,\n    user_profile,\n    loading,\n    loading_send,\n    error_send,\n    loadUserProfile,\n    sendMessage,\n    clearErrors\n  } = props;\n  const {\n    _id,\n    name,\n    username,\n    bio,\n    gender,\n    allow_messages\n  } = user_profile || {};\n  const [message, setMessage] = useState('');\n  const [is_sent, setIsSent] = useState(false);\n\n  const onChange = e => setMessage(e.target.value);\n\n  useEffect(() => {\n    loadUserProfile(match.params.username); // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    loadUserProfile(match.params.username); // eslint-disable-next-line\n  }, [match]);\n  useEffect(() => {\n    if (error_send && error_send.length) {\n      if (typeof error_send === 'object') {\n        error_send.forEach(err => {// setAlert(err.msg, 'danger');\n        });\n      } else {//   setAlert(error_send, 'danger');\n      }\n\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error_send]);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (message === '') {\n      // setAlert('Message cannot be empty', 'danger');\n      return;\n    }\n\n    await sendMessage({\n      user_id: _id,\n      content: message\n    });\n\n    if (!error_send) {\n      setIsSent(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | ${loading ? 'Loading...' : username || 'Not found'}`)), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-inner px-3 mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }) : !user_profile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"not-found mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, \"404\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, \"This page does not exist!\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"picture\",\n    src: gender === 1 ? MalePicture : gender === 2 ? FemalePicture : OtherPicture,\n    alt: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-details mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, name || username), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"bio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }\n  }, bio || 'This user does not have a bio 🤭')), !user || user._id !== _id ? allow_messages ? /*#__PURE__*/React.createElement(Form, {\n    className: \"form form-container mt-4\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 23\n    }\n  }, \"Your message\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    name: \"message\",\n    value: message,\n    onChange: onChange,\n    disabled: is_sent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"links d-flex align-items-center justify-content-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 21\n    }\n  }, loading_send ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 25\n    }\n  }) : is_sent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-sent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, \"Message sent!\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 25\n    }\n  }, \"Send\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, \"Receiving messages is disabled\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"share mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 19\n    }\n  }, \"Share your profile link with friends\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    className: \"py-2 px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 21\n    }\n  }, `${window.location.origin.toString()}/u/${username}`)))))));\n};\n\nconst mapSateToProps = state => ({\n  user: state.auth.user,\n  user_profile: state.user.user_profile,\n  loading: state.user.loading,\n  loading_send: state.message.loading_send,\n  error_send: state.message.error_send\n});\n\nexport default connect(mapSateToProps, {//loadUserProfile,\n  //sendMessage,\n  //clearErrors,\n})(Profile);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/components/pages/Profile/index.js"],"names":["React","useState","useEffect","connect","Helmet","Container","Form","Button","Spinner","WEBSITE_NAME","Profile","props","match","user","user_profile","loading","loading_send","error_send","loadUserProfile","sendMessage","clearErrors","_id","name","username","bio","gender","allow_messages","message","setMessage","is_sent","setIsSent","onChange","e","target","value","params","length","forEach","err","onSubmit","preventDefault","user_id","content","MalePicture","FemalePicture","OtherPicture","window","location","origin","toString","mapSateToProps","state","auth"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,SAAT,EA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","sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\n\n// Actions\n\nimport {\n  updateProfile,\n  updatePassword,\n  loadProfile,\n  clearErrors,\n} from '../../../redux/actions/authActions';\nimport { setAlert } from '../../../redux/actions/alertActions';\n\n// Utils\nimport { WEBSITE_NAME } from '../../../utils/websiteData';\n\n// Components\nimport Sidebar from '../../layout/Sidebar';\nimport Spinner from '../../layout/Spinner';\n\nimport useStyles from './profile-jss';\n\nconst Profile = (props) => {\n  const {\n    profile,\n    error,\n    loading_profile,\n    clearErrors,\n      updateProfile,\n  } = props;\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    }\n\n    //eslint-disable-next-line\n  }, [error]);\n\n  const [user, setUser] = useState({\n    username: '',\n    email: '',\n    full_name: '',\n    phone: '',\n  });\n\n  const {\n    username,\n    email,\n    full_name,\n    phone,\n  } = user;\n\n  useEffect(() => {\n    if (profile) {\n      setUser({\n        ...user,\n        ...profile,\n        full_name: profile.full_name ? profile.full_name : '',\n        phone: profile.phone ? profile.phone : '',\n        \n      });\n      \n    }\n\n    //eslint-disable-next-line\n  }, [profile]);\n\n  const onChangeBasic = (e) =>\n    setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (phone === '') {\n      setAlert('Phone is empty');\n      return;\n    }\n\n    await updateProfile({\n      full_name,\n      phone,\n      \n    });\n  };\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | Profile`}</title>\n      </Helmet>\n      <div className={`${classes.page} card-shadow text-center`}>\n        <h3 className='title'>Profile</h3>\n        <h6 className='subtitle'>Change your phone number & other info</h6>\n\n        <div className='content mt-5'>\n          <div className='row'>\n            <div className='col-12 col-lg-9'>\n              {profile !== null && !loading_profile ? (\n                <>\n                  <h6 className='text-left'>Edit your profile</h6>\n\n                  <div className='section basic-info mt-4'>\n                    <h5 className='title text-left mt-2'>\n                      Basic informations & Preferences\n                    </h5>\n\n                    <form onSubmit={onSubmit}>\n                      <div className='row'>\n                        <div className='form-group col-12 col-lg-6'>\n                          <label htmlFor='username' className='float-left'>\n                            Username\n                          </label>\n                          <input\n                            className='input-text'\n                            type='text'\n                            id='username'\n                            name='username'\n                            value={username}\n                            placeholder='Username'\n                            readOnly\n                          />\n                        </div>\n\n                        <div className='form-group col-12 col-lg-6'>\n                          <label htmlFor='email' className='float-left'>\n                            Email address\n                          </label>\n                          <input\n                            className='input-text'\n                            type='text'\n                            id='email'\n                            name='email'\n                            value={email}\n                            placeholder='Email address'\n                            readOnly\n                          />\n                        </div>\n\n                        <div className='form-group col-12 col-lg-6'>\n                          <label htmlFor='full_name' className='float-left'>\n                            Full name\n                          </label>\n                          <input\n                            className='input-text'\n                            type='text'\n                            id='full_name'\n                            name='full_name'\n                            value={full_name}\n                            placeholder='Full name'\n                            onChange={onChangeBasic}\n                          />\n                        </div>\n\n                        <div className='form-group col-12 col-lg-6'>\n                          <label htmlFor='phone' className='float-left'>\n                            Phone\n                          </label>\n                          <input\n                            className='input-text'\n                            type='text'\n                            id='phone'\n                            name='phone'\n                            value={phone}\n                            placeholder='Phone'\n                            onChange={onChangeBasic}\n                          />\n                        </div>\n                      </div>\n\n                      <div className='row'>\n                        <div className='col'>\n                          <input\n                            type='submit'\n                            value='Save'\n                            className='button-gray float-right mt-2'\n                          />\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n\n                  \n                </>\n              ) : (\n                <div className='content text-center mt-5'>\n                  <Spinner />\n                </div>\n              )}\n            </div>\n            <div className='d-none d-lg-block col-12 col-lg-3'>\n              <Sidebar />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapSateToProps = (state) => ({\n  profile: state.auth.user,\n  loading_profile: state.auth.loading_profile,\n  error: state.auth.error,\n});\nexport default connect(mapSateToProps, {\n  clearErrors,\n  loadProfile,\n  updateProfile,\n  updatePassword,\n})(Profile);*/\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { Container, Form, Button } from 'react-bootstrap';\n\n// Actions\n//import { loadUserProfile } from '../../redux/actions/userActions';\n//import { sendMessage, clearErrors } from '../../redux/actions/messageActions';\n//import { setAlert } from '../../redux/actions/alertActions';\n\n// App layout components\nimport Spinner from '../../../../layout/Spinner';\n\n// Utils\nimport { WEBSITE_NAME } from '../../../utils/websiteData';\n\n// Images\nimport OtherPicture from '../../other.svg';\nimport MalePicture from '/male.svg';\nimport FemalePicture from '/female.svg';\n\nconst Profile = (props) => {\n  const {\n    match,\n    user,\n    user_profile,\n    loading,\n    loading_send,\n    error_send,\n    loadUserProfile,\n    sendMessage,\n    clearErrors,\n  } = props;\n  const { _id, name, username, bio, gender, allow_messages } =\n    user_profile || {};\n\n  const [message, setMessage] = useState('');\n  const [is_sent, setIsSent] = useState(false);\n\n  const onChange = (e) => setMessage(e.target.value);\n\n  useEffect(() => {\n    loadUserProfile(match.params.username);\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    loadUserProfile(match.params.username);\n\n    // eslint-disable-next-line\n  }, [match]);\n\n  useEffect(() => {\n    if (error_send && error_send.length) {\n      if (typeof error_send === 'object') {\n        error_send.forEach((err) => {\n         // setAlert(err.msg, 'danger');\n        });\n      } else {\n     //   setAlert(error_send, 'danger');\n      }\n\n      clearErrors();\n    }\n\n    // eslint-disable-next-line\n  }, [error_send]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (message === '') {\n     // setAlert('Message cannot be empty', 'danger');\n      return;\n    }\n\n    await sendMessage({ user_id: _id, content: message });\n\n    if (!error_send) {\n      setIsSent(true);\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | ${\n          loading ? 'Loading...' : username || 'Not found'\n        }`}</title>\n      </Helmet>\n      <Container>\n        <div className='container-inner px-3 mt-4 text-center'>\n          {loading ? (\n            <Spinner />\n          ) : !user_profile ? (\n            <div className='not-found mx-auto'>\n              <h1 className='title'>404</h1>\n              <h5 className='subtitle'>This page does not exist!</h5>\n            </div>\n          ) : (\n            <div className='profile mx-auto'>\n              <img\n                className='picture'\n                src={\n                  gender === 1\n                    ? MalePicture\n                    : gender === 2\n                    ? FemalePicture\n                    : OtherPicture\n                }\n                alt='Profile'\n              />\n\n              <div className='user-details mt-4'>\n                <h3 className='name'>{name || username}</h3>\n                <p className='bio'>\n                  {bio || 'This user does not have a bio 🤭'}\n                </p>\n              </div>\n\n              {!user || user._id !== _id ? (\n                allow_messages ? (\n                  <Form\n                    className='form form-container mt-4'\n                    onSubmit={onSubmit}\n                  >\n                    <Form.Group>\n                      <Form.Label>Your message</Form.Label>\n                      <Form.Control\n                        as='textarea'\n                        rows='3'\n                        name='message'\n                        value={message}\n                        onChange={onChange}\n                        disabled={is_sent}\n                      />\n                    </Form.Group>\n\n                    <div className='links d-flex align-items-center justify-content-center mt-4'>\n                      {loading_send ? (\n                        <Spinner />\n                      ) : is_sent ? (\n                        <div className='message-sent'>Message sent!</div>\n                      ) : (\n                        <Button variant='primary' type='submit'>\n                          Send\n                        </Button>\n                      )}\n                    </div>\n                  </Form>\n                ) : (\n                  <div className='mt-4'>\n                    <h6>Receiving messages is disabled</h6>\n                  </div>\n                )\n              ) : (\n                <div className='share mt-5'>\n                  <h6>Share your profile link with friends</h6>\n                  <p className='mt-2'>\n                    <code className='py-2 px-3'>\n                      {/* http://localhost:3000/u/achraf */}\n                      {`${window.location.origin.toString()}/u/${username}`}\n                    </code>\n                  </p>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </Container>\n    </>\n  );\n};\n\nconst mapSateToProps = (state) => ({\n  user: state.auth.user,\n  user_profile: state.user.user_profile,\n  loading: state.user.loading,\n  loading_send: state.message.loading_send,\n  error_send: state.message.error_send,\n});\n\nexport default connect(mapSateToProps, {\n  //loadUserProfile,\n  //sendMessage,\n  //clearErrors,\n})(Profile);\n\n"]},"metadata":{},"sourceType":"module"}