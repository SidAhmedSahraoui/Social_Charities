{"ast":null,"code":"import axios from 'axios';\nimport { GET_BLOOD_DONORS, SET_LOADING_BLOOD_DONORS, BLOOD_DONORS_ERROR, CLEAR_ERRORS } from '../types';\nimport { URL as Api } from './api'; // Get blood donors\n\nexport const getBloodDonors = (wilaya, blood_type) => async dispatch => {\n  try {\n    dispatch(setLoading());\n    let query = '';\n    if (wilaya !== 0 && wilaya !== '0') query += `wilaya=${wilaya}&`;\n    if (blood_type !== 0 && blood_type !== '0') query += `blood_type=${blood_type}`;\n    const res = await axios.get(Api + `/users/bloodDonors/?${query}`);\n    dispatch({\n      type: GET_BLOOD_DONORS,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    console.log(error);\n    dispatch({\n      type: BLOOD_DONORS_ERROR,\n      payload: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg\n    });\n  }\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING_BLOOD_DONORS\n  };\n}; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/redux/actions/bloodActions.js"],"names":["axios","GET_BLOOD_DONORS","SET_LOADING_BLOOD_DONORS","BLOOD_DONORS_ERROR","CLEAR_ERRORS","URL","Api","getBloodDonors","wilaya","blood_type","dispatch","setLoading","query","res","get","type","payload","data","error","console","log","response","msg","clearErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,gBADF,EAEEC,wBAFF,EAGEC,kBAHF,EAIEC,YAJF,QAKO,UALP;AAOA,SAASC,GAAG,IAAIC,GAAhB,QAA2B,OAA3B,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,UAAT,KAAwB,MAAOC,QAAP,IAAoB;AACxE,MAAI;AACFA,IAAAA,QAAQ,CAACC,UAAU,EAAX,CAAR;AAEA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIJ,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,GAA/B,EAAoCI,KAAK,IAAK,UAASJ,MAAO,GAA1B;AACpC,QAAIC,UAAU,KAAK,CAAf,IAAoBA,UAAU,KAAK,GAAvC,EACEG,KAAK,IAAK,cAAaH,UAAW,EAAlC;AAEF,UAAMI,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUR,GAAG,GAAI,uBAAsBM,KAAM,EAA7C,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEd,gBAAR;AAA0Be,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAAvC,KAAD,CAAR;AACD,GAXD,CAWE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEZ,kBADC;AAEPa,MAAAA,OAAO,qBAAEE,KAAK,CAACG,QAAR,4EAAE,gBAAgBJ,IAAlB,yDAAE,qBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAnBM,C,CAqBP;;AACA,OAAO,MAAMX,UAAU,GAAG,MAAM;AAC9B,SAAO;AAAEI,IAAAA,IAAI,EAAEb;AAAR,GAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMqB,WAAW,GAAG,MAAM;AAC/B,SAAO;AAAER,IAAAA,IAAI,EAAEX;AAAR,GAAP;AACD,CAFM","sourcesContent":["import axios from 'axios';\n\nimport {\n  GET_BLOOD_DONORS,\n  SET_LOADING_BLOOD_DONORS,\n  BLOOD_DONORS_ERROR,\n  CLEAR_ERRORS,\n} from '../types';\n\nimport { URL as Api } from './api';\n\n// Get blood donors\nexport const getBloodDonors = (wilaya, blood_type) => async (dispatch) => {\n  try {\n    dispatch(setLoading());\n\n    let query = '';\n    if (wilaya !== 0 && wilaya !== '0') query += `wilaya=${wilaya}&`;\n    if (blood_type !== 0 && blood_type !== '0')\n      query += `blood_type=${blood_type}`;\n\n    const res = await axios.get(Api + `/users/bloodDonors/?${query}`);\n\n    dispatch({ type: GET_BLOOD_DONORS, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: BLOOD_DONORS_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return { type: SET_LOADING_BLOOD_DONORS };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return { type: CLEAR_ERRORS };\n};\n"]},"metadata":{},"sourceType":"module"}