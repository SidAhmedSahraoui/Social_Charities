{"ast":null,"code":"import { GET_STATES, GET_STATE_CITIES, CLEAR_STATE_CITIES, SET_LOADING_STATES, SET_LOADING_STATE_CITIES, LOCATION_ERROR, CLEAR_ERRORS } from '../types';\nconst initialState = {\n  states: null,\n  cities: null,\n  loading_states: false,\n  loading_state_cities: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_STATES:\n      return { ...state,\n        states: action.payload,\n        loading_states: false\n      };\n\n    case GET_STATE_CITIES:\n      return { ...state,\n        cities: action.payload,\n        loading_state_cities: false\n      };\n\n    case CLEAR_STATE_CITIES:\n      return { ...state,\n        cities: null\n      };\n\n    case SET_LOADING_STATES:\n      return { ...state,\n        loading_states: true\n      };\n\n    case SET_LOADING_STATE_CITIES:\n      return { ...state,\n        loading_state_cities: true\n      };\n\n    case LOCATION_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/Redux/reducers/locationReducer.js"],"names":["GET_STATES","GET_STATE_CITIES","CLEAR_STATE_CITIES","SET_LOADING_STATES","SET_LOADING_STATE_CITIES","LOCATION_ERROR","CLEAR_ERRORS","initialState","states","cities","loading_states","loading_state_cities","error","state","action","type","payload"],"mappings":"AAAA,SACEA,UADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,wBALF,EAMEC,cANF,EAOEC,YAPF,QAQO,UARP;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,cAAc,EAAE,KAHG;AAInBC,EAAAA,oBAAoB,EAAE,KAJH;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAQA,gBAAe,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,UAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,MAAM,EAAEM,MAAM,CAACE,OAFV;AAGLN,QAAAA,cAAc,EAAE;AAHX,OAAP;;AAMF,SAAKT,gBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,MAAM,EAAEK,MAAM,CAACE,OAFV;AAGLL,QAAAA,oBAAoB,EAAE;AAHjB,OAAP;;AAMF,SAAKT,kBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAKF,SAAKN,kBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAKF,SAAKN,wBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,oBAAoB,EAAE;AAFjB,OAAP;;AAKF,SAAKN,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKV,YAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELD,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAKF;AACE,aAAOC,KAAP;AA9CJ;AAgDD,CAjDD","sourcesContent":["import {\n  GET_STATES,\n  GET_STATE_CITIES,\n  CLEAR_STATE_CITIES,\n  SET_LOADING_STATES,\n  SET_LOADING_STATE_CITIES,\n  LOCATION_ERROR,\n  CLEAR_ERRORS,\n} from '../types';\n\nconst initialState = {\n  states: null,\n  cities: null,\n  loading_states: false,\n  loading_state_cities: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_STATES:\n      return {\n        ...state,\n        states: action.payload,\n        loading_states: false,\n      };\n\n    case GET_STATE_CITIES:\n      return {\n        ...state,\n        cities: action.payload,\n        loading_state_cities: false,\n      };\n\n    case CLEAR_STATE_CITIES:\n      return {\n        ...state,\n        cities: null,\n      };\n\n    case SET_LOADING_STATES:\n      return {\n        ...state,\n        loading_states: true,\n      };\n\n    case SET_LOADING_STATE_CITIES:\n      return {\n        ...state,\n        loading_state_cities: true,\n      };\n\n    case LOCATION_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}