{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types'; // Actions\n\nimport { register, clearErrors } from '../../redux/actions/authActions';\nimport { setAlert } from '../../redux/actions/alertActions'; // Utils\n\nimport { WEBSITE_NAME } from '../../utils/websiteData'; // Components\n\nimport Spinner from '../layout/Spinner';\nimport useStyles from './auth-jss';\n\nconst Register = props => {\n  const {\n    isAuthenticated,\n    error,\n    loading,\n    register,\n    clearErrors,\n    setAlert\n  } = props;\n  const classes = useStyles();\n  const [user, setUser] = useState({\n    username: '',\n    phone: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    username,\n    phone,\n    email,\n    password,\n    password2\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    } // eslint-disable-next-line\n\n  }, [isAuthenticated, props.history]);\n  useEffect(() => {\n    if (error) {\n      if (typeof error === 'object') {\n        if (error.errors && error.errors.length > 0) {\n          error.errors.forEach(err => {\n            setAlert(err.msg);\n            clearErrors();\n          });\n        }\n      } else {\n        setAlert(error);\n        clearErrors();\n      }\n    } // eslint-disable-next-line\n\n  }, [error]);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (username === '' || phone === '' || email === '' || password === '') {\n      setAlert('Please enter all fields');\n    } else if (password.length < 6) {\n      setAlert('Password must contain at least 6 characters');\n    } else if (password !== password2) {\n      setAlert('Passwords do not match');\n    } else {\n      // Register function\n      await register({\n        username,\n        phone,\n        email,\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Register`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.root} card-shadow text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Create Account\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Start helping or getting help.\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mt-4\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"text\",\n    name: \"username\",\n    value: username,\n    placeholder: \"Username\",\n    onChange: onChange // required\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"text\",\n    name: \"phone\",\n    value: phone,\n    placeholder: \"Phone\",\n    onChange: onChange // required\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: \"Email\",\n    onChange: onChange // required\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onChange: onChange // required\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"password\",\n    name: \"password2\",\n    value: password2,\n    placeholder: \"Password confirmation\",\n    onChange: onChange // required\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })), loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    className: \"button-primary mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-link mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, \"Already have an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Sign in\")))));\n};\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nconst mapSateToProps = state => ({\n  error: state.auth.error,\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading\n});\n\nexport default connect(mapSateToProps, {\n  register,\n  clearErrors,\n  setAlert\n})(Register);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/components/auth/Register.js"],"names":["React","useState","useEffect","Link","connect","Helmet","PropTypes","register","clearErrors","setAlert","WEBSITE_NAME","Spinner","useStyles","Register","props","isAuthenticated","error","loading","classes","user","setUser","username","phone","email","password","password2","onChange","e","target","name","value","history","push","errors","length","forEach","err","msg","onSubmit","preventDefault","root","propTypes","bool","oneOfType","string","object","func","isRequired","mapSateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { register, clearErrors } from '../../redux/actions/authActions';\nimport { setAlert } from '../../redux/actions/alertActions';\n\n// Utils\nimport { WEBSITE_NAME } from '../../utils/websiteData';\n\n// Components\nimport Spinner from '../layout/Spinner';\n\nimport useStyles from './auth-jss';\n\nconst Register = (props) => {\n  const {\n    isAuthenticated,\n    error,\n    loading,\n    register,\n    clearErrors,\n    setAlert,\n  } = props;\n\n  const classes = useStyles();\n\n  const [user, setUser] = useState({\n    username: '',\n    phone: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { username, phone, email, password, password2 } = user;\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    // eslint-disable-next-line\n  }, [isAuthenticated, props.history]);\n\n  useEffect(() => {\n    if (error) {\n      if (typeof error === 'object') {\n        if (error.errors && error.errors.length > 0) {\n          error.errors.forEach((err) => {\n            setAlert(err.msg);\n            clearErrors();\n          });\n        }\n      } else {\n        setAlert(error);\n        clearErrors();\n      }\n    }\n\n    // eslint-disable-next-line\n  }, [error]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (username === '' || phone === '' || email === '' || password === '') {\n      setAlert('Please enter all fields');\n    } else if (password.length < 6) {\n      setAlert('Password must contain at least 6 characters');\n    } else if (password !== password2) {\n      setAlert('Passwords do not match');\n    } else {\n      // Register function\n      await register({ username, phone, email, password });\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | Register`}</title>\n      </Helmet>\n      <div className={`${classes.root} card-shadow text-center`}>\n        <h3 className='title'>Create Account</h3>\n        <h6 className='subtitle'>Start helping or getting help.</h6>\n\n        <form className='mt-4' onSubmit={onSubmit}>\n          <div className='form-group'>\n            <input\n              className='input-text'\n              type='text'\n              name='username'\n              value={username}\n              placeholder='Username'\n              onChange={onChange}\n              // required\n            />\n          </div>\n\n          <div className='form-group'>\n            <input\n              className='input-text'\n              type='text'\n              name='phone'\n              value={phone}\n              placeholder='Phone'\n              onChange={onChange}\n              // required\n            />\n          </div>\n\n          <div className='form-group'>\n            <input\n              className='input-text'\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Email'\n              onChange={onChange}\n              // required\n            />\n          </div>\n\n          <div className='form-group'>\n            <input\n              className='input-text'\n              type='password'\n              name='password'\n              value={password}\n              placeholder='Password'\n              onChange={onChange}\n              // required\n            />\n          </div>\n\n          <div className='form-group'>\n            <input\n              className='input-text'\n              type='password'\n              name='password2'\n              value={password2}\n              placeholder='Password confirmation'\n              onChange={onChange}\n              // required\n            />\n          </div>\n\n          {loading ? (\n            <Spinner />\n          ) : (\n            <input\n              type='submit'\n              value='Register'\n              className='button-primary mt-3'\n            />\n          )}\n        </form>\n\n        <p className='form-link mt-3'>\n          Already have an account?{' '}\n          <Link to='/login'>\n            <span>Sign in</span>\n          </Link>\n        </p>\n      </div>\n    </>\n  );\n};\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n};\n\nconst mapSateToProps = (state) => ({\n  error: state.auth.error,\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading,\n});\n\nexport default connect(mapSateToProps, { register, clearErrors, setAlert })(\n  Register\n);\n"]},"metadata":{},"sourceType":"module"}