{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, SETTINGS_LOADED, UPDATE_SETTINGS, UPDATE_PASSWORD, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_LOADING, SET_LOADING_SETTINGS, AUTH_ERROR, SETTINGS_ERROR, CLEAR_ERRORS } from '../types';\nimport setAuthToken from '../../utils/setAuthToken'; // Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    dispatch({\n      type: AUTH_ERROR\n    });\n    return;\n  }\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response;\n\n    dispatch({\n      type: AUTH_ERROR,\n      payload: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data\n    });\n  }\n}; // Load User Settings\n\nexport const loadSettings = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    dispatch({\n      type: AUTH_ERROR\n    });\n    return;\n  }\n\n  try {\n    dispatch(setLoadingSettings());\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: SETTINGS_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response2;\n\n    dispatch({\n      type: AUTH_ERROR,\n      payload: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n    });\n  }\n}; // Update profile\n\nexport const updateProfile = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoadingSettings());\n    const res = await axios.put('api/users', formData, config);\n    dispatch({\n      type: UPDATE_SETTINGS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response3;\n\n    console.log(error);\n    dispatch({\n      type: SETTINGS_ERROR,\n      payload: error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n    });\n  }\n}; // Update password\n\nexport const updatePassword = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoadingSettings());\n    const res = await axios.put('api/users/password', formData, config);\n    dispatch({\n      type: UPDATE_PASSWORD,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response4;\n\n    console.log(error);\n    dispatch({\n      type: SETTINGS_ERROR,\n      payload: error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data\n    });\n  }\n}; // Register User\n\nexport const register = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.post('/api/users', formData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response5;\n\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error === null || error === void 0 ? void 0 : (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data\n    });\n  }\n}; // Login user\n\nexport const login = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.post('api/auth', formData, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response6;\n\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error === null || error === void 0 ? void 0 : (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data\n    });\n  }\n}; // Logout\n\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n}; // Set loading settings to true\n\nexport const setLoadingSettings = () => {\n  return {\n    type: SET_LOADING_SETTINGS\n  };\n}; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/tellme-master/client/src/redux/actions/authActions.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","SETTINGS_LOADED","UPDATE_SETTINGS","UPDATE_PASSWORD","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_LOADING","SET_LOADING_SETTINGS","AUTH_ERROR","SETTINGS_ERROR","CLEAR_ERRORS","setAuthToken","loadUser","dispatch","localStorage","token","type","setLoading","res","get","payload","data","error","response","loadSettings","setLoadingSettings","updateProfile","formData","config","headers","put","console","log","updatePassword","register","post","login","logout","clearErrors"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  SETTINGS_LOADED,\n  UPDATE_SETTINGS,\n  UPDATE_PASSWORD,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_LOADING,\n  SET_LOADING_SETTINGS,\n  AUTH_ERROR,\n  SETTINGS_ERROR,\n  CLEAR_ERRORS,\n} from '../types';\n\nimport setAuthToken from '../../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n    return;\n  }\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: error.response?.data,\n    });\n  }\n};\n\n// Load User Settings\nexport const loadSettings = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n    return;\n  }\n\n  try {\n    dispatch(setLoadingSettings());\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: SETTINGS_LOADED,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: error.response?.data,\n    });\n  }\n};\n\n// Update profile\nexport const updateProfile = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    dispatch(setLoadingSettings());\n\n    const res = await axios.put('api/users', formData, config);\n\n    dispatch({ type: UPDATE_SETTINGS, payload: res.data });\n\n    dispatch(loadUser());\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: SETTINGS_ERROR,\n      payload: error?.response?.data,\n    });\n  }\n};\n\n// Update password\nexport const updatePassword = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    dispatch(setLoadingSettings());\n\n    const res = await axios.put('api/users/password', formData, config);\n\n    dispatch({ type: UPDATE_PASSWORD, payload: res.data });\n\n    dispatch(loadUser());\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: SETTINGS_ERROR,\n      payload: error?.response?.data,\n    });\n  }\n};\n\n// Register User\nexport const register = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    dispatch(setLoading());\n\n    const res = await axios.post('/api/users', formData, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error?.response?.data,\n    });\n  }\n};\n\n// Login user\nexport const login = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    dispatch(setLoading());\n\n    const res = await axios.post('api/auth', formData, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error?.response?.data,\n    });\n  }\n};\n\n// Logout\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return { type: SET_LOADING };\n};\n\n// Set loading settings to true\nexport const setLoadingSettings = () => {\n  return { type: SET_LOADING_SETTINGS };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return { type: CLEAR_ERRORS };\n};\n"]},"metadata":{},"sourceType":"module"}