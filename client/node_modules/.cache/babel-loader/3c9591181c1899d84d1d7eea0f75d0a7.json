{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\Components\\\\Pages\\\\Login\\\\login.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { WEBSITE_NAME } from '../../../utils/websiteData';\nimport useStyles from './login-jss';\nimport styled from 'styled-components';\nconst StyledDiv = styled.div`\n  width: 60%;\n  margin: 16px auto;\n  border: 1px solid #eee;\n  box-shadow: 0 2px 3px #ccc;\n  padding: 16px;\n  text-align: center;\n  \n  @media (min-width: 500px) {\n    width: 450px;\n  }\n`;\n\nconst Login = () => {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    controls: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Mail Address'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password'\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 6\n        },\n        valid: false,\n        touched: false\n      }\n    }\n  });\n\n  const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  };\n\n  return /*#__PURE__*/React.createElement(StyledDiv, {\n    className: `${classes.root} card-shadow text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Login`)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \" use your email and password provided by your organization \"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mt-4\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"text\",\n    name: \"username\",\n    value: username,\n    placeholder: \"Username\",\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"button-primary mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-link mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Login Trouble ? \", ' ', /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Reset password\")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/Components/Pages/Login/login.js"],"names":["React","useState","Link","Helmet","WEBSITE_NAME","useStyles","styled","StyledDiv","div","Login","classes","state","setState","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","checkValidity","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","root","onSubmit","username","onChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport { WEBSITE_NAME } from '../../../utils/websiteData';\r\nimport useStyles from './login-jss';\r\nimport styled from 'styled-components';\r\nconst StyledDiv = styled.div`\r\n  width: 60%;\r\n  margin: 16px auto;\r\n  border: 1px solid #eee;\r\n  box-shadow: 0 2px 3px #ccc;\r\n  padding: 16px;\r\n  text-align: center;\r\n  \r\n  @media (min-width: 500px) {\r\n    width: 450px;\r\n  }\r\n`;\r\n\r\n\r\nconst Login = () => {\r\n\r\n\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    controls: {\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'Mail Address'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'Password'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        }\r\n    }\r\n});\r\n\r\nconst checkValidity = ( value , rules ) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n      return true;\r\n  }\r\n  \r\n  if (rules.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n  }\r\n\r\n  if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid\r\n  }\r\n\r\n  if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid\r\n  }\r\n\r\n  if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid\r\n  }\r\n\r\n  return isValid;\r\n};\r\n\r\n  return (\r\n    <StyledDiv className={`${classes.root} card-shadow text-center`}>\r\n      <Helmet>\r\n        <title>{`${WEBSITE_NAME} | Login`}</title>\r\n      </Helmet>\r\n      <div >\r\n        <h1 className='title'>Sign in</h1>\r\n          <span className='subtitle'> use your email and password provided by your organization </span>\r\n        <form className='mt-4' onSubmit={onSubmit}>\r\n          <div className='form-group'>\r\n            <input\r\n              className='input-text'\r\n              type='text'\r\n              name='username'\r\n              value={username}\r\n              placeholder='Username'\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <input\r\n              className='input-text'\r\n              type='password'\r\n              name='password'\r\n              value={password}\r\n              placeholder='Password'\r\n              onChange={onChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n\r\n          <input\r\n            type='submit'\r\n            value='Login'\r\n            className='button-primary mt-3'\r\n          />\r\n        </form>\r\n        <p className='form-link mt-3'>\r\n          Login Trouble ? {' '}\r\n          <Link to='/login'>\r\n            <span>Reset password</span>\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </StyledDiv>\r\n  );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}