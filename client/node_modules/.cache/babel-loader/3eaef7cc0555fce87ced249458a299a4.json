{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\Components\\\\Pages\\\\Requests\\\\Request.js\";\nimport React, { useState } from \"react\"; //import useStyles from \"./Request-jss\";\n\nimport { Helmet } from \"react-helmet\";\nimport { WEBSITE_NAME } from \"../../../utils/websiteData\";\nimport InputElement from './InputElement';\nimport useStyles from \"./Request-jss\";\n\nconst Request = () => {\n  const [state, setState] = useState({\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your Name'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Street'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'ZIP Code'\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5,\n          isNumeric: true\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Country'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Your E-Mail'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: 'select',\n        elementConfig: {\n          options: [{\n            value: 'fastest',\n            displayValue: 'Fastest'\n          }, {\n            value: 'cheapest',\n            displayValue: 'Cheapest'\n          }]\n        },\n        value: '',\n        validation: {},\n        valid: true\n      }\n    },\n    formIsValid: false,\n    loading: false\n  });\n\n  orderHandler = event => {\n    event.preventDefault();\n    setState({\n      loading: true\n    });\n    const formData = {};\n\n    for (let formElementIdentifier in state.orderForm) {\n      formData[formElementIdentifier] = state.orderForm[formElementIdentifier].value;\n    }\n\n    const order = {\n      ingredients: props.ingredients,\n      price: props.price,\n      orderData: formData\n    };\n    axios.post('/orders.json', order).then(response => {\n      setState({\n        loading: false\n      });\n      props.history.push('/');\n    }).catch(error => {\n      setState({\n        loading: false\n      });\n    });\n  };\n\n  checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  };\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedOrderForm = { ...state.orderForm\n    };\n    const updatedFormElement = { ...updatedOrderForm[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\n    updatedFormElement.touched = true;\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\n    let formIsValid = true;\n\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n\n    setState({\n      orderForm: updatedOrderForm,\n      formIsValid: formIsValid\n    });\n  };\n\n  const formElementsArray = [];\n\n  for (let key in state.orderForm) {\n    formElementsArray.push({\n      id: key,\n      config: state.orderForm[key]\n    });\n  }\n\n  let form = /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: orderHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.config.elementType,\n    elementConfig: formElement.config.elementConfig,\n    value: formElement.config.value,\n    invalid: !formElement.config.valid,\n    shouldValidate: formElement.config.validation,\n    touched: formElement.config.touched,\n    changed: event => inputChangedHandler(event, formElement.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    btnType: \"Success\",\n    disabled: !state.formIsValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, \"ORDER\"));\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Requests`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.page} card-shadow text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"Add a Request\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, \"Choose your offer  \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"form\", {\n    className: \"add-form mx-auto mt-4\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.ContactData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, \"Enter your Contact Data\"), form), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add request\",\n    className: \"button-primary mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default Request;\n/*<div className='form-group'>\r\n                <input\r\n                  id='images'\r\n                  className='input-text'\r\n                  type='file'\r\n                  name='images'\r\n                  placeholder='Choose file'\r\n                  onChange={onChangeImages}\r\n                  multiple /> \r\n                <label htmlFor='images'>\r\n                </label>\r\n              </div>\r\n              \r\n              \r\n              <div className='form-group'>\r\n                <textarea\r\n                  className='input-text'\r\n                  id='content'\r\n                  name='content'\r\n                  placeholder='Content'\r\n                  onChange={onChange}\r\n                  rows='3'\r\n                ></textarea>\r\n              </div>*/","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/Components/Pages/Requests/Request.js"],"names":["React","useState","Helmet","WEBSITE_NAME","InputElement","useStyles","Request","state","setState","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","options","displayValue","formIsValid","loading","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ingredients","props","price","orderData","axios","post","then","response","history","push","catch","error","checkValidity","rules","isValid","trim","length","pattern","test","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","key","id","config","form","map","formElement","classes","page","onSubmit","ContactData"],"mappings":"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","sourcesContent":["import React, { useState }  from \"react\";\r\n//import useStyles from \"./Request-jss\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { WEBSITE_NAME } from \"../../../utils/websiteData\";\r\nimport InputElement from './InputElement';\r\nimport useStyles from \"./Request-jss\";\r\n\r\n\r\n\r\n const Request = () => {\r\n\r\n  const [ state , setState ] = useState({\r\n    orderForm: {\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Your Name'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        street: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Street'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        zipCode: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'ZIP Code'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 5,\r\n                maxLength: 5,\r\n                isNumeric: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        country: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Country'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'Your E-Mail'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        deliveryMethod: {\r\n            elementType: 'select',\r\n            elementConfig: {\r\n                options: [\r\n                    {value: 'fastest', displayValue: 'Fastest'},\r\n                    {value: 'cheapest', displayValue: 'Cheapest'}\r\n                ]\r\n            },\r\n            value: '',\r\n            validation: {},\r\n            valid: true\r\n        }\r\n    },\r\n    formIsValid: false,\r\n    loading: false\r\n})\r\n\r\norderHandler = ( event ) => {\r\n  event.preventDefault();\r\n  setState( { loading: true } );\r\n  const formData = {};\r\n  for (let formElementIdentifier in state.orderForm) {\r\n      formData[formElementIdentifier] = state.orderForm[formElementIdentifier].value;\r\n  }\r\n  const order = {\r\n      ingredients: props.ingredients,\r\n      price: props.price,\r\n      orderData: formData\r\n  }\r\n  axios.post( '/orders.json', order )\r\n      .then( response => {\r\n          setState( { loading: false } );\r\n          props.history.push( '/' );\r\n      } )\r\n      .catch( error => {\r\n          setState( { loading: false } );\r\n      } );\r\n}\r\n\r\ncheckValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (!rules) {\r\n      return true;\r\n  }\r\n  \r\n  if (rules.required) {\r\n      isValid = value.trim() !== '' && isValid;\r\n  }\r\n\r\n  if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid\r\n  }\r\n\r\n  if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid\r\n  }\r\n\r\n  if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid\r\n  }\r\n\r\n  if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid\r\n  }\r\n\r\n  return isValid;\r\n}\r\n\r\ninputChangedHandler = (event, inputIdentifier) => {\r\n  const updatedOrderForm = {\r\n      ...state.orderForm\r\n  };\r\n  const updatedFormElement = { \r\n      ...updatedOrderForm[inputIdentifier]\r\n  };\r\n  updatedFormElement.value = event.target.value;\r\n  updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n  updatedFormElement.touched = true;\r\n  updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n  \r\n  let formIsValid = true;\r\n  for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n  }\r\n  setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n}\r\n\r\nconst formElementsArray = [];\r\n        for (let key in state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n          <form onSubmit={orderHandler}>\r\n              {formElementsArray.map(formElement => (\r\n                  <Input \r\n                      key={formElement.id}\r\n                      elementType={formElement.config.elementType}\r\n                      elementConfig={formElement.config.elementConfig}\r\n                      value={formElement.config.value}\r\n                      invalid={!formElement.config.valid}\r\n                      shouldValidate={formElement.config.validation}\r\n                      touched={formElement.config.touched}\r\n                      changed={(event) => inputChangedHandler(event, formElement.id)} />\r\n              ))}\r\n              <Button btnType=\"Success\" disabled={!state.formIsValid}>ORDER</Button>\r\n          </form>\r\n      );\r\n\r\n  const classes = useStyles() ;\r\n   \r\n    return(\r\n      <>\r\n      \r\n      <Helmet>\r\n        <title>{`${WEBSITE_NAME} | Requests`}</title>\r\n      </Helmet>\r\n      <div className={`${classes.page} card-shadow text-center`} >\r\n        <h2 className='title'>Add a Request</h2>\r\n        <h5 className='subtitle'>\r\n          Choose your offer  </h5>\r\n        <div className='row'>\r\n          <div className='col'>\r\n            {' '}\r\n            <form className='add-form mx-auto mt-4' onSubmit={onSubmit}>\r\n\r\n\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div> \r\n\r\n\r\n                <input\r\n                  type='submit'\r\n                  value='Add request'\r\n                  className='button-primary mt-3'\r\n                />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n    )\r\n}\r\nexport default Request ;\r\n\r\n/*<div className='form-group'>\r\n                <input\r\n                  id='images'\r\n                  className='input-text'\r\n                  type='file'\r\n                  name='images'\r\n                  placeholder='Choose file'\r\n                  onChange={onChangeImages}\r\n                  multiple /> \r\n                <label htmlFor='images'>\r\n                </label>\r\n              </div>\r\n              \r\n              \r\n              <div className='form-group'>\r\n                <textarea\r\n                  className='input-text'\r\n                  id='content'\r\n                  name='content'\r\n                  placeholder='Content'\r\n                  onChange={onChange}\r\n                  rows='3'\r\n                ></textarea>\r\n              </div>*/\r\n  "]},"metadata":{},"sourceType":"module"}