{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\dirlkhir-master\\\\src\\\\components\\\\pages\\\\posts\\\\requests\\\\AddRequest.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet'; // Actions\n\nimport { getStates, getStateCities, clearCities } from '../../../../redux/actions/locationActions';\nimport { addPost, getCategories, clearErrors } from '../../../../redux/actions/postActions';\nimport { setAlert } from '../../../../redux/actions/alertActions'; // Utils\n\nimport { WEBSITE_NAME } from '../../../../utils/websiteData'; // Components\n\nimport Spinner from '../../../layout/Spinner';\nimport useStyles from '../posts-jss';\n\nconst AddRequest = props => {\n  const classes = useStyles();\n  const {\n    categories,\n    wilayas,\n    cities,\n    loading_add_post,\n    loading_categories,\n    error,\n    loading_states,\n    loading_state_cities,\n    addPost,\n    getCategories,\n    getStates,\n    getStateCities,\n    clearCities,\n    clearErrors,\n    setAlert\n  } = props;\n  const [post, setPost] = useState({\n    title: '',\n    category: 0,\n    wilaya: 0,\n    city: 0,\n    content: '',\n    images: null\n  });\n  const {\n    title,\n    category,\n    wilaya,\n    city,\n    content,\n    images\n  } = post;\n  useEffect(() => {\n    getCategories();\n    getStates(); //eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error]);\n  useEffect(() => {\n    if (wilaya !== 0 && wilaya !== '0') {\n      getStateCities(wilaya);\n    } else {\n      clearCities();\n    }\n\n    setPost({ ...post,\n      city: 0\n    }); //eslint-disable-next-line\n  }, [wilaya]);\n\n  const onChange = e => setPost({ ...post,\n    [e.target.name]: e.target.value\n  });\n\n  const onChangeImages = e => setPost({ ...post,\n    images: e.target.files\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (title === '') {\n      setAlert('Title is empty');\n      return;\n    }\n\n    if (category === 0 || category === '0') {\n      setAlert('Please select a category');\n      return;\n    }\n\n    if (city === 0 || city === '0') {\n      setAlert('Please select a city');\n      return;\n    }\n\n    if (content === '') {\n      setAlert('Content is empty');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('post_category', category);\n    formData.append('post_type', 2);\n    formData.append('city', city);\n    formData.append('content', content);\n    if (images) for (let i = 0; i < images.length; i++) {\n      formData.append('images', images[i]);\n    }\n    await addPost(formData);\n    window.location.href = '/posts';\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Add request`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.page} card-shadow text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Add a Request\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"Ask for donation from your organization\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"form\", {\n    className: \"add-form mx-auto mt-4\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"text\",\n    id: \"title\",\n    name: \"title\",\n    value: title,\n    placeholder: \"Title\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    name: \"category\",\n    value: category,\n    onChange: onChange,\n    className: \"custom-select input-select input-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, loading_categories ? /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, \"Type\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }, \"All categories\"), categories !== null && categories.length > 0 && categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    key: category.id,\n    value: category.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 27\n    }\n  }, category.label))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"wilaya\",\n    name: \"wilaya\",\n    value: wilaya,\n    onChange: onChange,\n    className: \"custom-select input-select input-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, loading_states ? /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, \"Select a wilaya\"), wilayas !== null && wilayas.length > 0 && wilayas.map(wilaya => /*#__PURE__*/React.createElement(\"option\", {\n    key: wilaya.code,\n    value: wilaya.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 27\n    }\n  }, wilaya.label))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"city\",\n    name: \"city\",\n    value: city,\n    onChange: onChange,\n    className: \"custom-select input-select input-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, loading_state_cities ? /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 23\n    }\n  }, \"Select a city\"), cities !== null && cities.length > 0 && cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city.code,\n    value: city.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 27\n    }\n  }, city.label))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"input-text\",\n    id: \"content\",\n    name: \"content\",\n    value: content,\n    placeholder: \"Content\",\n    onChange: onChange,\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"images\",\n    type: \"file\",\n    name: \"images\",\n    onChange: onChangeImages,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, \"Choose Images (\", images ? images.length : 0, \")\")), loading_add_post ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add request\",\n    className: \"button-primary mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nconst mapSateToProps = state => ({\n  categories: state.posts.categories,\n  loading_add_post: state.posts.loading_add_post,\n  loading_categories: state.posts.loading_categories,\n  error: state.posts.error,\n  wilayas: state.locations.states,\n  cities: state.locations.cities,\n  loading_states: state.locations.loading_states,\n  loading_state_cities: state.locations.loading_state_cities\n});\n\nexport default connect(mapSateToProps, {\n  addPost,\n  getCategories,\n  clearErrors,\n  getStates,\n  getStateCities,\n  clearCities,\n  setAlert\n})(AddRequest);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/dirlkhir-master/src/components/pages/posts/requests/AddRequest.js"],"names":["React","useState","useEffect","connect","Helmet","getStates","getStateCities","clearCities","addPost","getCategories","clearErrors","setAlert","WEBSITE_NAME","Spinner","useStyles","AddRequest","props","classes","categories","wilayas","cities","loading_add_post","loading_categories","error","loading_states","loading_state_cities","post","setPost","title","category","wilaya","city","content","images","onChange","e","target","name","value","onChangeImages","files","onSubmit","preventDefault","formData","FormData","append","i","length","window","location","href","page","map","id","label","code","mapSateToProps","state","posts","locations","states"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\n\n// Actions\nimport {\n  getStates,\n  getStateCities,\n  clearCities,\n} from '../../../../redux/actions/locationActions';\nimport {\n  addPost,\n  getCategories,\n  clearErrors,\n} from '../../../../redux/actions/postActions';\nimport { setAlert } from '../../../../redux/actions/alertActions';\n\n// Utils\nimport { WEBSITE_NAME } from '../../../../utils/websiteData';\n\n// Components\nimport Spinner from '../../../layout/Spinner';\n\nimport useStyles from '../posts-jss';\n\nconst AddRequest = (props) => {\n  const classes = useStyles();\n\n  const {\n    categories,\n    wilayas,\n    cities,\n    loading_add_post,\n    loading_categories,\n    error,\n    loading_states,\n    loading_state_cities,\n    addPost,\n    getCategories,\n    getStates,\n    getStateCities,\n    clearCities,\n    clearErrors,\n    setAlert,\n  } = props;\n\n  const [post, setPost] = useState({\n    title: '',\n    category: 0,\n    wilaya: 0,\n    city: 0,\n    content: '',\n    images: null,\n  });\n\n  const { title, category, wilaya, city, content, images } = post;\n\n  useEffect(() => {\n    getCategories();\n    getStates();\n\n    //eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    }\n\n    // eslint-disable-next-line\n  }, [error]);\n\n  useEffect(() => {\n    if (wilaya !== 0 && wilaya !== '0') {\n      getStateCities(wilaya);\n    } else {\n      clearCities();\n    }\n\n    setPost({ ...post, city: 0 });\n\n    //eslint-disable-next-line\n  }, [wilaya]);\n\n  const onChange = (e) => setPost({ ...post, [e.target.name]: e.target.value });\n\n  const onChangeImages = (e) => setPost({ ...post, images: e.target.files });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (title === '') {\n      setAlert('Title is empty');\n      return;\n    }\n\n    if (category === 0 || category === '0') {\n      setAlert('Please select a category');\n      return;\n    }\n\n    if (city === 0 || city === '0') {\n      setAlert('Please select a city');\n      return;\n    }\n\n    if (content === '') {\n      setAlert('Content is empty');\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append('title', title);\n    formData.append('post_category', category);\n    formData.append('post_type', 2);\n    formData.append('city', city);\n    formData.append('content', content);\n\n    if (images)\n      for (let i = 0; i < images.length; i++) {\n        formData.append('images', images[i]);\n      }\n\n    await addPost(formData);\n\n    window.location.href = '/posts';\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | Add request`}</title>\n      </Helmet>\n      <div className={`${classes.page} card-shadow text-center`}>\n        <h3 className='title'>Add a Request</h3>\n        <h6 className='subtitle'>\n          Ask for donation from your organization\n        </h6>\n\n        <div className='row'>\n          <div className='col'>\n            {' '}\n            <form className='add-form mx-auto mt-4' onSubmit={onSubmit}>\n              <div className='form-group'>\n                <input\n                  className='input-text'\n                  type='text'\n                  id='title'\n                  name='title'\n                  value={title}\n                  placeholder='Title'\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className='form-group'>\n                <select\n                  id='category'\n                  name='category'\n                  value={category}\n                  onChange={onChange}\n                  className='custom-select input-select input-text'\n                >\n                  {loading_categories ? (\n                    <option value='0'>Type</option>\n                  ) : (\n                    <>\n                      <option value='0'>All categories</option>\n                      {categories !== null &&\n                        categories.length > 0 &&\n                        categories.map((category) => (\n                          <option key={category.id} value={category.id}>\n                            {category.label}\n                          </option>\n                        ))}\n                    </>\n                  )}\n                </select>\n              </div>\n\n              <div className='form-group'>\n                <select\n                  id='wilaya'\n                  name='wilaya'\n                  value={wilaya}\n                  onChange={onChange}\n                  className='custom-select input-select input-text'\n                >\n                  {loading_states ? (\n                    <option value='0'>Loading...</option>\n                  ) : (\n                    <>\n                      <option value='0'>Select a wilaya</option>\n                      {wilayas !== null &&\n                        wilayas.length > 0 &&\n                        wilayas.map((wilaya) => (\n                          <option key={wilaya.code} value={wilaya.code}>\n                            {wilaya.label}\n                          </option>\n                        ))}\n                    </>\n                  )}\n                </select>\n              </div>\n\n              <div className='form-group'>\n                <select\n                  id='city'\n                  name='city'\n                  value={city}\n                  onChange={onChange}\n                  className='custom-select input-select input-text'\n                >\n                  {loading_state_cities ? (\n                    <option value='0'>Loading...</option>\n                  ) : (\n                    <>\n                      <option value='0'>Select a city</option>\n                      {cities !== null &&\n                        cities.length > 0 &&\n                        cities.map((city) => (\n                          <option key={city.code} value={city.id}>\n                            {city.label}\n                          </option>\n                        ))}\n                    </>\n                  )}\n                </select>\n              </div>\n\n              <div className='form-group'>\n                <textarea\n                  className='input-text'\n                  id='content'\n                  name='content'\n                  value={content}\n                  placeholder='Content'\n                  onChange={onChange}\n                  rows='3'\n                ></textarea>\n              </div>\n\n              <div className='form-group'>\n                <input\n                  id='images'\n                  type='file'\n                  name='images'\n                  onChange={onChangeImages}\n                  multiple\n                />\n                <label htmlFor='images'>\n                  Choose Images ({images ? images.length : 0})\n                </label>\n              </div>\n              {loading_add_post ? (\n                <Spinner />\n              ) : (\n                <input\n                  type='submit'\n                  value='Add request'\n                  className='button-primary mt-3'\n                />\n              )}\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapSateToProps = (state) => ({\n  categories: state.posts.categories,\n  loading_add_post: state.posts.loading_add_post,\n  loading_categories: state.posts.loading_categories,\n  error: state.posts.error,\n  wilayas: state.locations.states,\n  cities: state.locations.cities,\n  loading_states: state.locations.loading_states,\n  loading_state_cities: state.locations.loading_state_cities,\n});\n\nexport default connect(mapSateToProps, {\n  addPost,\n  getCategories,\n  clearErrors,\n  getStates,\n  getStateCities,\n  clearCities,\n  setAlert,\n})(AddRequest);\n"]},"metadata":{},"sourceType":"module"}