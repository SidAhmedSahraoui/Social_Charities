{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\master\\\\client\\\\src\\\\components\\\\pages\\\\Dropdown\\\\Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { Container, Form, Button } from 'react-bootstrap'; // Actions\n\nimport { loadUserProfile } from '../../../redux/actions/userActions';\nimport { sendMessage, clearErrors } from '../../../redux/actions/messageActions';\nimport { setAlert } from '../../../redux/actions/alertActions'; // App layout components\n\nimport Spinner from '../../layout/Spinner'; // Utils\n\nimport { WEBSITE_NAME } from '../../../utils/Data';\n\nconst Profile = props => {\n  const {\n    match,\n    user,\n    user_profile,\n    loading,\n    loading_send,\n    error_send,\n    loadUserProfile,\n    sendMessage,\n    clearErrors,\n    setAlert\n  } = props;\n  const {\n    _id,\n    name,\n    username,\n    bio,\n    allow_messages\n  } = user_profile || {};\n  const [message, setMessage] = useState('');\n  const [is_sent, setIsSent] = useState(false);\n\n  const onChange = e => setMessage(e.target.value);\n\n  useEffect(() => {\n    loadUserProfile(match.params.username); // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    loadUserProfile(match.params.username); // eslint-disable-next-line\n  }, [match]);\n  useEffect(() => {\n    if (error_send && error_send.length) {\n      if (typeof error_send === 'object') {\n        error_send.forEach(err => {\n          setAlert(err.msg, 'danger');\n        });\n      } else {\n        setAlert(error_send, 'danger');\n      }\n\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error_send]);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (message === '') {\n      setAlert('Message cannot be empty', 'danger');\n      return;\n    }\n\n    await sendMessage({\n      user_id: _id,\n      content: message\n    });\n\n    if (!error_send) {\n      setIsSent(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | ${loading ? 'Loading...' : username || 'Not found'}`)), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-inner px-3 mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }) : !user_profile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"not-found mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"404\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"This page does not exist!\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-details mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, name || username), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Position : \", bio)), !user || user._id !== _id ? allow_messages ? /*#__PURE__*/React.createElement(Form, {\n    className: \"form form-container mt-4\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }\n  }, \"Your message\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    name: \"message\",\n    value: message,\n    onChange: onChange,\n    disabled: is_sent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"links d-flex align-items-center justify-content-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, loading_send ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }) : is_sent ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-sent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, \"Message sent!\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Send\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Receiving messages is disabled\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"share mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  })))));\n};\n\nconst mapSateToProps = state => ({\n  user: state.auth.user,\n  user_profile: state.user.user_profile,\n  loading: state.user.loading,\n  loading_send: state.message.loading_send,\n  error_send: state.message.error_send\n});\n\nexport default connect(mapSateToProps, {\n  loadUserProfile,\n  sendMessage,\n  clearErrors,\n  setAlert\n})(Profile);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/master/client/src/components/pages/Dropdown/Profile.js"],"names":["React","useState","useEffect","connect","Helmet","Container","Form","Button","loadUserProfile","sendMessage","clearErrors","setAlert","Spinner","WEBSITE_NAME","Profile","props","match","user","user_profile","loading","loading_send","error_send","_id","name","username","bio","allow_messages","message","setMessage","is_sent","setIsSent","onChange","e","target","value","params","length","forEach","err","msg","onSubmit","preventDefault","user_id","content","mapSateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { Container, Form, Button } from 'react-bootstrap';\n\n// Actions\nimport { loadUserProfile } from '../../../redux/actions/userActions';\nimport { sendMessage, clearErrors } from '../../../redux/actions/messageActions';\nimport { setAlert } from '../../../redux/actions/alertActions';\n\n// App layout components\nimport Spinner from '../../layout/Spinner';\n\n// Utils\nimport { WEBSITE_NAME } from '../../../utils/Data';\n\n\nconst Profile = (props) => {\n  const {\n    match,\n    user,\n    user_profile,\n    loading,\n    loading_send,\n    error_send,\n    loadUserProfile,\n    sendMessage,\n    clearErrors,\n    setAlert,\n  } = props;\n  const { _id, name, username, bio, allow_messages } =\n    user_profile || {};\n\n  const [message, setMessage] = useState('');\n  const [is_sent, setIsSent] = useState(false);\n\n  const onChange = (e) => setMessage(e.target.value);\n\n  useEffect(() => {\n    loadUserProfile(match.params.username);\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    loadUserProfile(match.params.username);\n\n    // eslint-disable-next-line\n  }, [match]);\n\n  useEffect(() => {\n    if (error_send && error_send.length) {\n      if (typeof error_send === 'object') {\n        error_send.forEach((err) => {\n          setAlert(err.msg, 'danger');\n        });\n      } else {\n        setAlert(error_send, 'danger');\n      }\n\n      clearErrors();\n    }\n\n    // eslint-disable-next-line\n  }, [error_send]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (message === '') {\n      setAlert('Message cannot be empty', 'danger');\n      return;\n    }\n\n    await sendMessage({ user_id: _id, content: message });\n\n    if (!error_send) {\n      setIsSent(true);\n    }\n  };\n \n\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | ${\n          loading ? 'Loading...' : username || 'Not found'\n        }`}</title>\n      </Helmet>\n      <Container>\n        <div className='container-inner px-3 mt-4 text-center'>\n          {loading ? (\n            <Spinner />\n          ) : !user_profile ? (\n            <div className='not-found mx-auto'>\n              <h1 className='title'>404</h1>\n              <h5 className='subtitle'>This page does not exist!</h5>\n            </div>\n          ) : (\n            <div className='profile mx-auto'>\n              \n\n              <div className='user-details mt-4'>\n                <h3 className='name'>{name || username}</h3>\n                <p className='title'>\n                  Position : { bio }\n                </p>\n                \n              </div>\n\n              {!user || user._id !== _id ? (\n                allow_messages ? (\n                  <Form\n                    className='form form-container mt-4'\n                    onSubmit={onSubmit}\n                  >\n                    <Form.Group>\n                      <Form.Label>Your message</Form.Label>\n                      <Form.Control\n                        as='textarea'\n                        rows='3'\n                        name='message'\n                        value={message}\n                        onChange={onChange}\n                        disabled={is_sent}\n                      />\n                    </Form.Group>\n\n                    <div className='links d-flex align-items-center justify-content-center mt-4'>\n                      {loading_send ? (\n                        <Spinner />\n                      ) : is_sent ? (\n                        <div className='message-sent'>Message sent!</div>\n                      ) : (\n                        <Button variant='primary' type='submit'>\n                          Send\n                        </Button>\n                      )}\n                    </div>\n                  </Form>\n                ) : (\n                  <div className='mt-4'>\n                    <h6>Receiving messages is disabled</h6>\n                  </div>\n                )\n              ) : (\n                <div className='share mt-5'>\n                  \n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </Container>\n    </>\n  );\n};\n\nconst mapSateToProps = (state) => ({\n  user: state.auth.user,\n  user_profile: state.user.user_profile,\n  loading: state.user.loading,\n  loading_send: state.message.loading_send,\n  error_send: state.message.error_send,\n});\n\nexport default connect(mapSateToProps, {\n  loadUserProfile,\n  sendMessage,\n  clearErrors,\n  setAlert,\n})(Profile);\n"]},"metadata":{},"sourceType":"module"}