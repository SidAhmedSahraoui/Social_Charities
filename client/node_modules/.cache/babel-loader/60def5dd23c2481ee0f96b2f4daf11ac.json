{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\Full-Project\\\\client\\\\src\\\\components\\\\pages\\\\Requests\\\\Request.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { Container, Form } from 'react-bootstrap';\nimport useStyles from './Request-jss'; // Actions\n\nimport { request, clearErrors } from '../../../redux/actions/requestActions';\nimport { setAlert } from '../../../redux/actions/alertActions'; // App layout components\n\nimport Spinner from '../../layout/Spinner/Spinner';\nimport Input from './InputElement'; // Utils\n\nimport { WEBSITE_NAME } from '../../../utils/Data';\n\nconst Request = props => {\n  const {\n    error,\n    loading,\n    request,\n    clearErrors,\n    setAlert\n  } = props;\n  const [req, setReq] = useState({\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Full Name'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Your E-Mail'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      category: {\n        elementType: 'select',\n        elementConfig: {\n          options: [{\n            value: 'All categories',\n            displayValue: 'All categories'\n          }, {\n            value: 'Social aid',\n            displayValue: 'Social aid'\n          }, {\n            value: 'Health services',\n            displayValue: 'Health services'\n          }, {\n            value: 'Solidarity',\n            displayValue: 'Solidarity'\n          }, {\n            value: 'Other services',\n            displayValue: 'Other services'\n          }]\n        },\n        value: '',\n        validation: {},\n        valid: true\n      },\n      offers: {\n        elementType: 'select',\n        elementConfig: {\n          options: [{\n            value: 'All offers',\n            displayValue: 'All offers'\n          }]\n        },\n        value: '',\n        validation: {},\n        valid: true\n      }\n    },\n    formIsValid: false,\n    loading: false\n  });\n  const {\n    name,\n    email,\n    category,\n    offer\n  } = req;\n\n  const orderHandler = event => {\n    event.preventDefault();\n    setReq({\n      loading: true\n    });\n    const formData = {};\n\n    for (let formElementIdentifier in req.orderForm) {\n      formData[formElementIdentifier] = req.orderForm[formElementIdentifier].value;\n    }\n  };\n\n  const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  };\n\n  const inputChangedHandler = (event, inputIdentifier) => {\n    const updatedOrderForm = { ...req.orderForm\n    };\n    const updatedFormElement = { ...updatedOrderForm[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\n    updatedFormElement.touched = true;\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n    if (updatedOrderForm.category.value === 'All categories') {\n      updatedOrderForm.offers.elementConfig.options = [];\n    }\n\n    if (updatedOrderForm.category.value === 'Social aid') {\n      updatedOrderForm.offers.elementConfig.options = [{\n        value: 'Retirement',\n        displayValue: 'Retirement'\n      }, {\n        value: 'Death',\n        displayValue: 'Death'\n      }, {\n        value: 'Marriage',\n        displayValue: 'Marriage'\n      }, {\n        value: 'New born',\n        displayValue: 'New born'\n      }, {\n        value: 'Circumcision',\n        displayValue: 'Circumcision'\n      }];\n    }\n\n    ;\n\n    if (updatedOrderForm.category.value === 'Health services') {\n      updatedOrderForm.offers.elementConfig.options = [{\n        value: 'Surgery operations',\n        displayValue: 'Surgery operations'\n      }, {\n        value: 'Hammamat( mineral bath )',\n        displayValue: 'Hammamat( mineral bath )'\n      }];\n    }\n\n    ;\n\n    if (updatedOrderForm.category.value === 'Solidarity') {\n      updatedOrderForm.offers.elementConfig.options = [{\n        value: 'Aids for accident and catastrophe',\n        displayValue: 'Aids for accident and catastrophe'\n      }, {\n        value: ' Aids for the exceptional cases',\n        displayValue: ' Aids for the exceptional cases'\n      }];\n    }\n\n    ;\n\n    if (updatedOrderForm.category.value === 'Other services') {\n      updatedOrderForm.offers.elementConfig.options = [{\n        value: 'Exceptional loan',\n        displayValue: 'Exceptional loan'\n      }, {\n        value: 'Sport and cultural activities',\n        displayValue: 'Sport and cultural activities'\n      }];\n    }\n\n    ;\n\n    if (updatedOrderForm.category.value === 'All categories') {\n      updatedOrderForm.offers.elementConfig.options = [{\n        value: '',\n        displayValue: 'All types'\n      }];\n    }\n\n    let formIsValid = true;\n\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n\n    setReq({\n      orderForm: updatedOrderForm,\n      formIsValid: formIsValid\n    });\n  };\n\n  const formElementsArray = [];\n\n  for (let key in req.orderForm) {\n    formElementsArray.push({\n      id: key,\n      config: req.orderForm[key]\n    });\n  }\n\n  let form = /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: orderHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.config.elementType,\n    elementConfig: formElement.config.elementConfig,\n    value: formElement.config.value,\n    invalid: !formElement.config.valid,\n    shouldValidate: formElement.config.validation,\n    touched: formElement.config.touched,\n    changed: event => inputChangedHandler(event, formElement.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  })));\n  /*const request = {\r\n    name = req.orderForm.name.value ,\r\n    email = req.orderForm.email.value ,\r\n    category = req.orderForm.category.value ,\r\n    offer = req.orderForm.offer.value\r\n  } */\n\n  const onChange = e => setReq({ ...req,\n    [e.target.name]: e.target.value\n  });\n\n  useEffect(() => {\n    if (error && error.length) {\n      if (typeof error === 'object') {\n        error.forEach(err => {\n          setAlert(err.msg, 'danger');\n        });\n      } else {\n        setAlert(error, 'danger');\n      }\n\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error]);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (req.orderForm.category === '' || req.orderForm.offer === '' || req.orderForm.email === '' || req.orderForm.name === '') {\n      setAlert('Please enter all fields', 'danger');\n    } else {\n      let name = req.orderForm.name.value;\n      let email = req.orderForm.email.value;\n      let category = req.orderForm.category.value;\n      let offer = req.orderForm.offer.value;\n      await request({\n        name,\n        email,\n        category,\n        offer\n      });\n    }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Request`)), /*#__PURE__*/React.createElement(Container, {\n    className: `${classes.page} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-inner px-3 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3 text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, \"Add a request\")), /*#__PURE__*/React.createElement(Form, {\n    className: \"form form-container\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, \" Email \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }, \" Username \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    value: username,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, \" Password \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, \" Password confirmation \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password confirmation\",\n    name: \"password2\",\n    value: password2,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"links d-flex align-items-center justify-content-between mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  }, \"Have an account?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    className: \"link-secondary\",\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }\n  }, \"Sign in\")), loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-primary\",\n    type: \"submit\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 19\n    }\n  }, \"Create\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-primary\",\n    type: \"submit\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, \"send\")))));\n};\n\nconst mapSateToProps = state => ({\n  error: state.auth.error,\n  loading: state.auth.loading\n});\n\nexport default connect(mapSateToProps, {\n  request,\n  clearErrors,\n  setAlert\n})(Request);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/Full-Project/client/src/components/pages/Requests/Request.js"],"names":["React","useEffect","useState","connect","Helmet","Container","Form","useStyles","request","clearErrors","setAlert","Spinner","Input","WEBSITE_NAME","Request","props","error","loading","req","setReq","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","email","isEmail","category","options","displayValue","offers","formIsValid","offer","orderHandler","event","preventDefault","formData","formElementIdentifier","checkValidity","rules","isValid","trim","minLength","length","maxLength","pattern","test","isNumeric","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","key","push","id","config","form","map","formElement","onChange","e","forEach","err","msg","onSubmit","classes","page","username","password","password2","mapSateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Helmet from 'react-helmet';\r\nimport { Container , Form } from 'react-bootstrap';\r\nimport useStyles from './Request-jss';\r\n\r\n// Actions\r\nimport { request, clearErrors } from '../../../redux/actions/requestActions';\r\nimport { setAlert } from '../../../redux/actions/alertActions';\r\n\r\n// App layout components\r\nimport Spinner from '../../layout/Spinner/Spinner';\r\nimport Input from './InputElement'\r\n// Utils\r\nimport { WEBSITE_NAME } from '../../../utils/Data';\r\n\r\n\r\nconst Request = (props) => {\r\n  const {\r\n    error,\r\n    loading,\r\n    request,\r\n    clearErrors,\r\n    setAlert,\r\n  } = props;\r\n\r\n  const [req, setReq] = useState({\r\n    orderForm: {\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Full Name'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'Your E-Mail'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        category: {\r\n            elementType: 'select',\r\n            elementConfig: {\r\n                options: [\r\n                    {value: 'All categories', displayValue: 'All categories'},\r\n                    {value: 'Social aid', displayValue: 'Social aid'},\r\n                    {value: 'Health services', displayValue: 'Health services'},\r\n                    {value: 'Solidarity', displayValue: 'Solidarity'},\r\n                    {value: 'Other services', displayValue: 'Other services'}\r\n                ]\r\n            },\r\n            value: '',\r\n            validation: {},\r\n            valid: true\r\n        },\r\n        offers: {\r\n            elementType: 'select',\r\n            elementConfig: {\r\n                options: [\r\n                    {value: 'All offers', displayValue: 'All offers'},\r\n                ]\r\n            },\r\n            value: '',\r\n            validation: {},\r\n            valid: true\r\n        }\r\n    },\r\n    formIsValid: false,\r\n    loading : false\r\n});\r\n\r\n  const { name, email, category, offer } = req ;\r\n\r\n \r\n\r\n  const orderHandler = ( event ) => {\r\n    event.preventDefault();\r\n    setReq( { loading: true } );\r\n    const formData = {};\r\n    for (let formElementIdentifier in req.orderForm) {\r\n        formData[formElementIdentifier] = req.orderForm[formElementIdentifier].value;\r\n    }  \r\n}\r\n\r\nconst checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n    \r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nconst inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedOrderForm = {\r\n        ...req.orderForm\r\n    };\r\n    const updatedFormElement = { \r\n        ...updatedOrderForm[inputIdentifier]\r\n    };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n    updatedFormElement.touched = true;\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n    if (updatedOrderForm.category.value === 'All categories') {\r\n        updatedOrderForm.offers.elementConfig.options = [\r\n\r\n        ]\r\n    }\r\n    if (updatedOrderForm.category.value === 'Social aid') {\r\n        updatedOrderForm.offers.elementConfig.options = [\r\n            {value: 'Retirement', displayValue: 'Retirement'},\r\n            {value: 'Death', displayValue: 'Death'},\r\n            {value: 'Marriage', displayValue: 'Marriage'},\r\n            {value: 'New born', displayValue: 'New born'},\r\n            {value: 'Circumcision', displayValue: 'Circumcision'}\r\n        ]\r\n    };\r\n    if (updatedOrderForm.category.value === 'Health services') {\r\n        updatedOrderForm.offers.elementConfig.options = [\r\n            {value: 'Surgery operations', displayValue: 'Surgery operations'},\r\n            {value: 'Hammamat( mineral bath )', displayValue: 'Hammamat( mineral bath )'}\r\n        ]\r\n    };\r\n    if (updatedOrderForm.category.value === 'Solidarity') {\r\n        updatedOrderForm.offers.elementConfig.options = [\r\n            {value: 'Aids for accident and catastrophe', displayValue: 'Aids for accident and catastrophe'},\r\n            {value: ' Aids for the exceptional cases', displayValue: ' Aids for the exceptional cases'},\r\n        ]\r\n    };\r\n    if (updatedOrderForm.category.value === 'Other services') {\r\n        updatedOrderForm.offers.elementConfig.options =[\r\n            {value: 'Exceptional loan', displayValue: 'Exceptional loan'},\r\n            {value: 'Sport and cultural activities', displayValue: 'Sport and cultural activities'},\r\n        ]\r\n    };\r\n    if (updatedOrderForm.category.value === 'All categories') {\r\n        updatedOrderForm.offers.elementConfig.options =[\r\n            {value: '', displayValue: 'All types'}\r\n        ]\r\n    }\r\n    \r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n        formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    \r\n    setReq({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n}\r\n\r\n\r\n\r\n\r\nconst formElementsArray = [];\r\n        for (let key in req.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: req.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n            </form>\r\n        );\r\n       \r\n\r\n\r\n        /*const request = {\r\n          name = req.orderForm.name.value ,\r\n          email = req.orderForm.email.value ,\r\n          category = req.orderForm.category.value ,\r\n          offer = req.orderForm.offer.value\r\n       } */\r\n  const onChange = (e) => setReq({ ...req, [e.target.name]: e.target.value });\r\n\r\n  useEffect(() => {\r\n    if (error && error.length) {\r\n      if (typeof error === 'object') {\r\n        error.forEach((err) => {\r\n          setAlert(err.msg, 'danger');\r\n        });\r\n      } else {\r\n        setAlert(error, 'danger');\r\n      }\r\n\r\n      clearErrors();\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [error]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (req.orderForm.category === '' || req.orderForm.offer === '' ||\r\n         req.orderForm.email === '' || req.orderForm.name === '' ) \r\n         {\r\n      setAlert('Please enter all fields', 'danger');\r\n    } else {\r\n          let name = req.orderForm.name.value ;\r\n          let email = req.orderForm.email.value ;\r\n          let category = req.orderForm.category.value ;\r\n          let offer = req.orderForm.offer.value;\r\n      await request({ name , email , category , offer });\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${WEBSITE_NAME} | Request`}</title>\r\n      </Helmet>\r\n      <Container className={`${classes.page} `}>\r\n        <div className='container-inner px-3 mt-4'>\r\n          <div className='auth mx-auto'>\r\n            <h4 className='mb-3 text-center '>\r\n              <strong className='title' >Add a request</strong>\r\n            </h4>\r\n\r\n            <Form className='form form-container' onSubmit={onSubmit}>\r\n              <Form.Group>\r\n              <Form.Label className='subtitle'> Email </Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Email'\r\n                  name='email'\r\n                  value={email}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n              <Form.Label className='subtitle'> Username </Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Username'\r\n                  name='username'\r\n                  value={username}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n              <Form.Label className='subtitle'> Password </Form.Label>\r\n                <Form.Control\r\n                  type='password'\r\n                  placeholder='Password'\r\n                  name='password'\r\n                  value={password}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n              <Form.Label className='subtitle'> Password confirmation </Form.Label>\r\n                <Form.Control\r\n                  type='password'\r\n                  placeholder='Password confirmation'\r\n                  name='password2'\r\n                  value={password2}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <div className='links d-flex align-items-center justify-content-between mt-4'>\r\n                <span>\r\n                  Have an account?{' '}\r\n                  <Link className='link-secondary' to='/login'>\r\n                    Sign in\r\n                  </Link>\r\n                </span>\r\n\r\n                {loading ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  <button className='button-primary' type='submit' onClick={onSubmit}>\r\n                    Create\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </Form>\r\n\r\n            <button className='button-primary' type='submit' onClick={onSubmit}>\r\n                    send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapSateToProps = (state) => ({\r\n  error: state.auth.error,\r\n  loading: state.auth.loading,\r\n});\r\n\r\nexport default connect(mapSateToProps, { request, clearErrors, setAlert })(\r\n  Request\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}