{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\Full-Project\\\\client\\\\src\\\\components\\\\pages\\\\Requests\\\\Request.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { Container, Form } from 'react-bootstrap';\nimport useStyles from './Request-jss'; // Actions\n\nimport { request, clearErrors } from '../../../redux/actions/requestActions';\nimport { setAlert } from '../../../redux/actions/alertActions'; // App layout components\n\nimport Spinner from '../../layout/Spinner/Spinner';\nimport Input from './InputElement'; // Utils\n\nimport { WEBSITE_NAME } from '../../../utils/Data';\n\nconst Request = props => {\n  const {\n    error,\n    loading,\n    request,\n    clearErrors,\n    setAlert\n  } = props;\n  const [state, setState] = useState({\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Full Name'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Your E-Mail'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      category: {\n        elementType: 'select',\n        elementConfig: {\n          options: [{\n            value: 'All categories',\n            displayValue: 'All categories'\n          }, {\n            value: 'Social aid',\n            displayValue: 'Social aid'\n          }, {\n            value: 'Health services',\n            displayValue: 'Health services'\n          }, {\n            value: 'Solidarity',\n            displayValue: 'Solidarity'\n          }, {\n            value: 'Other services',\n            displayValue: 'Other services'\n          }]\n        },\n        value: '',\n        validation: {},\n        valid: true\n      },\n      offer: {\n        elementType: 'select',\n        elementConfig: {\n          options: [{\n            value: 'All offers',\n            displayValue: 'All offers'\n          }]\n        },\n        value: '',\n        validation: {},\n        valid: true\n      }\n    },\n    formIsValid: false,\n    loading: false\n  });\n  const {\n    name,\n    email,\n    category,\n    offer\n  } = state;\n  useEffect(() => {\n    if (error && error.length) {\n      if (typeof error === 'object') {\n        error.forEach(err => {\n          setAlert(err.msg, 'danger');\n        });\n      } else {\n        setAlert(error, 'danger');\n      }\n\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error]);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (category === '' || offer === '' || email === '' || name === '') {\n      setAlert('Please enter all fields', 'danger');\n    } else {\n      await request({\n        name,\n        email,\n        category,\n        offer\n      });\n    }\n  };\n\n  const classes = useStyles();\n\n  const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  };\n\n  const inputChangedHandler = (event, inputIdentifier) => {\n    const updatedForm = { ...state\n    };\n    const updatedElement = { ...updatedForm[inputIdentifier]\n    };\n    updatedElement.value = event.target.value;\n    updatedElement.valid = checkValidity(updatedElement.value, updatedElement.validation);\n    updatedElement.touched = true;\n    updatedForm[inputIdentifier] = updatedElement;\n\n    if (updatedForm.category.value === 'All categories') {\n      updatedForm.offers.elementConfig.options = [];\n    }\n\n    if (updatedForm.category.value === 'Social aid') {\n      updatedForm.offer.elementConfig.options = [{\n        value: 'Retirement',\n        displayValue: 'Retirement'\n      }, {\n        value: 'Death',\n        displayValue: 'Death'\n      }, {\n        value: 'Marriage',\n        displayValue: 'Marriage'\n      }, {\n        value: 'New born',\n        displayValue: 'New born'\n      }, {\n        value: 'Circumcision',\n        displayValue: 'Circumcision'\n      }];\n    }\n\n    ;\n\n    if (updatedForm.category.value === 'Health services') {\n      updatedForm.offer.elementConfig.options = [{\n        value: 'Surgery operations',\n        displayValue: 'Surgery operations'\n      }, {\n        value: 'Hammamat( mineral bath )',\n        displayValue: 'Hammamat( mineral bath )'\n      }];\n    }\n\n    ;\n\n    if (updatedForm.category.value === 'Solidarity') {\n      updatedForm.offer.elementConfig.options = [{\n        value: 'Aids for accident and catastrophe',\n        displayValue: 'Aids for accident and catastrophe'\n      }, {\n        value: ' Aids for the exceptional cases',\n        displayValue: ' Aids for the exceptional cases'\n      }];\n    }\n\n    ;\n\n    if (updatedForm.category.value === 'Other services') {\n      updatedForm.offer.elementConfig.options = [{\n        value: 'Exceptional loan',\n        displayValue: 'Exceptional loan'\n      }, {\n        value: 'Sport and cultural activities',\n        displayValue: 'Sport and cultural activities'\n      }];\n    }\n\n    ;\n\n    if (updatedForm.category.value === 'All categories') {\n      updatedForm.offer.elementConfig.options = [{\n        value: 'All types',\n        displayValue: 'All types'\n      }];\n    }\n\n    setState({\n      updatedForm\n    });\n  };\n\n  const formElementsArray = [];\n\n  for (let key in state) {\n    formElementsArray.push({\n      id: key,\n      config: state.orderForm\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Request`)), /*#__PURE__*/React.createElement(Container, {\n    className: `${classes.page} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-inner px-3 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3 text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, \"Add a request\")), /*#__PURE__*/React.createElement(Form, {\n    className: \"form form-container\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n    key: formElement.id,\n    elementType: formElement.elementType,\n    elementConfig: formElement.elementConfig,\n    value: formElement.value,\n    invalid: !formElement.valid,\n    shouldValidate: formElement.validation,\n    touched: formElement.touched,\n    changed: event => inputChangedHandler(event, formElement.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"links d-flex align-items-center justify-content-between mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }\n  }, \"SEND\")))))));\n};\n\nconst mapSateToProps = state => ({\n  error: state.auth.error,\n  loading: state.auth.loading\n});\n\nexport default connect(mapSateToProps, {\n  request,\n  clearErrors,\n  setAlert\n})(Request);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/Full-Project/client/src/components/pages/Requests/Request.js"],"names":["React","useEffect","useState","connect","Helmet","Container","Form","useStyles","request","clearErrors","setAlert","Spinner","Input","WEBSITE_NAME","Request","props","error","loading","state","setState","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","email","isEmail","category","options","displayValue","offer","formIsValid","length","forEach","err","msg","onSubmit","e","preventDefault","classes","checkValidity","rules","isValid","trim","minLength","maxLength","pattern","test","isNumeric","inputChangedHandler","event","inputIdentifier","updatedForm","updatedElement","target","offers","formElementsArray","key","push","id","config","page","map","formElement","mapSateToProps","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Helmet from 'react-helmet';\r\nimport { Container, Form } from 'react-bootstrap';\r\nimport useStyles from './Request-jss';\r\n\r\n// Actions\r\nimport { request, clearErrors } from '../../../redux/actions/requestActions';\r\nimport { setAlert } from '../../../redux/actions/alertActions';\r\n\r\n// App layout components\r\nimport Spinner from '../../layout/Spinner/Spinner';\r\nimport Input from './InputElement'\r\n// Utils\r\nimport { WEBSITE_NAME } from '../../../utils/Data';\r\n\r\n\r\nconst Request = (props) => {\r\n  const {\r\n    error,\r\n    loading,\r\n    request,\r\n    clearErrors,\r\n    setAlert,\r\n  } = props;\r\n\r\n  const [state, setState] = useState({\r\n    orderForm: {\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Full Name'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'Your E-Mail'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        category: {\r\n            elementType: 'select',\r\n            elementConfig: {\r\n                options: [\r\n                    {value: 'All categories', displayValue: 'All categories'},\r\n                    {value: 'Social aid', displayValue: 'Social aid'},\r\n                    {value: 'Health services', displayValue: 'Health services'},\r\n                    {value: 'Solidarity', displayValue: 'Solidarity'},\r\n                    {value: 'Other services', displayValue: 'Other services'}\r\n                ]\r\n            },\r\n            value: '',\r\n            validation: {},\r\n            valid: true\r\n        },\r\n        offer: {\r\n            elementType: 'select',\r\n            elementConfig: {\r\n                options: [\r\n                    {value: 'All offers', displayValue: 'All offers'},\r\n                ]\r\n            },\r\n            value: '',\r\n            validation: {},\r\n            valid: true\r\n        }\r\n    },\r\n    formIsValid: false,\r\n    loading: false\r\n});\r\n\r\n  const { name, email, category, offer } = state;\r\n\r\n\r\n  useEffect(() => {\r\n    if (error && error.length) {\r\n      if (typeof error === 'object') {\r\n        error.forEach((err) => {\r\n          setAlert(err.msg, 'danger');\r\n        });\r\n      } else {\r\n        setAlert(error, 'danger');\r\n      }\r\n\r\n      clearErrors();\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [error]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (category === '' || offer === '' || email === '' || name === '' ) {\r\n      setAlert('Please enter all fields', 'danger');\r\n    } else {\r\n      await request({ name , email , category , offer });\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\nconst checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n    \r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}\r\n  \r\n const inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedForm = {\r\n        ...state\r\n    };\r\n    const updatedElement = { \r\n        ...updatedForm[inputIdentifier]\r\n    };\r\n    updatedElement.value = event.target.value;\r\n    updatedElement.valid = checkValidity(updatedElement.value, updatedElement.validation);\r\n    updatedElement.touched = true;\r\n    updatedForm[inputIdentifier] = updatedElement;\r\n    if (updatedForm.category.value === 'All categories') {\r\n        updatedForm.offers.elementConfig.options = [\r\n\r\n        ]\r\n    }\r\n    if (updatedForm.category.value === 'Social aid') {\r\n        updatedForm.offer.elementConfig.options = [\r\n            {value: 'Retirement', displayValue: 'Retirement'},\r\n            {value: 'Death', displayValue: 'Death'},\r\n            {value: 'Marriage', displayValue: 'Marriage'},\r\n            {value: 'New born', displayValue: 'New born'},\r\n            {value: 'Circumcision', displayValue: 'Circumcision'}\r\n        ]\r\n    };\r\n    if (updatedForm.category.value === 'Health services') {\r\n        updatedForm.offer.elementConfig.options = [\r\n            {value: 'Surgery operations', displayValue: 'Surgery operations'},\r\n            {value: 'Hammamat( mineral bath )', displayValue: 'Hammamat( mineral bath )'}\r\n        ]\r\n    };\r\n    if (updatedForm.category.value === 'Solidarity') {\r\n        updatedForm.offer.elementConfig.options = [\r\n            {value: 'Aids for accident and catastrophe', displayValue: 'Aids for accident and catastrophe'},\r\n            {value: ' Aids for the exceptional cases', displayValue: ' Aids for the exceptional cases'},\r\n        ]\r\n    };\r\n    if (updatedForm.category.value === 'Other services') {\r\n        updatedForm.offer.elementConfig.options =[\r\n            {value: 'Exceptional loan', displayValue: 'Exceptional loan'},\r\n            {value: 'Sport and cultural activities', displayValue: 'Sport and cultural activities'},\r\n        ]\r\n    };\r\n    if (updatedForm.category.value === 'All categories') {\r\n        updatedForm.offer.elementConfig.options =[\r\n            {value: 'All types', displayValue: 'All types'}\r\n        ]\r\n    }\r\n    \r\n    setState({updatedForm});\r\n\r\n}\r\n\r\nconst formElementsArray = [];\r\n        for (let key in state) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: state.orderForm\r\n            });\r\n        }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${WEBSITE_NAME} | Request`}</title>\r\n      </Helmet>\r\n      <Container className={`${classes.page} `}>\r\n        <div className='container-inner px-3 mt-4'>\r\n          <div className='auth mx-auto'>\r\n            <h4 className='mb-3 text-center '>\r\n              <strong className='title' >Add a request</strong>\r\n            </h4>\r\n        \r\n               \r\n               \r\n            <Form className='form form-container' onSubmit={onSubmit}>\r\n                        \r\n                        \r\n            <form onSubmit={onSubmit}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.elementType}\r\n                        elementConfig={formElement.elementConfig}\r\n                        value={formElement.value}\r\n                        invalid={!formElement.valid}\r\n                        shouldValidate={formElement.validation}\r\n                        touched={formElement.touched}\r\n                        changed={(event) => inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n            </form>\r\n              \r\n\r\n              <div className='links d-flex align-items-center justify-content-between mt-4'>\r\n                \r\n                {loading ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  <button className='button-primary' type='submit'>\r\n                    SEND\r\n                  </button>\r\n                )}\r\n              </div>\r\n         \r\n\r\n\r\n\r\n\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapSateToProps = (state) => ({\r\n  error: state.auth.error,\r\n  loading: state.auth.loading,\r\n});\r\n\r\nexport default connect(mapSateToProps, { request, clearErrors, setAlert })(\r\n  Request\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}