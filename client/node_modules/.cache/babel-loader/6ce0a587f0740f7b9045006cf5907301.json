{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\components\\\\pages\\\\posts\\\\user\\\\UserPosts.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet'; // Actions\n\nimport { getUserPosts } from '../../../../redux/actions/postActions'; // Utils\n\nimport { WEBSITE_NAME } from '../../../../utils/websiteData';\nimport formatedDate from '../../../../utils/formatedDate'; // Components\n\nimport Spinner from '../../../layout/Spinner';\nimport useStyles from '../posts-jss';\n\nconst UserPosts = props => {\n  const classes = useStyles();\n  const {\n    user_posts,\n    loading_user_posts,\n    getUserPosts\n  } = props;\n  useEffect(() => {\n    getUserPosts(); //eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Your posts`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.page} user-posts card-shadow text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Your posts\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Requests or donations you have post\"), user_posts !== null && !loading_user_posts ? user_posts.length < 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"No posts found!\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, user_posts.map(post => /*#__PURE__*/React.createElement(PostItem, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  })))));\n};\n\nconst mapSateToProps = state => ({\n  user_posts: state.posts.user_posts,\n  loading_user_posts: state.posts.loading_user_posts\n});\n\nexport default connect(mapSateToProps, {\n  getUserPosts\n})(UserPosts);\n\nconst PostItem = props => {\n  const {\n    post\n  } = props;\n  const {\n    id,\n    type,\n    title,\n    category,\n    createdAt,\n    isApproved\n  } = post;\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"link-primary\",\n    to: `/posts/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, title != null && title, ' '), /*#__PURE__*/React.createElement(\"span\", {\n    className: `type ${parseInt(type) === 1 ? 'bg-success' : 'bg-primary'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, parseInt(type) === 1 ? 'Donation' : 'Request')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, category != null && category), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, createdAt != null && formatedDate(createdAt)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, isApproved ? 'Approved' : 'Pending'));\n};","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/components/pages/posts/user/UserPosts.js"],"names":["React","useEffect","Link","connect","Helmet","getUserPosts","WEBSITE_NAME","formatedDate","Spinner","useStyles","UserPosts","props","classes","user_posts","loading_user_posts","page","length","map","post","id","mapSateToProps","state","posts","PostItem","type","title","category","createdAt","isApproved","parseInt"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\n\n// Actions\nimport { getUserPosts } from '../../../../redux/actions/postActions';\n\n// Utils\nimport { WEBSITE_NAME } from '../../../../utils/websiteData';\nimport formatedDate from '../../../../utils/formatedDate';\n\n// Components\nimport Spinner from '../../../layout/Spinner';\n\nimport useStyles from '../posts-jss';\n\nconst UserPosts = (props) => {\n  const classes = useStyles();\n\n  const { user_posts, loading_user_posts, getUserPosts } = props;\n\n  useEffect(() => {\n    getUserPosts();\n\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | Your posts`}</title>\n      </Helmet>\n      <div className={`${classes.page} user-posts card-shadow text-center`}>\n        <h3 className='title'>Your posts</h3>\n        <h6 className='subtitle'>Requests or donations you have post</h6>\n\n        {user_posts !== null && !loading_user_posts ? (\n          user_posts.length < 1 ? (\n            <div className='row mt-5'>\n              <div className='col text-center'>\n                <h5>No posts found!</h5>\n              </div>\n            </div>\n          ) : (\n            <div className='row mt-4'>\n              <div className='col-12'>\n                <div className='table-responsive'>\n                  <table className='table text-left'>\n                    <thead>\n                      <tr>\n                        <th scope='col'>#</th>\n                        <th scope='col'>Title</th>\n                        <th scope='col'>Category</th>\n                        <th scope='col'>Date</th>\n                        <th scope='col'>Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {user_posts.map((post) => (\n                        <PostItem key={post.id} post={post} />\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          )\n        ) : (\n          <div className='row mt-4'>\n            <div className='col text-center'>\n              <Spinner />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapSateToProps = (state) => ({\n  user_posts: state.posts.user_posts,\n  loading_user_posts: state.posts.loading_user_posts,\n});\n\nexport default connect(mapSateToProps, {\n  getUserPosts,\n})(UserPosts);\n\nconst PostItem = (props) => {\n  const { post } = props;\n\n  const { id, type, title, category, createdAt, isApproved } = post;\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>\n        <Link className='link-primary' to={`/posts/${id}`}>\n          {title != null && title}{' '}\n        </Link>\n\n        <span\n          className={`type ${\n            parseInt(type) === 1 ? 'bg-success' : 'bg-primary'\n          }`}\n        >\n          {parseInt(type) === 1 ? 'Donation' : 'Request'}\n        </span>\n      </td>\n      <td>{category != null && category}</td>\n      <td>{createdAt != null && formatedDate(createdAt)}</td>\n      <td>{isApproved ? 'Approved' : 'Pending'}</td>\n    </tr>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}