{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types'; // Actions\n\nimport { login, clearErrors } from '../../redux/actions/authActions';\nimport { setAlert } from '../../redux/actions/alertActions'; // Utils\n\nimport { WEBSITE_NAME } from '../../utils/websiteData'; // Components\n\nimport Spinner from '../layout/Spinner';\nimport useStyles from './auth-jss';\n\nconst Login = props => {\n  const {\n    isAuthenticated,\n    error,\n    loading,\n    login,\n    clearErrors,\n    setAlert\n  } = props;\n  const classes = useStyles();\n  const [user, setUser] = useState({\n    username: '',\n    password: ''\n  });\n  const {\n    username,\n    password\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    } // eslint-disable-next-line\n\n  }, [isAuthenticated, props.history]);\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (username === '' || password === '') {\n      setAlert('Please enter all fields');\n    } else {\n      login({\n        username,\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Login`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.root} card-shadow text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Use your email and password provided\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 70\n    }\n  }), \" by your organization\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mt-4\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"text\",\n    name: \"username\",\n    value: username,\n    placeholder: \"Username\",\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    placeholder: \"Password\",\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"button-primary mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-link mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Login Trouble?\", ' ', /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Reset password\")))));\n};\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nconst mapSateToProps = state => ({\n  error: state.auth.error,\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading\n});\n\nexport default connect(mapSateToProps, {\n  login,\n  clearErrors,\n  setAlert\n})(Login);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/components/auth/Login.js"],"names":["React","useState","useEffect","Link","connect","Helmet","PropTypes","login","clearErrors","setAlert","WEBSITE_NAME","Spinner","useStyles","Login","props","isAuthenticated","error","loading","classes","user","setUser","username","password","onChange","e","target","name","value","history","push","onSubmit","preventDefault","root","propTypes","bool","oneOfType","string","object","func","isRequired","mapSateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { login, clearErrors } from '../../redux/actions/authActions';\nimport { setAlert } from '../../redux/actions/alertActions';\n\n// Utils\nimport { WEBSITE_NAME } from '../../utils/websiteData';\n\n// Components\nimport Spinner from '../layout/Spinner';\n\nimport useStyles from './auth-jss';\n\nconst Login = (props) => {\n  const {\n    isAuthenticated,\n    error,\n    loading,\n    login,\n    clearErrors,\n    setAlert,\n  } = props;\n\n  const classes = useStyles();\n\n  const [user, setUser] = useState({\n    username: '',\n    password: '',\n  });\n\n  const { username, password } = user;\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    // eslint-disable-next-line\n  }, [isAuthenticated, props.history]);\n\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    }\n\n    // eslint-disable-next-line\n  }, [error]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (username === '' || password === '') {\n      setAlert('Please enter all fields');\n    } else {\n      login({ username, password });\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | Login`}</title>\n      </Helmet>\n      <div className={`${classes.root} card-shadow text-center`}>\n        <h3 className='title'>Sign in</h3>\n        <h6 className='subtitle'>Use your email and password provided<br></br> by your organization</h6>\n\n        <form className='mt-4' onSubmit={onSubmit}>\n          <div className='form-group'>\n            <input\n              className='input-text'\n              type='text'\n              name='username'\n              value={username}\n              placeholder='Username'\n              onChange={onChange}\n              required\n            />\n          </div>\n\n          <div className='form-group'>\n            <input\n              className='input-text'\n              type='password'\n              name='password'\n              value={password}\n              placeholder='Password'\n              onChange={onChange}\n              required\n            />\n          </div>\n\n          {loading ? (\n            <Spinner />\n          ) : (\n            <input\n              type='submit'\n              value='Login'\n              className='button-primary mt-3'\n            />\n          )}\n        </form>\n\n        <p className='form-link mt-3'>\n          Login Trouble?{' '}\n          <Link to='/login'>\n            <span>Reset password</span>\n          </Link>\n        </p>\n      </div>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n};\n\nconst mapSateToProps = (state) => ({\n  error: state.auth.error,\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading,\n});\n\nexport default connect(mapSateToProps, { login, clearErrors, setAlert })(Login);\n"]},"metadata":{},"sourceType":"module"}