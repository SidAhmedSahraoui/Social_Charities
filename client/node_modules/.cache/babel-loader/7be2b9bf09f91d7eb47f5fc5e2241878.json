{"ast":null,"code":"import axios from 'axios';\nimport { SET_LOADING, USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, AUTH_ERROR, CLEAR_ERRORS, PROFILE_LOADED, SET_LOADING_PROFILE, UPDATE_PROFILE, UPDATE_PASSWORD, PROFILE_ERROR } from '../Auth/types';\nimport AuthToken from '../Auth/AuthToken'; // Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    AuthToken(localStorage.token);\n  } else {\n    dispatch({\n      type: AUTH_ERROR\n    });\n    return;\n  }\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.get('/users/self');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    dispatch({\n      type: AUTH_ERROR,\n      payload: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg\n    });\n  }\n}; // Login user\n\nexport const login = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.post('/users/login', formData, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n\n    console.log(error);\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.msg\n    });\n  }\n}; // Logout\n\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n}; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n}; // Load profile\n\nexport const loadProfile = () => async dispatch => {\n  if (localStorage.token) {\n    AuthToken(localStorage.token);\n  } else {\n    return;\n  }\n\n  try {\n    dispatch(setLoadingProfile());\n    const res = await axios.get('/users/self');\n    dispatch({\n      type: PROFILE_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.msg\n    });\n  }\n}; // Update profile\n\nexport const updateProfile = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoadingProfile());\n    const res = await axios.put('/users/update', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.msg\n    });\n  }\n}; // Update password\n\nexport const updatePassword = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoadingProfile());\n    const res = await axios.put('/users/auth', formData, config);\n    dispatch({\n      type: UPDATE_PASSWORD,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.msg\n    });\n  }\n}; // Set loading_profile to true\n\nexport const setLoadingProfile = () => {\n  return {\n    type: SET_LOADING_PROFILE\n  };\n};","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/Components/Auth/Auth.js"],"names":["axios","SET_LOADING","USER_LOADED","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AUTH_ERROR","CLEAR_ERRORS","PROFILE_LOADED","SET_LOADING_PROFILE","UPDATE_PROFILE","UPDATE_PASSWORD","PROFILE_ERROR","AuthToken","loadUser","dispatch","localStorage","token","type","setLoading","res","get","payload","data","error","response","msg","login","formData","config","headers","post","console","log","logout","clearErrors","loadProfile","setLoadingProfile","updateProfile","put","updatePassword"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,WADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,YAPF,EAQEC,cARF,EASEC,mBATF,EAUEC,cAVF,EAWEC,eAXF,EAYEC,aAZF,QAaO,eAbP;AAeA,OAAOC,SAAP,MAAsB,mBAAtB,C,CAGA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,SAAS,CAACG,YAAY,CAACC,KAAd,CAAT;AACD,GAFD,MAEO;AACLF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGA;AACD;;AAED,MAAI;AACFS,IAAAA,QAAQ,CAACI,UAAU,EAAX,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,aAAV,CAAlB;AAEAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEhB,WADC;AAEPoB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GARD,CAQE,OAAOC,KAAP,EAAc;AAAA;;AACdT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEZ,UADC;AAEPgB,MAAAA,OAAO,qBAAEE,KAAK,CAACC,QAAR,4EAAE,gBAAgBF,IAAlB,yDAAE,qBAAsBG;AAFxB,KAAD,CAAR;AAID;AACF,CAxBM,C,CA6BP;;AACA,OAAO,MAAMC,KAAK,GAAIC,QAAD,IAAc,MAAOb,QAAP,IAAoB;AACrD,QAAMc,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAMA,MAAI;AACFf,IAAAA,QAAQ,CAACI,UAAU,EAAX,CAAR;AAEA,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAAC+B,IAAN,CAAW,cAAX,EAA2BH,QAA3B,EAAqCC,MAArC,CAAlB;AAEAd,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEf,aADC;AAEPmB,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAKAR,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GAXD,CAWE,OAAOU,KAAP,EAAc;AAAA;;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAEAT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEd,UADC;AAEPkB,MAAAA,OAAO,sBAAEE,KAAK,CAACC,QAAR,8EAAE,iBAAgBF,IAAlB,0DAAE,sBAAsBG;AAFxB,KAAD,CAAR;AAID;AACF,CA1BM,C,CA4BP;;AACA,OAAO,MAAMQ,MAAM,GAAG,MAAM,MAAOnB,QAAP,IAAoB;AAC9CA,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAEb;AADC,GAAD,CAAR;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAMc,UAAU,GAAG,MAAM;AAC9B,SAAO;AAAED,IAAAA,IAAI,EAAEjB;AAAR,GAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMkC,WAAW,GAAG,MAAM;AAC/B,SAAO;AAAEjB,IAAAA,IAAI,EAAEX;AAAR,GAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAM6B,WAAW,GAAG,MAAM,MAAOrB,QAAP,IAAoB;AACnD,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,SAAS,CAACG,YAAY,CAACC,KAAd,CAAT;AACD,GAFD,MAEO;AACL;AACD;;AAED,MAAI;AACFF,IAAAA,QAAQ,CAACsB,iBAAiB,EAAlB,CAAR;AACA,UAAMjB,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,aAAV,CAAlB;AAEAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,cADC;AAEPc,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAID,GARD,CAQE,OAAOC,KAAP,EAAc;AAAA;;AACdT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,aADC;AAEPU,MAAAA,OAAO,sBAAEE,KAAK,CAACC,QAAR,8EAAE,iBAAgBF,IAAlB,0DAAE,sBAAsBG;AAFxB,KAAD,CAAR;AAID;AACF,CArBM,C,CAuBP;;AACA,OAAO,MAAMY,aAAa,GAAIV,QAAD,IAAc,MAAOb,QAAP,IAAoB;AAC7D,QAAMc,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAMA,MAAI;AACFf,IAAAA,QAAQ,CAACsB,iBAAiB,EAAlB,CAAR;AAEA,UAAMjB,GAAG,GAAG,MAAMpB,KAAK,CAACuC,GAAN,CAAU,eAAV,EAA2BX,QAA3B,EAAqCC,MAArC,CAAlB;AAEAd,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,cAAR;AAAwBY,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAArC,KAAD,CAAR;AAEAR,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GARD,CAQE,OAAOU,KAAP,EAAc;AAAA;;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,aADC;AAEPU,MAAAA,OAAO,sBAAEE,KAAK,CAACC,QAAR,8EAAE,iBAAgBF,IAAlB,0DAAE,sBAAsBG;AAFxB,KAAD,CAAR;AAID;AACF,CAtBM,C,CAwBP;;AACA,OAAO,MAAMc,cAAc,GAAIZ,QAAD,IAAc,MAAOb,QAAP,IAAoB;AAC9D,QAAMc,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAMA,MAAI;AACFf,IAAAA,QAAQ,CAACsB,iBAAiB,EAAlB,CAAR;AAEA,UAAMjB,GAAG,GAAG,MAAMpB,KAAK,CAACuC,GAAN,CAAU,aAAV,EAAyBX,QAAzB,EAAmCC,MAAnC,CAAlB;AAEAd,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,eAAR;AAAyBW,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAAtC,KAAD,CAAR;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AAAA;;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,aADC;AAEPU,MAAAA,OAAO,sBAAEE,KAAK,CAACC,QAAR,8EAAE,iBAAgBF,IAAlB,0DAAE,sBAAsBG;AAFxB,KAAD,CAAR;AAID;AACF,CApBM,C,CAsBP;;AACA,OAAO,MAAMW,iBAAiB,GAAG,MAAM;AACrC,SAAO;AAAEnB,IAAAA,IAAI,EAAET;AAAR,GAAP;AACD,CAFM","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n  SET_LOADING,\r\n  USER_LOADED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  AUTH_ERROR,\r\n  CLEAR_ERRORS,\r\n  PROFILE_LOADED,\r\n  SET_LOADING_PROFILE,\r\n  UPDATE_PROFILE,\r\n  UPDATE_PASSWORD,\r\n  PROFILE_ERROR,\r\n} from '../Auth/types';\r\n\r\nimport AuthToken from '../Auth/AuthToken';\r\n\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    AuthToken(localStorage.token);\r\n  } else {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    dispatch(setLoading());\r\n    const res = await axios.get('/users/self');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: error.response?.data?.msg,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n  \r\n// Login user\r\nexport const login = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    dispatch(setLoading());\r\n\r\n    const res = await axios.post('/users/login', formData, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n      payload: error.response?.data?.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return { type: SET_LOADING };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n  return { type: CLEAR_ERRORS };\r\n};\r\n\r\n// Load profile\r\nexport const loadProfile = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    AuthToken(localStorage.token);\r\n  } else {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    dispatch(setLoadingProfile());\r\n    const res = await axios.get('/users/self');\r\n\r\n    dispatch({\r\n      type: PROFILE_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: error.response?.data?.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Update profile\r\nexport const updateProfile = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    dispatch(setLoadingProfile());\r\n\r\n    const res = await axios.put('/users/update', formData, config);\r\n\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: error.response?.data?.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Update password\r\nexport const updatePassword = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    dispatch(setLoadingProfile());\r\n\r\n    const res = await axios.put('/users/auth', formData, config);\r\n\r\n    dispatch({ type: UPDATE_PASSWORD, payload: res.data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: error.response?.data?.msg,\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading_profile to true\r\nexport const setLoadingProfile = () => {\r\n  return { type: SET_LOADING_PROFILE };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}