{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.State = {\n      username: 'sahraoui'\n    };\n\n    this.handler = event => {\n      this.setState = {\n        username: event.target.value\n      };\n    };\n\n    this.style = {\n      padding: '16px 16px 25px 100px',\n      margin: '10px 5px',\n      textColor: 'black'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Create TWO new components: UserInput and UserOutput\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"UserInput should hold an input element, UserOutput two paragraphs\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"Output multiple UserOutput components in the App component (any paragraph texts of your choice)\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"Pass a username (of your choice) to UserOutput via props and display it there\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Add state to the App component (=> the username) and pass the username to the UserOutput component\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Add a method to manipulate the state (=> an event-handler method)\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"Pass the event-handler method reference to the UserInput component and bind it to the input-change event\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Ensure that the new input entered by the user overwrites the old username passed to UserOutput\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"Add two-way-binding to your input (in UserInput) to also display the starting username\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\")), /*#__PURE__*/React.createElement(\"button\", {\n      text: \"change\",\n      onClick: this.stateChange,\n      style: this.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(UserInput, {\n      change: this.handler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(UserOutput, {\n      userName: \"ahmed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(UserOutput, {\n      userName: this.State.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(UserOutput, {\n      userName: this.State.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/App.js"],"names":["React","Component","UserInput","UserOutput","App","State","username","handler","event","setState","target","value","style","padding","margin","textColor","render","stateChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BI,KAF0B,GAElB;AACNC,MAAAA,QAAQ,EAAC;AADH,KAFkB;;AAAA,SAM3BC,OAN2B,GAMhBC,KAAD,IAAW;AACnB,WAAKC,QAAL,GAAkB;AAACH,QAAAA,QAAQ,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAlB;AACD,KAR0B;;AAAA,SAW3BC,KAX2B,GAWnB;AACNC,MAAAA,OAAO,EAAC,sBADF;AAENC,MAAAA,MAAM,EAAC,UAFD;AAGNC,MAAAA,SAAS,EAAC;AAHJ,KAXmB;AAAA;;AAiB1BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6HAVF,CADF,eAaM;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKC,WAApC;AAAiD,MAAA,KAAK,EAAE,KAAKL,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbN,eAcI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKL,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,eAeI,oBAAC,UAAD;AAAa,MAAA,QAAQ,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,eAgBI,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,eAiBI,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADF;AAuBD;;AAzCyB;;AA4C5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\n\nclass App extends Component {\n\n  State = {\n    username:'sahraoui'\n  }\n\n handler = (event) => {\n   this.setState = ( {username: event.target.value})\n }\n  \n  \n style = {\n   padding:'16px 16px 25px 100px',\n   margin:'10px 5px',\n   textColor:'black'\n }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ol>\n          <li>Create TWO new components: UserInput and UserOutput</li>\n          <li>UserInput should hold an input element, UserOutput two paragraphs</li>\n          <li>Output multiple UserOutput components in the App component (any paragraph texts of your choice)</li>\n          <li>Pass a username (of your choice) to UserOutput via props and display it there</li>\n          <li>Add state to the App component (=> the username) and pass the username to the UserOutput component</li>\n          <li>Add a method to manipulate the state (=> an event-handler method)</li>\n          <li>Pass the event-handler method reference to the UserInput component and bind it to the input-change event</li>\n          <li>Ensure that the new input entered by the user overwrites the old username passed to UserOutput</li>\n          <li>Add two-way-binding to your input (in UserInput) to also display the starting username</li>\n          <li>Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets</li>\n        </ol>\n            <button text='change' onClick={this.stateChange} style={this.style}></button>\n          <UserInput change={this.handler}/>\n          <UserOutput  userName='ahmed'/>\n          <UserOutput userName={this.State.username}/>\n          <UserOutput userName={this.State.username}/>\n          \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}