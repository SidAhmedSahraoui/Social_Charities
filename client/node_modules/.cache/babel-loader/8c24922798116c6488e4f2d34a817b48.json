{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\components\\\\pages\\\\posts\\\\Requests\\\\AddRequest.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet'; // Actions\n\n/*import {\n  getStates,\n  getStateCities,\n  clearCities,\n} from '../../../../redux/actions/locationActions';*/\n\nimport { addPost, getCategories, clearErrors } from '../../../../redux/actions/postActions';\nimport { setAlert } from '../../../../redux/actions/alertActions'; // Utils\n\nimport { WEBSITE_NAME } from '../../../../utils/websiteData'; // Components\n\nimport Spinner from '../../../layout/Spinner';\nimport useStyles from '../posts-jss';\n\nconst AddRequest = props => {\n  const classes = useStyles();\n  const {\n    categories,\n    loading_add_post,\n    loading_categories,\n    error,\n    addPost,\n    getCategories,\n    clearErrors,\n    setAlert\n  } = props;\n  const [post, setPost] = useState({\n    title: '',\n    category: 0,\n    content: '',\n    images: null\n  });\n  const {\n    title,\n    category,\n    content,\n    images\n  } = post;\n  useEffect(() => {\n    getCategories(); //eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error]);\n\n  const onChange = e => setPost({ ...post,\n    [e.target.name]: e.target.value\n  });\n\n  const onChangeImages = e => setPost({ ...post,\n    images: e.target.files\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (title === '') {\n      setAlert('Title is empty');\n      return;\n    }\n\n    if (category === 0 || category === '0') {\n      setAlert('Please select a category');\n      return;\n    }\n\n    if (content === '') {\n      setAlert('Content is empty');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('post_category', category);\n    formData.append('post_type', 2);\n    formData.append('content', content);\n    if (images) for (let i = 0; i < images.length; i++) {\n      formData.append('images', images[i]);\n    }\n    await addPost(formData);\n    window.location.href = '/posts';\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Add request`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.page} card-shadow text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Add a Request\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Ask for donation from your organization\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"form\", {\n    className: \"add-form mx-auto mt-4\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-text\",\n    type: \"text\",\n    id: \"title\",\n    name: \"title\",\n    value: title,\n    placeholder: \"Title\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    name: \"category\",\n    value: category,\n    onChange: onChange,\n    className: \"custom-select input-select input-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, loading_categories ? /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Type\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  }, \"All categories\"), categories !== null && categories.length > 0 && categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    key: category.id,\n    value: category.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 27\n    }\n  }, category.label))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"input-text\",\n    id: \"content\",\n    name: \"content\",\n    value: content,\n    placeholder: \"Content\",\n    onChange: onChange,\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"images\",\n    type: \"file\",\n    name: \"images\",\n    onChange: onChangeImages,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Choose Images (\", images ? images.length : 0, \")\")), loading_add_post ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add request\",\n    className: \"button-primary mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nconst mapSateToProps = state => ({\n  categories: state.posts.categories,\n  loading_add_post: state.posts.loading_add_post,\n  loading_categories: state.posts.loading_categories,\n  error: state.posts.error\n});\n\nexport default connect(mapSateToProps, {\n  addPost,\n  getCategories,\n  clearErrors,\n  setAlert\n})(AddRequest);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/components/pages/posts/Requests/AddRequest.js"],"names":["React","useState","useEffect","connect","Helmet","addPost","getCategories","clearErrors","setAlert","WEBSITE_NAME","Spinner","useStyles","AddRequest","props","classes","categories","loading_add_post","loading_categories","error","post","setPost","title","category","content","images","onChange","e","target","name","value","onChangeImages","files","onSubmit","preventDefault","formData","FormData","append","i","length","window","location","href","page","map","id","label","mapSateToProps","state","posts"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\n\n// Actions\n/*import {\n  getStates,\n  getStateCities,\n  clearCities,\n} from '../../../../redux/actions/locationActions';*/\nimport {\n  addPost,\n  getCategories,\n  clearErrors,\n} from '../../../../redux/actions/postActions';\nimport { setAlert } from '../../../../redux/actions/alertActions';\n\n// Utils\nimport { WEBSITE_NAME } from '../../../../utils/websiteData';\n\n// Components\nimport Spinner from '../../../layout/Spinner';\n\nimport useStyles from '../posts-jss';\n\nconst AddRequest = (props) => {\n  const classes = useStyles();\n\n  const {\n    categories,\n    loading_add_post,\n    loading_categories,\n    error,\n    addPost,\n    getCategories,\n    clearErrors,\n    setAlert,\n  } = props;\n\n  const [post, setPost] = useState({\n    title: '',\n    category: 0,\n    content: '',\n    images: null,\n  });\n\n  const { title, category,  content, images } = post;\n\n  useEffect(() => {\n    getCategories();\n\n    //eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    }\n\n    // eslint-disable-next-line\n  }, [error]);\n\n \n  const onChange = (e) => setPost({ ...post, [e.target.name]: e.target.value });\n\n  const onChangeImages = (e) => setPost({ ...post, images: e.target.files });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (title === '') {\n      setAlert('Title is empty');\n      return;\n    }\n\n    if (category === 0 || category === '0') {\n      setAlert('Please select a category');\n      return;\n    }\n\n    \n\n    if (content === '') {\n      setAlert('Content is empty');\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append('title', title);\n    formData.append('post_category', category);\n    formData.append('post_type', 2);\n    formData.append('content', content);\n\n    if (images)\n      for (let i = 0; i < images.length; i++) {\n        formData.append('images', images[i]);\n      }\n\n    await addPost(formData);\n\n    window.location.href = '/posts';\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | Add request`}</title>\n      </Helmet>\n      <div className={`${classes.page} card-shadow text-center`}>\n        <h3 className='title'>Add a Request</h3>\n        <h6 className='subtitle'>\n          Ask for donation from your organization\n        </h6>\n\n        <div className='row'>\n          <div className='col'>\n            {' '}\n            <form className='add-form mx-auto mt-4' onSubmit={onSubmit}>\n              <div className='form-group'>\n                <input\n                  className='input-text'\n                  type='text'\n                  id='title'\n                  name='title'\n                  value={title}\n                  placeholder='Title'\n                  onChange={onChange}\n                />\n              </div>\n\n              <div className='form-group'>\n                <select\n                  id='category'\n                  name='category'\n                  value={category}\n                  onChange={onChange}\n                  className='custom-select input-select input-text'\n                >\n                  {loading_categories ? (\n                    <option value='0'>Type</option>\n                  ) : (\n                    <>\n                      <option value='0'>All categories</option>\n                      {categories !== null &&\n                        categories.length > 0 &&\n                        categories.map((category) => (\n                          <option key={category.id} value={category.id}>\n                            {category.label}\n                          </option>\n                        ))}\n                    </>\n                  )}\n                </select>\n              </div>\n\n              \n                 \n\n              <div className='form-group'>\n                <textarea\n                  className='input-text'\n                  id='content'\n                  name='content'\n                  value={content}\n                  placeholder='Content'\n                  onChange={onChange}\n                  rows='3'\n                ></textarea>\n              </div>\n\n              <div className='form-group'>\n                <input\n                  id='images'\n                  type='file'\n                  name='images'\n                  onChange={onChangeImages}\n                  multiple\n                />\n                <label htmlFor='images'>\n                  Choose Images ({images ? images.length : 0})\n                </label>\n              </div>\n              {loading_add_post ? (\n                <Spinner />\n              ) : (\n                <input\n                  type='submit'\n                  value='Add request'\n                  className='button-primary mt-3'\n                />\n              )}\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapSateToProps = (state) => ({\n  categories: state.posts.categories,\n  loading_add_post: state.posts.loading_add_post,\n  loading_categories: state.posts.loading_categories,\n  error: state.posts.error,\n\n});\n\nexport default connect(mapSateToProps, {\n  addPost,\n  getCategories,\n  clearErrors,\n \n  setAlert,\n})(AddRequest);\n"]},"metadata":{},"sourceType":"module"}