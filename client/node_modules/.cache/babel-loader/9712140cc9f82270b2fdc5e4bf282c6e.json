{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\Full-Project\\\\client\\\\src\\\\components\\\\pages\\\\Admin\\\\adminNav.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useStyles from '../../layout/Navbar/navbar-jss';\nimport { connect } from 'react-redux';\nimport { Dropdown } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faSignOutAlt, faEnvelope, faCog } from '@fortawesome/free-solid-svg-icons'; // Actions\n\nimport { logout, loadUser } from '../../../redux/actions/authActions';\nimport { clearMessages } from '../../../redux/actions/messageActions';\n\nconst AdminNav = props => {\n  const {\n    user,\n    logout,\n    loadUser,\n    clearMessages\n  } = props;\n  useEffect(() => {\n    loadUser(); // eslint-disable-next-line\n  }, []);\n\n  const logoutFunction = () => {\n    logout();\n    clearMessages();\n  };\n\n  const userMenu = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dropdown, {\n    alignRight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"outline-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Hey, \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }\n  }, user && user.username)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/u/${user ? user.username : ''}`,\n    className: \"dropdown-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"icon mr-3\",\n    icon: faUser,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), \"Dashboard\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/settings\",\n    className: \"dropdown-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"icon mr-3\",\n    icon: faCog,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), \"Settings\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => logoutFunction(),\n    className: \"dropdown-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"icon mr-3\",\n    icon: faSignOutAlt,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), \"Logout\"))));\n  const [toggleStatus, setToggleStatus] = useState('closed');\n  const classes = useStyles();\n\n  const handleToggle = () => {\n    toggleStatus === 'closed' ? setToggleStatus('opened') : setToggleStatus('closed');\n  };\n\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: `${classes.navbar} navbar navbar-expand-lg navbar-light `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, userMenu));\n};\n\nconst mapSateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user,\n  loading: state.user.loading\n});\n\nexport default connect(mapSateToProps, {\n  logout,\n  loadUser,\n  clearMessages\n})(AdminNav);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/Full-Project/client/src/components/pages/Admin/adminNav.js"],"names":["React","useState","useEffect","Link","useStyles","connect","Dropdown","FontAwesomeIcon","faUser","faSignOutAlt","faEnvelope","faCog","logout","loadUser","clearMessages","AdminNav","props","user","logoutFunction","userMenu","username","toggleStatus","setToggleStatus","classes","handleToggle","navbar","mapSateToProps","state","isAuthenticated","auth","loading"],"mappings":"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","sourcesContent":["\r\nimport React , { useState , useEffect } from 'react' ; \r\nimport { Link } from 'react-router-dom';\r\nimport useStyles from '../../layout/Navbar/navbar-jss';\r\nimport { connect } from 'react-redux';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faUser,\r\n  faSignOutAlt,\r\n  faEnvelope,\r\n  faCog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Actions\r\nimport { logout, loadUser } from '../../../redux/actions/authActions';\r\nimport { clearMessages } from '../../../redux/actions/messageActions';\r\n\r\n\r\nconst AdminNav = (props) => {\r\n\r\n  const { user, logout, loadUser, clearMessages } = props;\r\n  useEffect(() => {\r\n    loadUser();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  const logoutFunction = () => {\r\n    logout();\r\n    clearMessages();\r\n  };\r\n      const userMenu = (\r\n        <>\r\n          <Dropdown alignRight>\r\n            <Dropdown.Toggle variant='outline-light'>\r\n              Hey, <strong>{user && user.username}</strong>\r\n            </Dropdown.Toggle>\r\n    \r\n            <Dropdown.Menu>\r\n              <Link\r\n                to={`/u/${user ? user.username : ''}`}\r\n                className='dropdown-item'\r\n              >\r\n                <FontAwesomeIcon className='icon mr-3' icon={faUser} size='lg' />\r\n                Dashboard\r\n              </Link>\r\n              <Link to='/settings' className='dropdown-item'>\r\n                <FontAwesomeIcon className='icon mr-3' icon={faCog} size='lg' />\r\n                Settings\r\n              </Link>\r\n              <Dropdown.Divider></Dropdown.Divider>\r\n              <button onClick={() => logoutFunction()} className='dropdown-item'>\r\n                <FontAwesomeIcon\r\n                  className='icon mr-3'\r\n                  icon={faSignOutAlt}\r\n                  size='lg'\r\n                />\r\n                Logout\r\n              </button>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </>\r\n      );\r\n    \r\n      const [toggleStatus, setToggleStatus] = useState('closed');\r\n    \r\n      const classes = useStyles();\r\n    \r\n      const handleToggle = () => {\r\n        toggleStatus === 'closed'\r\n          ? setToggleStatus('opened')\r\n          : setToggleStatus('closed');\r\n      };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <nav\r\n          className={`${classes.navbar} navbar navbar-expand-lg navbar-light `}\r\n        >\r\n          \r\n              \r\n    \r\n              \r\n              <ul className='admin'>\r\n              { userMenu }             \r\n               </ul>         \r\n        </nav>\r\n      );\r\n    };\r\n\r\n    const mapSateToProps = (state) => ({\r\n      isAuthenticated: state.auth.isAuthenticated,\r\n      user: state.auth.user,\r\n      loading: state.user.loading,\r\n\r\n    });\r\n    \r\n    export default connect(mapSateToProps, { logout, loadUser, clearMessages })(\r\n        AdminNav\r\n    );\r\n  "]},"metadata":{},"sourceType":"module"}