{"ast":null,"code":"import axios from 'axios';\nimport { SET_LOADING, REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, AUTH_ERROR, CLEAR_ERRORS, PROFILE_LOADED, SET_LOADING_PROFILE, UPDATE_PROFILE, UPDATE_PASSWORD, PROFILE_ERROR } from '../types';\nimport setAuthToken from '../../utils/setAuthToken'; // Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    dispatch({\n      type: AUTH_ERROR\n    });\n    return;\n  }\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.get('/users/self');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    dispatch({\n      type: AUTH_ERROR,\n      payload: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg\n    });\n  }\n}; // Register User\n\nexport const register = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.post('/users/register', formData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n\n    console.log(error);\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.msg\n    });\n  }\n}; // Login user\n\nexport const login = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.post('/users/login', formData, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n\n    console.log(error);\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.msg\n    });\n  }\n}; // Logout\n\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n}; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n}; // Load profile\n\nexport const loadProfile = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    return;\n  }\n\n  try {\n    dispatch(setLoadingProfile());\n    const res = await axios.get('/users/self');\n    dispatch({\n      type: PROFILE_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.msg\n    });\n  }\n}; // Update profile\n\nexport const updateProfile = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoadingProfile());\n    const res = await axios.put('/users/update', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.msg\n    });\n  }\n}; // Update password\n\nexport const updatePassword = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoadingProfile());\n    const res = await axios.put('/users/auth', formData, config);\n    dispatch({\n      type: UPDATE_PASSWORD,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.msg\n    });\n  }\n}; // Set loading_profile to true\n\nexport const setLoadingProfile = () => {\n  return {\n    type: SET_LOADING_PROFILE\n  };\n};","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/redux/actions/authActions.js"],"names":["axios","SET_LOADING","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AUTH_ERROR","CLEAR_ERRORS","PROFILE_LOADED","SET_LOADING_PROFILE","UPDATE_PROFILE","UPDATE_PASSWORD","PROFILE_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","type","setLoading","res","get","payload","data","error","response","msg","register","formData","config","headers","post","console","log","login","logout","clearErrors","loadProfile","setLoadingProfile","updateProfile","put","updatePassword"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n  SET_LOADING,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  AUTH_ERROR,\n  CLEAR_ERRORS,\n  PROFILE_LOADED,\n  SET_LOADING_PROFILE,\n  UPDATE_PROFILE,\n  UPDATE_PASSWORD,\n  PROFILE_ERROR,\n} from '../types';\n\nimport setAuthToken from '../../utils/setAuthToken';\n\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n    return;\n  }\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.get('/users/self');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Register User\nexport const register = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    dispatch(setLoading());\n\n    const res = await axios.post('/users/register', formData, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (error) {\n    console.log(error);\n\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Login user\nexport const login = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    dispatch(setLoading());\n\n    const res = await axios.post('/users/login', formData, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (error) {\n    console.log(error);\n\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Logout\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return { type: SET_LOADING };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return { type: CLEAR_ERRORS };\n};\n\n// Load profile\nexport const loadProfile = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    return;\n  }\n\n  try {\n    dispatch(setLoadingProfile());\n    const res = await axios.get('/users/self');\n\n    dispatch({\n      type: PROFILE_LOADED,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Update profile\nexport const updateProfile = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    dispatch(setLoadingProfile());\n\n    const res = await axios.put('/users/update', formData, config);\n\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\n\n    dispatch(loadUser());\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Update password\nexport const updatePassword = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    dispatch(setLoadingProfile());\n\n    const res = await axios.put('/users/auth', formData, config);\n\n    dispatch({ type: UPDATE_PASSWORD, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Set loading_profile to true\nexport const setLoadingProfile = () => {\n  return { type: SET_LOADING_PROFILE };\n};\n"]},"metadata":{},"sourceType":"module"}