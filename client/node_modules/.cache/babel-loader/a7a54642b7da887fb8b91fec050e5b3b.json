{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport validation from './Validation/Validation';\nimport Char from './Char/Char';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: ''\n    };\n\n    this.inputChangedHandler = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n    };\n\n    this.deleteCharHandler = index => {\n      const text = this.state.userInput.split('');\n      text.splice(index, 1);\n      const updatedText = text.join('');\n      this.setState({\n        userInput: updatedText\n      });\n    };\n  }\n\n  render() {\n    const charList = this.state.userInput.split('').map((ch, index) => {\n      return /*#__PURE__*/React.createElement(Char, {\n        character: ch,\n        key: index,\n        clicked: () => this.deleteCharHandler(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"Create a new component (=> ValidationComponent) which receives the text length as a prop\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Inside the ValidationComponent, either output \\\"Text too short\\\" or \\\"Text long enough\\\" depending on the text length (e.g. take 5 as a minimum length)\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"When you click a CharComponent, it should be removed from the entered text.\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Hint: Keep in mind that JavaScript strings are basically arrays!\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.inputChangedHandler,\n      value: this.state.userInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, this.state.userInput), /*#__PURE__*/React.createElement(Validation, {\n      inputLength: this.state.userInput.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), charList);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/App.js"],"names":["React","Component","validation","Char","App","state","userInput","inputChangedHandler","event","setState","target","value","deleteCharHandler","index","text","split","splice","updatedText","join","render","charList","map","ch","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,SAAS,EAAE;AADL,KADkB;;AAAA,SAK1BC,mBAL0B,GAKFC,KAAF,IAAa;AACjC,WAAKC,QAAL,CAAe;AAAEH,QAAAA,SAAS,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAA1B,OAAf;AACD,KAPyB;;AAAA,SAS1BC,iBAT0B,GASJC,KAAF,IAAa;AAC/B,YAAMC,IAAI,GAAG,KAAKT,KAAL,CAAWC,SAAX,CAAqBS,KAArB,CAA2B,EAA3B,CAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAYH,KAAZ,EAAmB,CAAnB;AACA,YAAMI,WAAW,GAAGH,IAAI,CAACI,IAAL,CAAU,EAAV,CAApB;AACA,WAAKT,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAEW;AAAZ,OAAd;AACD,KAdyB;AAAA;;AAgB1BE,EAAAA,MAAM,GAAI;AACR,UAAMC,QAAQ,GAAG,KAAKf,KAAL,CAAWC,SAAX,CAAqBS,KAArB,CAA2B,EAA3B,EAA+BM,GAA/B,CAAmC,CAACC,EAAD,EAAKT,KAAL,KAAe;AACjE,0BAAO,oBAAC,IAAD;AACL,QAAA,SAAS,EAAES,EADN;AAEL,QAAA,GAAG,EAAET,KAFA;AAGL,QAAA,OAAO,EAAE,MAAM,KAAKD,iBAAL,CAAuBC,KAAvB,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAID,KALgB,CAAjB;AAOA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sJADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iKAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yLAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0JALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFANF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,eAWE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAAKN,mBAFjB;AAGE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWC,SAAf,CAfF,eAgBE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,SAAX,CAAqBiB,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,EAiBGH,QAjBH,CADF;AAqBD;;AA7CyB;;AAgD5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport validation from './Validation/Validation';\nimport Char from './Char/Char';\n\nclass App extends Component {\n  state = {\n    userInput: ''\n  }\n\n  inputChangedHandler = ( event ) => {\n    this.setState( { userInput: event.target.value } );\n  }\n\n  deleteCharHandler = ( index ) => {\n    const text = this.state.userInput.split('');\n    text.splice(index, 1);\n    const updatedText = text.join('');\n    this.setState({userInput: updatedText});\n  }\n\n  render () {\n    const charList = this.state.userInput.split('').map((ch, index) => {\n      return <Char \n        character={ch} \n        key={index}\n        clicked={() => this.deleteCharHandler(index)} />;\n    });\n\n    return (\n      <div className=\"App\">\n        <ol>\n          <li>Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).</li>\n          <li>Create a new component (=> ValidationComponent) which receives the text length as a prop</li>\n          <li>Inside the ValidationComponent, either output \"Text too short\" or \"Text long enough\" depending on the text length (e.g. take 5 as a minimum length)</li>\n          <li>Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).</li>\n          <li>Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.</li>\n          <li>When you click a CharComponent, it should be removed from the entered text.</li>\n        </ol>\n        <p>Hint: Keep in mind that JavaScript strings are basically arrays!</p>\n        <hr />\n        <input\n          type=\"text\"\n          onChange={this.inputChangedHandler}\n          value={this.state.userInput} />\n        <p>{this.state.userInput}</p>\n        <Validation inputLength={this.state.userInput.length} />\n        {charList}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}