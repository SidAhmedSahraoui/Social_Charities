{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\components\\\\pages\\\\posts\\\\pending\\\\PendingPosts.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'; // Actions\n\nimport { getPendingPosts, approvePost, declinePost, clearErrors } from '../../../../redux/actions/postActions';\nimport { setAlert } from '../../../../redux/actions/alertActions'; // Utils\n\nimport { WEBSITE_NAME } from '../../../../utils/websiteData';\nimport formatedDate from '../../../../utils/formatedDate'; // Components\n\nimport Spinner from '../../../layout/Spinner';\nimport useStyles from './pending-jss';\n\nconst PendingPosts = props => {\n  const classes = useStyles();\n  const {\n    pending_posts,\n    loading_pending,\n    error,\n    getPendingPosts,\n    approvePost,\n    declinePost,\n    clearErrors,\n    setAlert\n  } = props;\n  useEffect(() => {\n    getPendingPosts(); //eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    } //eslint-disable-next-line\n\n  }, [error]);\n\n  const approvePostHandle = async id => {\n    await approvePost(id);\n    getPendingPosts();\n  };\n\n  const declinePostHandle = async id => {\n    await declinePost(id);\n    getPendingPosts();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Pending posts`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.page} card-shadow text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Pending posts\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Manage the posts that need your approval\"), pending_posts !== null && !loading_pending ? pending_posts.length < 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"No pending posts!\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, pending_posts.map(post => /*#__PURE__*/React.createElement(PendingPostItem, {\n    approvePost: approvePostHandle,\n    declinePost: declinePostHandle,\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })))));\n};\n\nconst mapSateToProps = state => ({\n  pending_posts: state.posts.pending_posts,\n  loading_pending: state.posts.loading_pending,\n  error: state.posts.error\n});\n\nexport default connect(mapSateToProps, {\n  getPendingPosts,\n  approvePost,\n  declinePost,\n  clearErrors,\n  setAlert\n})(PendingPosts);\n\nconst PendingPostItem = props => {\n  const {\n    post,\n    approvePost,\n    declinePost\n  } = props;\n  const {\n    id,\n    type,\n    username,\n    title,\n    category,\n    createdAt\n  } = post;\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, username != null && username, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"link-primary\",\n    to: `/pending/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, title != null && title, ' '), /*#__PURE__*/React.createElement(\"span\", {\n    className: `type ${parseInt(type) === 1 ? 'bg-success' : 'bg-primary'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, parseInt(type) === 1 ? 'Donation' : 'Request')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, category != null && category), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, createdAt != null && formatedDate(createdAt)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#approve\",\n    title: \"Approve\",\n    className: \"mr-2\",\n    onClick: () => approvePost(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"icon icon-approve\",\n    icon: faCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#decline\",\n    title: \"Decline\",\n    onClick: () => declinePost(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"icon icon-decline\",\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/components/pages/posts/pending/PendingPosts.js"],"names":["React","useEffect","Link","connect","Helmet","FontAwesomeIcon","faCheck","faTimes","getPendingPosts","approvePost","declinePost","clearErrors","setAlert","WEBSITE_NAME","formatedDate","Spinner","useStyles","PendingPosts","props","classes","pending_posts","loading_pending","error","approvePostHandle","id","declinePostHandle","page","length","map","post","mapSateToProps","state","posts","PendingPostItem","type","username","title","category","createdAt","parseInt"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\n\n// Actions\nimport {\n  getPendingPosts,\n  approvePost,\n  declinePost,\n  clearErrors,\n} from '../../../../redux/actions/postActions';\nimport { setAlert } from '../../../../redux/actions/alertActions';\n\n// Utils\nimport { WEBSITE_NAME } from '../../../../utils/websiteData';\nimport formatedDate from '../../../../utils/formatedDate';\n\n// Components\nimport Spinner from '../../../layout/Spinner';\n\nimport useStyles from './pending-jss';\n\nconst PendingPosts = (props) => {\n  const classes = useStyles();\n\n  const {\n    pending_posts,\n    loading_pending,\n    error,\n    getPendingPosts,\n    approvePost,\n    declinePost,\n    clearErrors,\n    setAlert,\n  } = props;\n\n  useEffect(() => {\n    getPendingPosts();\n\n    //eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    }\n\n    //eslint-disable-next-line\n  }, [error]);\n\n  const approvePostHandle = async (id) => {\n    await approvePost(id);\n    getPendingPosts();\n  };\n\n  const declinePostHandle = async (id) => {\n    await declinePost(id);\n    getPendingPosts();\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | Pending posts`}</title>\n      </Helmet>\n      <div className={`${classes.page} card-shadow text-center`}>\n        <h3 className='title'>Pending posts</h3>\n        <h6 className='subtitle'>Manage the posts that need your approval</h6>\n\n        {pending_posts !== null && !loading_pending ? (\n          pending_posts.length < 1 ? (\n            <div className='row mt-5'>\n              <div className='col text-center'>No pending posts!</div>\n            </div>\n          ) : (\n            <div className='row mt-4'>\n              <div className='col-12'>\n                <div className='table-responsive'>\n                  <table className='table text-left'>\n                    <thead>\n                      <tr>\n                        <th scope='col'>#</th>\n                        <th scope='col'>Username</th>\n                        <th scope='col'>Title</th>\n                        <th scope='col'>Category</th>\n                        <th scope='col'>Date</th>\n                        <th scope='col'></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {pending_posts.map((post) => (\n                        <PendingPostItem\n                          approvePost={approvePostHandle}\n                          declinePost={declinePostHandle}\n                          key={post.id}\n                          post={post}\n                        />\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          )\n        ) : (\n          <div className='row mt-4'>\n            <div className='col text-center'>\n              <Spinner />\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapSateToProps = (state) => ({\n  pending_posts: state.posts.pending_posts,\n  loading_pending: state.posts.loading_pending,\n  error: state.posts.error,\n});\n\nexport default connect(mapSateToProps, {\n  getPendingPosts,\n  approvePost,\n  declinePost,\n  clearErrors,\n  setAlert,\n})(PendingPosts);\n\nconst PendingPostItem = (props) => {\n  const { post, approvePost, declinePost } = props;\n\n  const { id, type, username, title, category, createdAt } = post;\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{username != null && username} </td>\n      <td>\n        <Link className='link-primary' to={`/pending/${id}`}>\n          {title != null && title}{' '}\n        </Link>\n        <span\n          className={`type ${\n            parseInt(type) === 1 ? 'bg-success' : 'bg-primary'\n          }`}\n        >\n          {parseInt(type) === 1 ? 'Donation' : 'Request'}\n        </span>\n      </td>\n      <td>{category != null && category}</td>\n      <td>{createdAt != null && formatedDate(createdAt)}</td>\n      <td>\n        <div className='actions text-right'>\n          <a\n            href='#approve'\n            title='Approve'\n            className='mr-2'\n            onClick={() => approvePost(id)}\n          >\n            <FontAwesomeIcon className='icon icon-approve' icon={faCheck} />\n          </a>\n          <a href='#decline' title='Decline' onClick={() => declinePost(id)}>\n            <FontAwesomeIcon className='icon icon-decline' icon={faTimes} />\n          </a>\n        </div>\n      </td>\n    </tr>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}