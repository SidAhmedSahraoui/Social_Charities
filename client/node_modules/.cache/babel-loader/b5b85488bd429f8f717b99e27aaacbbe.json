{"ast":null,"code":"import axios from 'axios';\nimport { ADD_POST, GET_REQUESTS, GET_REQUEST_BY_ID, GET_CATEGORIES, GET_DONATIONS, GET_DONATION_BY_ID, GET_PENDING_POSTS, GET_PENDING_POST_BY_ID, APPROVE_POST, DELETE_POST_BY_ADMIN, GET_USER_POSTS, GET_USER_POST_BY_ID, ADD_POST_ERROR, POST_ERROR, CATEGORIES_ERROR, SET_LOADING_ADD_POST, SET_LOADING_POSTS, SET_LOADING_CATEGORIES, SET_LOADING_PENDING_POSTS, SET_LOADING_USER_POSTS, CLEAR_ERRORS, PENDING_POST_ERROR, USER_POSTS_ERROR } from '../types';\nimport { URL as Api } from './api'; // Add Post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n\n  try {\n    dispatch(setLoadingAddPost());\n    const res = await axios.post(Api + `/posts`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n\n    console.log(error);\n    dispatch({\n      type: ADD_POST_ERROR,\n      payload: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg\n    });\n  }\n}; // Get requests\n\nexport const getRequests = (keywords, category, wilaya, city) => async dispatch => {\n  try {\n    dispatch(setLoadingPosts());\n    let query = '';\n    if (keywords !== null && keywords !== '') query += `keywords=${keywords}&`;\n    if (category !== 0 && category !== '0') query += `category=${category}&`;\n    if (wilaya !== 0 && wilaya !== '0') query += `wilaya=${wilaya}&`;\n    if (city !== 0 && city !== '0') query += `city=${city}&`;\n    const res = await axios.get(Api + `/posts/search/type/2/?${query}`);\n    dispatch({\n      type: GET_REQUESTS,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n\n    console.log(error);\n    dispatch({\n      type: POST_ERROR,\n      payload: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.msg\n    });\n  }\n}; // Get request by id\n\nexport const getRequestById = id => async dispatch => {\n  try {\n    dispatch(setLoadingPosts());\n    const res = await axios.get(Api + `/posts/type/2/id/${id}`);\n    dispatch({\n      type: GET_REQUEST_BY_ID,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n\n    console.log(error);\n    dispatch({\n      type: POST_ERROR,\n      payload: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.msg\n    });\n  }\n}; // Get donations\n\nexport const getDonations = (keywords, category, wilaya, city) => async dispatch => {\n  try {\n    dispatch(setLoadingPosts());\n    let query = '';\n    if (keywords !== null && keywords !== '') query += `keywords=${keywords}&`;\n    if (category !== 0 && category !== '0') query += `category=${category}&`;\n    if (wilaya !== 0 && wilaya !== '0') query += `wilaya=${wilaya}&`;\n    if (city !== 0 && city !== '0') query += `city=${city}&`;\n    const res = await axios.get(Api + `/posts/search/type/1/?${query}`);\n    dispatch({\n      type: GET_DONATIONS,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n\n    console.log(error);\n    dispatch({\n      type: POST_ERROR,\n      payload: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.msg\n    });\n  }\n}; // Get donation by id\n\nexport const getDonationById = id => async dispatch => {\n  try {\n    dispatch(setLoadingPosts());\n    const res = await axios.get(Api + `/posts/type/1/id/${id}`);\n    dispatch({\n      type: GET_DONATION_BY_ID,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n\n    console.log(error);\n    dispatch({\n      type: POST_ERROR,\n      payload: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.msg\n    });\n  }\n}; // Get categories\n\nexport const getCategories = () => async dispatch => {\n  try {\n    dispatch(setLoadingCategories());\n    const res = await axios.get(Api + '/postCategories');\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n\n    console.log(error);\n    dispatch({\n      type: CATEGORIES_ERROR,\n      payload: (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.msg\n    });\n  }\n}; // Get Pending Posts\n\nexport const getPendingPosts = () => async dispatch => {\n  try {\n    dispatch(setLoadingPendingPosts());\n    const res = await axios.get(Api + '/posts/unapproved');\n    dispatch({\n      type: GET_PENDING_POSTS,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response7, _error$response7$data;\n\n    console.log(error);\n    dispatch({\n      type: PENDING_POST_ERROR,\n      payload: (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.msg\n    });\n  }\n}; // Get Pending Post By Id\n\nexport const getPendingPostById = id => async dispatch => {\n  try {\n    dispatch(setLoadingPendingPosts());\n    const res = await axios.get(Api + `/posts/unapproved/${id}`);\n    dispatch({\n      type: GET_PENDING_POST_BY_ID,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response8, _error$response8$data;\n\n    console.log(error);\n    dispatch({\n      type: PENDING_POST_ERROR,\n      payload: (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.msg\n    });\n  }\n}; // Approve Post\n\nexport const approvePost = id => async dispatch => {\n  try {\n    const res = await axios.post(Api + `/posts/approval/${id}`);\n    dispatch({\n      type: APPROVE_POST,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response9, _error$response9$data;\n\n    console.log(error);\n    dispatch({\n      type: PENDING_POST_ERROR,\n      payload: (_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.msg\n    });\n  }\n}; // Decline Post\n\nexport const declinePost = id => async dispatch => {\n  try {\n    const res = await axios.delete(Api + `/posts/admin/delete/${id}`);\n    dispatch({\n      type: DELETE_POST_BY_ADMIN,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response10, _error$response10$dat;\n\n    console.log(error);\n    dispatch({\n      type: PENDING_POST_ERROR,\n      payload: (_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.msg\n    });\n  }\n}; // Get User Posts\n\nexport const getUserPosts = () => async dispatch => {\n  try {\n    dispatch(setLoadingUserPosts());\n    const res = await axios.get(Api + `/posts/user`);\n    dispatch({\n      type: GET_USER_POSTS,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response11, _error$response11$dat;\n\n    console.log(error);\n    dispatch({\n      type: USER_POSTS_ERROR,\n      payload: (_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.msg\n    });\n  }\n}; // Get User Post by id\n\nexport const getUserPostById = id => async dispatch => {\n  try {\n    dispatch(setLoadingUserPosts());\n    const res = await axios.get(Api + `/posts/user/id/${id}`);\n    dispatch({\n      type: GET_USER_POST_BY_ID,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response12, _error$response12$dat;\n\n    console.log(error);\n    dispatch({\n      type: USER_POSTS_ERROR,\n      payload: (_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.msg\n    });\n  }\n}; // Set loading add post to true\n\nexport const setLoadingAddPost = () => {\n  return {\n    type: SET_LOADING_ADD_POST\n  };\n}; // Set loading posts to true\n\nexport const setLoadingPosts = () => {\n  return {\n    type: SET_LOADING_POSTS\n  };\n}; // Set loading categories to true\n\nexport const setLoadingCategories = () => {\n  return {\n    type: SET_LOADING_CATEGORIES\n  };\n}; // Set loading pending posts to true\n\nexport const setLoadingPendingPosts = () => {\n  return {\n    type: SET_LOADING_PENDING_POSTS\n  };\n}; // Set loading users posts to true\n\nexport const setLoadingUserPosts = () => {\n  return {\n    type: SET_LOADING_USER_POSTS\n  };\n}; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["C:/MyDeskTop/soc/src/redux/actions/postActions.js"],"names":["axios","ADD_POST","GET_REQUESTS","GET_REQUEST_BY_ID","GET_CATEGORIES","GET_DONATIONS","GET_DONATION_BY_ID","GET_PENDING_POSTS","GET_PENDING_POST_BY_ID","APPROVE_POST","DELETE_POST_BY_ADMIN","GET_USER_POSTS","GET_USER_POST_BY_ID","ADD_POST_ERROR","POST_ERROR","CATEGORIES_ERROR","SET_LOADING_ADD_POST","SET_LOADING_POSTS","SET_LOADING_CATEGORIES","SET_LOADING_PENDING_POSTS","SET_LOADING_USER_POSTS","CLEAR_ERRORS","PENDING_POST_ERROR","USER_POSTS_ERROR","URL","Api","addPost","formData","dispatch","config","headers","setLoadingAddPost","res","post","type","payload","data","error","console","log","response","msg","getRequests","keywords","category","wilaya","city","setLoadingPosts","query","get","getRequestById","id","getDonations","getDonationById","getCategories","setLoadingCategories","getPendingPosts","setLoadingPendingPosts","getPendingPostById","approvePost","declinePost","delete","getUserPosts","setLoadingUserPosts","getUserPostById","clearErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,QADF,EAEEC,YAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,aALF,EAMEC,kBANF,EAOEC,iBAPF,EAQEC,sBARF,EASEC,YATF,EAUEC,oBAVF,EAWEC,cAXF,EAYEC,mBAZF,EAaEC,cAbF,EAcEC,UAdF,EAeEC,gBAfF,EAgBEC,oBAhBF,EAiBEC,iBAjBF,EAkBEC,sBAlBF,EAmBEC,yBAnBF,EAoBEC,sBApBF,EAqBEC,YArBF,EAsBEC,kBAtBF,EAuBEC,gBAvBF,QAwBO,UAxBP;AA0BA,SAASC,GAAG,IAAIC,GAAhB,QAA2B,OAA3B,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AACvD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAKA,MAAI;AACFF,IAAAA,QAAQ,CAACG,iBAAiB,EAAlB,CAAR;AAEA,UAAMC,GAAG,GAAG,MAAMhC,KAAK,CAACiC,IAAN,CAAWR,GAAG,GAAI,QAAlB,EAA2BE,QAA3B,EAAqCE,MAArC,CAAlB;AAEAD,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEjC,QADC;AAEPkC,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GATD,CASE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAErB,cADC;AAEPsB,MAAAA,OAAO,qBAAEE,KAAK,CAACG,QAAR,4EAAE,gBAAgBJ,IAAlB,yDAAE,qBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAtBM,C,CAwBP;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,MAArB,EAA6BC,IAA7B,KAAsC,MAC/DlB,QAD+D,IAE5D;AACH,MAAI;AACFA,IAAAA,QAAQ,CAACmB,eAAe,EAAhB,CAAR;AAEA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIL,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,EAAtC,EAA0CK,KAAK,IAAK,YAAWL,QAAS,GAA9B;AAC1C,QAAIC,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,KAAK,GAAnC,EAAwCI,KAAK,IAAK,YAAWJ,QAAS,GAA9B;AACxC,QAAIC,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,GAA/B,EAAoCG,KAAK,IAAK,UAASH,MAAO,GAA1B;AACpC,QAAIC,IAAI,KAAK,CAAT,IAAcA,IAAI,KAAK,GAA3B,EAAgCE,KAAK,IAAK,QAAOF,IAAK,GAAtB;AAEhC,UAAMd,GAAG,GAAG,MAAMhC,KAAK,CAACiD,GAAN,CAAUxB,GAAG,GAAI,yBAAwBuB,KAAM,EAA/C,CAAlB;AAEApB,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEhC,YAAR;AAAsBiC,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAAnC,KAAD,CAAR;AACD,GAZD,CAYE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEpB,UADC;AAEPqB,MAAAA,OAAO,sBAAEE,KAAK,CAACG,QAAR,8EAAE,iBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAtBM,C,CAwBP;;AACA,OAAO,MAAMS,cAAc,GAAIC,EAAD,IAAQ,MAAOvB,QAAP,IAAoB;AACxD,MAAI;AACFA,IAAAA,QAAQ,CAACmB,eAAe,EAAhB,CAAR;AAEA,UAAMf,GAAG,GAAG,MAAMhC,KAAK,CAACiD,GAAN,CAAUxB,GAAG,GAAI,oBAAmB0B,EAAG,EAAvC,CAAlB;AAEAvB,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE/B,iBAAR;AAA2BgC,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAAxC,KAAD,CAAR;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEpB,UADC;AAEPqB,MAAAA,OAAO,sBAAEE,KAAK,CAACG,QAAR,8EAAE,iBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMW,YAAY,GAAG,CAACT,QAAD,EAAWC,QAAX,EAAqBC,MAArB,EAA6BC,IAA7B,KAAsC,MAChElB,QADgE,IAE7D;AACH,MAAI;AACFA,IAAAA,QAAQ,CAACmB,eAAe,EAAhB,CAAR;AAEA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIL,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,EAAtC,EAA0CK,KAAK,IAAK,YAAWL,QAAS,GAA9B;AAC1C,QAAIC,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,KAAK,GAAnC,EAAwCI,KAAK,IAAK,YAAWJ,QAAS,GAA9B;AACxC,QAAIC,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,GAA/B,EAAoCG,KAAK,IAAK,UAASH,MAAO,GAA1B;AACpC,QAAIC,IAAI,KAAK,CAAT,IAAcA,IAAI,KAAK,GAA3B,EAAgCE,KAAK,IAAK,QAAOF,IAAK,GAAtB;AAEhC,UAAMd,GAAG,GAAG,MAAMhC,KAAK,CAACiD,GAAN,CAAUxB,GAAG,GAAI,yBAAwBuB,KAAM,EAA/C,CAAlB;AAEApB,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE7B,aAAR;AAAuB8B,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAApC,KAAD,CAAR;AACD,GAZD,CAYE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEpB,UADC;AAEPqB,MAAAA,OAAO,sBAAEE,KAAK,CAACG,QAAR,8EAAE,iBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAtBM,C,CAwBP;;AACA,OAAO,MAAMY,eAAe,GAAIF,EAAD,IAAQ,MAAOvB,QAAP,IAAoB;AACzD,MAAI;AACFA,IAAAA,QAAQ,CAACmB,eAAe,EAAhB,CAAR;AAEA,UAAMf,GAAG,GAAG,MAAMhC,KAAK,CAACiD,GAAN,CAAUxB,GAAG,GAAI,oBAAmB0B,EAAG,EAAvC,CAAlB;AAEAvB,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE5B,kBAAR;AAA4B6B,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAAzC,KAAD,CAAR;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEpB,UADC;AAEPqB,MAAAA,OAAO,sBAAEE,KAAK,CAACG,QAAR,8EAAE,iBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMa,aAAa,GAAG,MAAM,MAAO1B,QAAP,IAAoB;AACrD,MAAI;AACFA,IAAAA,QAAQ,CAAC2B,oBAAoB,EAArB,CAAR;AAEA,UAAMvB,GAAG,GAAG,MAAMhC,KAAK,CAACiD,GAAN,CAAUxB,GAAG,GAAG,iBAAhB,CAAlB;AAEAG,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE9B,cAAR;AAAwB+B,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAArC,KAAD,CAAR;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEnB,gBADC;AAEPoB,MAAAA,OAAO,sBAAEE,KAAK,CAACG,QAAR,8EAAE,iBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMe,eAAe,GAAG,MAAM,MAAO5B,QAAP,IAAoB;AACvD,MAAI;AACFA,IAAAA,QAAQ,CAAC6B,sBAAsB,EAAvB,CAAR;AACA,UAAMzB,GAAG,GAAG,MAAMhC,KAAK,CAACiD,GAAN,CAAUxB,GAAG,GAAG,mBAAhB,CAAlB;AAEAG,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE3B,iBAAR;AAA2B4B,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAAxC,KAAD,CAAR;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,kBADC;AAEPa,MAAAA,OAAO,sBAAEE,KAAK,CAACG,QAAR,8EAAE,iBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAbM,C,CAeP;;AACA,OAAO,MAAMiB,kBAAkB,GAAIP,EAAD,IAAQ,MAAOvB,QAAP,IAAoB;AAC5D,MAAI;AACFA,IAAAA,QAAQ,CAAC6B,sBAAsB,EAAvB,CAAR;AAEA,UAAMzB,GAAG,GAAG,MAAMhC,KAAK,CAACiD,GAAN,CAAUxB,GAAG,GAAI,qBAAoB0B,EAAG,EAAxC,CAAlB;AAEAvB,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE1B,sBAAR;AAAgC2B,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAA7C,KAAD,CAAR;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,kBADC;AAEPa,MAAAA,OAAO,sBAAEE,KAAK,CAACG,QAAR,8EAAE,iBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMkB,WAAW,GAAIR,EAAD,IAAQ,MAAOvB,QAAP,IAAoB;AACrD,MAAI;AACF,UAAMI,GAAG,GAAG,MAAMhC,KAAK,CAACiC,IAAN,CAAWR,GAAG,GAAI,mBAAkB0B,EAAG,EAAvC,CAAlB;AAEAvB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEzB,YADC;AAEP0B,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,kBADC;AAEPa,MAAAA,OAAO,sBAAEE,KAAK,CAACG,QAAR,8EAAE,iBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAfM,C,CAiBP;;AACA,OAAO,MAAMmB,WAAW,GAAIT,EAAD,IAAQ,MAAOvB,QAAP,IAAoB;AACrD,MAAI;AACF,UAAMI,GAAG,GAAG,MAAMhC,KAAK,CAAC6D,MAAN,CAAapC,GAAG,GAAI,uBAAsB0B,EAAG,EAA7C,CAAlB;AAEAvB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAExB,oBADC;AAEPyB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,kBADC;AAEPa,MAAAA,OAAO,uBAAEE,KAAK,CAACG,QAAR,+EAAE,kBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAfM,C,CAiBP;;AACA,OAAO,MAAMqB,YAAY,GAAG,MAAM,MAAOlC,QAAP,IAAoB;AACpD,MAAI;AACFA,IAAAA,QAAQ,CAACmC,mBAAmB,EAApB,CAAR;AAEA,UAAM/B,GAAG,GAAG,MAAMhC,KAAK,CAACiD,GAAN,CAAUxB,GAAG,GAAI,aAAjB,CAAlB;AAEAG,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEvB,cAAR;AAAwBwB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAArC,KAAD,CAAR;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,gBADC;AAEPY,MAAAA,OAAO,uBAAEE,KAAK,CAACG,QAAR,+EAAE,kBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMuB,eAAe,GAAIb,EAAD,IAAQ,MAAOvB,QAAP,IAAoB;AACzD,MAAI;AACFA,IAAAA,QAAQ,CAACmC,mBAAmB,EAApB,CAAR;AAEA,UAAM/B,GAAG,GAAG,MAAMhC,KAAK,CAACiD,GAAN,CAAUxB,GAAG,GAAI,kBAAiB0B,EAAG,EAArC,CAAlB;AAEAvB,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEtB,mBAAR;AAA6BuB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAA1C,KAAD,CAAR;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AAAA;;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,gBADC;AAEPY,MAAAA,OAAO,uBAAEE,KAAK,CAACG,QAAR,+EAAE,kBAAgBJ,IAAlB,0DAAE,sBAAsBK;AAFxB,KAAD,CAAR;AAID;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMV,iBAAiB,GAAG,MAAM;AACrC,SAAO;AACLG,IAAAA,IAAI,EAAElB;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAM+B,eAAe,GAAG,MAAM;AACnC,SAAO;AACLb,IAAAA,IAAI,EAAEjB;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAMsC,oBAAoB,GAAG,MAAM;AACxC,SAAO;AACLrB,IAAAA,IAAI,EAAEhB;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAMuC,sBAAsB,GAAG,MAAM;AAC1C,SAAO;AACLvB,IAAAA,IAAI,EAAEf;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAM4C,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACL7B,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAM6C,WAAW,GAAG,MAAM;AAC/B,SAAO;AAAE/B,IAAAA,IAAI,EAAEb;AAAR,GAAP;AACD,CAFM","sourcesContent":["import axios from 'axios';\n\nimport {\n  ADD_POST,\n  GET_REQUESTS,\n  GET_REQUEST_BY_ID,\n  GET_CATEGORIES,\n  GET_DONATIONS,\n  GET_DONATION_BY_ID,\n  GET_PENDING_POSTS,\n  GET_PENDING_POST_BY_ID,\n  APPROVE_POST,\n  DELETE_POST_BY_ADMIN,\n  GET_USER_POSTS,\n  GET_USER_POST_BY_ID,\n  ADD_POST_ERROR,\n  POST_ERROR,\n  CATEGORIES_ERROR,\n  SET_LOADING_ADD_POST,\n  SET_LOADING_POSTS,\n  SET_LOADING_CATEGORIES,\n  SET_LOADING_PENDING_POSTS,\n  SET_LOADING_USER_POSTS,\n  CLEAR_ERRORS,\n  PENDING_POST_ERROR,\n  USER_POSTS_ERROR,\n} from '../types';\n\nimport { URL as Api } from './api';\n\n// Add Post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  };\n  try {\n    dispatch(setLoadingAddPost());\n\n    const res = await axios.post(Api + `/posts`, formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: ADD_POST_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Get requests\nexport const getRequests = (keywords, category, wilaya, city) => async (\n  dispatch\n) => {\n  try {\n    dispatch(setLoadingPosts());\n\n    let query = '';\n    if (keywords !== null && keywords !== '') query += `keywords=${keywords}&`;\n    if (category !== 0 && category !== '0') query += `category=${category}&`;\n    if (wilaya !== 0 && wilaya !== '0') query += `wilaya=${wilaya}&`;\n    if (city !== 0 && city !== '0') query += `city=${city}&`;\n\n    const res = await axios.get(Api + `/posts/search/type/2/?${query}`);\n\n    dispatch({ type: GET_REQUESTS, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: POST_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Get request by id\nexport const getRequestById = (id) => async (dispatch) => {\n  try {\n    dispatch(setLoadingPosts());\n\n    const res = await axios.get(Api + `/posts/type/2/id/${id}`);\n\n    dispatch({ type: GET_REQUEST_BY_ID, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: POST_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Get donations\nexport const getDonations = (keywords, category, wilaya, city) => async (\n  dispatch\n) => {\n  try {\n    dispatch(setLoadingPosts());\n\n    let query = '';\n    if (keywords !== null && keywords !== '') query += `keywords=${keywords}&`;\n    if (category !== 0 && category !== '0') query += `category=${category}&`;\n    if (wilaya !== 0 && wilaya !== '0') query += `wilaya=${wilaya}&`;\n    if (city !== 0 && city !== '0') query += `city=${city}&`;\n\n    const res = await axios.get(Api + `/posts/search/type/1/?${query}`);\n\n    dispatch({ type: GET_DONATIONS, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: POST_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Get donation by id\nexport const getDonationById = (id) => async (dispatch) => {\n  try {\n    dispatch(setLoadingPosts());\n\n    const res = await axios.get(Api + `/posts/type/1/id/${id}`);\n\n    dispatch({ type: GET_DONATION_BY_ID, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: POST_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Get categories\nexport const getCategories = () => async (dispatch) => {\n  try {\n    dispatch(setLoadingCategories());\n\n    const res = await axios.get(Api + '/postCategories');\n\n    dispatch({ type: GET_CATEGORIES, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: CATEGORIES_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Get Pending Posts\nexport const getPendingPosts = () => async (dispatch) => {\n  try {\n    dispatch(setLoadingPendingPosts());\n    const res = await axios.get(Api + '/posts/unapproved');\n\n    dispatch({ type: GET_PENDING_POSTS, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PENDING_POST_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Get Pending Post By Id\nexport const getPendingPostById = (id) => async (dispatch) => {\n  try {\n    dispatch(setLoadingPendingPosts());\n\n    const res = await axios.get(Api + `/posts/unapproved/${id}`);\n\n    dispatch({ type: GET_PENDING_POST_BY_ID, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PENDING_POST_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Approve Post\nexport const approvePost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.post(Api + `/posts/approval/${id}`);\n\n    dispatch({\n      type: APPROVE_POST,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PENDING_POST_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Decline Post\nexport const declinePost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(Api + `/posts/admin/delete/${id}`);\n\n    dispatch({\n      type: DELETE_POST_BY_ADMIN,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PENDING_POST_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Get User Posts\nexport const getUserPosts = () => async (dispatch) => {\n  try {\n    dispatch(setLoadingUserPosts());\n\n    const res = await axios.get(Api + `/posts/user`);\n\n    dispatch({ type: GET_USER_POSTS, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_POSTS_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Get User Post by id\nexport const getUserPostById = (id) => async (dispatch) => {\n  try {\n    dispatch(setLoadingUserPosts());\n\n    const res = await axios.get(Api + `/posts/user/id/${id}`);\n\n    dispatch({ type: GET_USER_POST_BY_ID, payload: res.data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_POSTS_ERROR,\n      payload: error.response?.data?.msg,\n    });\n  }\n};\n\n// Set loading add post to true\nexport const setLoadingAddPost = () => {\n  return {\n    type: SET_LOADING_ADD_POST,\n  };\n};\n\n// Set loading posts to true\nexport const setLoadingPosts = () => {\n  return {\n    type: SET_LOADING_POSTS,\n  };\n};\n\n// Set loading categories to true\nexport const setLoadingCategories = () => {\n  return {\n    type: SET_LOADING_CATEGORIES,\n  };\n};\n\n// Set loading pending posts to true\nexport const setLoadingPendingPosts = () => {\n  return {\n    type: SET_LOADING_PENDING_POSTS,\n  };\n};\n\n// Set loading users posts to true\nexport const setLoadingUserPosts = () => {\n  return {\n    type: SET_LOADING_USER_POSTS,\n  };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return { type: CLEAR_ERRORS };\n};\n"]},"metadata":{},"sourceType":"module"}