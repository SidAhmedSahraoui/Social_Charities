{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserInput/UserInput';\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, \"Create TWO new components: UserInput and UserOutput\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, \"UserInput should hold an input element, UserOutput two paragraphs\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, \"Output multiple UserOutput components in the App component (any paragraph texts of your choice)\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \"Pass a username (of your choice) to UserOutput via props and display it there\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \"Add state to the App component (=> the username) and pass the username to the UserOutput component\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, \"Add a method to manipulate the state (=> an event-handler method)\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, \"Pass the event-handler method reference to the UserInput component and bind it to the input-change event\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, \"Ensure that the new input entered by the user overwrites the old username passed to UserOutput\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"Add two-way-binding to your input (in UserInput) to also display the starting username\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), \"         \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }\n    }), \"        \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(UserInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(UserOutput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/App.js"],"names":["React","Component","UserInput","UserOutput","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAIA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE1BI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6HAVF,CADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,4BAcoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdpB,2BAcqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdrC,eAiBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,eAkBI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,CADF;AAwBD;;AA3ByB;;AA8B5B,eAAeD,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserInput/UserInput';\n\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <ol>\n          <li>Create TWO new components: UserInput and UserOutput</li>\n          <li>UserInput should hold an input element, UserOutput two paragraphs</li>\n          <li>Output multiple UserOutput components in the App component (any paragraph texts of your choice)</li>\n          <li>Pass a username (of your choice) to UserOutput via props and display it there</li>\n          <li>Add state to the App component (=> the username) and pass the username to the UserOutput component</li>\n          <li>Add a method to manipulate the state (=> an event-handler method)</li>\n          <li>Pass the event-handler method reference to the UserInput component and bind it to the input-change event</li>\n          <li>Ensure that the new input entered by the user overwrites the old username passed to UserOutput</li>\n          <li>Add two-way-binding to your input (in UserInput) to also display the starting username</li>\n          <li>Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets</li>\n        </ol>\n\n        <br></br>         <br></br>        <br></br>\n\n        \n          <UserInput/>\n          <UserOutput />\n          \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}