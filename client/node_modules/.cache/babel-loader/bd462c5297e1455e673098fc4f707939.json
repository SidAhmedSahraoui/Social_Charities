{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\soc\\\\src\\\\components\\\\pages\\\\messages\\\\MessagesShow.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faUserCircle, faPaperPlane } from '@fortawesome/free-solid-svg-icons'; // Actions\n\nimport { getConversationById, sendMessage, clearErrors } from '../../../redux/actions/messageActions';\nimport { setAlert } from '../../../redux/actions/alertActions'; // Utils\n\nimport { WEBSITE_NAME } from '../../../utils/websiteData';\nimport formatedDate from '../../../utils/formatedDate'; // Components\n\nimport Sidebar from '../../layout/Sidebar';\nimport Spinner from '../../layout/Spinner';\nimport useStyles from './messages-jss';\n\nconst MessagesShow = props => {\n  const classes = useStyles();\n  const {\n    match,\n    loading,\n    loading_send,\n    conversation_current,\n    getConversationById,\n    sendMessage,\n    clearErrors,\n    error_send,\n    error,\n    setAlert\n  } = props;\n  useEffect(() => {\n    getConversationById(match.params.id); //eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    } //eslint-disable-next-line\n\n  }, [error]);\n  const [message, setMessage] = useState('');\n\n  const handleMessageOnChange = e => {\n    setMessage(e.target.value);\n  };\n\n  const sendMessageHandle = async () => {\n    if (!message) {\n      setAlert('Message is empty');\n      return;\n    }\n\n    if (conversation_current.other_user === null) return;\n    await sendMessage({\n      user_Reciever: conversation_current.other_user.id,\n      content: message\n    });\n\n    if (!error_send) {\n      getConversationById(match.params.id);\n      setMessage('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, `${WEBSITE_NAME} | Messages`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.page} card-shadow text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Messages\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Here you can find your messages\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.page} card-shadow text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-lg-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"link-primary\",\n    to: `/messages`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"mr-1\",\n    icon: faArrowLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), \" Messages\")), conversation_current !== null && !loading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-messages mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"other-user-details card-shadow p-3 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"icon\",\n    icon: faUserCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"username d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"@\", conversation_current.other_user !== null && conversation_current.other_user.username)), conversation_current.messages.length < 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-messages mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }\n  }, \"No messages!\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages py-3 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }\n  }, conversation_current.messages.map(message => /*#__PURE__*/React.createElement(\"div\", {\n    className: `message message-${message.isSent ? 'right' : 'left'}`,\n    key: message.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, !message.isSent && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"icon mr-2\",\n    icon: faUserCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 31\n    }\n  }, message.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 31\n    }\n  }, formatedDate(message.createdAt)))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-form p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control message-input\",\n    rows: \"3\",\n    placeholder: \"Your message..\",\n    value: message,\n    disabled: loading_send,\n    onChange: handleMessageOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button-primary mt-3\",\n    disabled: loading_send,\n    onClick: sendMessageHandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, ' ', /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"mr-2\",\n    icon: faPaperPlane,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }), \"Send\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-none d-lg-block col-12 col-lg-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapSateToProps = state => ({\n  conversation_current: state.messages.conversation_current,\n  loading: state.messages.loading,\n  loading_send: state.messages.loading_send,\n  error: state.messages.error,\n  error_send: state.messages.error_send\n});\n\nexport default connect(mapSateToProps, {\n  getConversationById,\n  sendMessage,\n  clearErrors,\n  setAlert\n})(MessagesShow);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/components/pages/messages/MessagesShow.js"],"names":["React","useEffect","useState","Link","connect","Helmet","FontAwesomeIcon","faArrowLeft","faUserCircle","faPaperPlane","getConversationById","sendMessage","clearErrors","setAlert","WEBSITE_NAME","formatedDate","Sidebar","Spinner","useStyles","MessagesShow","props","classes","match","loading","loading_send","conversation_current","error_send","error","params","id","message","setMessage","handleMessageOnChange","e","target","value","sendMessageHandle","other_user","user_Reciever","content","page","username","messages","length","map","isSent","createdAt","mapSateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,YAHF,QAIO,mCAJP,C,CAMA;;AACA,SACEC,mBADF,EAEEC,WAFF,EAGEC,WAHF,QAIO,uCAJP;AAKA,SAASC,QAAT,QAAyB,qCAAzB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,YAAP,MAAyB,6BAAzB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AAEA,QAAM;AACJI,IAAAA,KADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,oBAJI;AAKJf,IAAAA,mBALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA,WAPI;AAQJc,IAAAA,UARI;AASJC,IAAAA,KATI;AAUJd,IAAAA;AAVI,MAWFO,KAXJ;AAaAnB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,mBAAmB,CAACY,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAnB,CADc,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA5B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,KAAJ,EAAW;AACTd,MAAAA,QAAQ,CAACc,KAAD,CAAR;AACAf,MAAAA,WAAW;AACZ,KAJa,CAMd;;AACD,GAPQ,EAON,CAACe,KAAD,CAPM,CAAT;AASA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAM8B,qBAAqB,GAAIC,CAAD,IAAO;AACnCF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,YAAY;AACpC,QAAI,CAACN,OAAL,EAAc;AACZjB,MAAAA,QAAQ,CAAC,kBAAD,CAAR;AACA;AACD;;AACD,QAAIY,oBAAoB,CAACY,UAArB,KAAoC,IAAxC,EAA8C;AAE9C,UAAM1B,WAAW,CAAC;AAChB2B,MAAAA,aAAa,EAAEb,oBAAoB,CAACY,UAArB,CAAgCR,EAD/B;AAEhBU,MAAAA,OAAO,EAAET;AAFO,KAAD,CAAjB;;AAKA,QAAI,CAACJ,UAAL,EAAiB;AACfhB,MAAAA,mBAAmB,CAACY,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAnB;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAhBD;;AAkBA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS,GAAEjB,YAAa,aAAxB,CADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAG,GAAEO,OAAO,CAACmB,IAAK,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,CAJF,eASE;AAAK,IAAA,SAAS,EAAG,GAAEnB,OAAO,CAACmB,IAAK,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,EAAE,EAAG,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAkC,IAAA,IAAI,EAAEjC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,cADF,CADF,EAMGkB,oBAAoB,KAAK,IAAzB,IAAiC,CAACF,OAAlC,gBACC,uDACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAkC,IAAA,IAAI,EAAEf,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEGiB,oBAAoB,CAACY,UAArB,KAAoC,IAApC,IACCZ,oBAAoB,CAACY,UAArB,CAAgCI,QAHpC,CALF,CADF,EAaGhB,oBAAoB,CAACiB,QAArB,CAA8BC,MAA9B,GAAuC,CAAvC,gBACC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADD,gBAKC,uDACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,oBAAoB,CAACiB,QAArB,CAA8BE,GAA9B,CAAmCd,OAAD,iBACjC;AACE,IAAA,SAAS,EAAG,mBACVA,OAAO,CAACe,MAAR,GAAiB,OAAjB,GAA2B,MAC5B,EAHH;AAIE,IAAA,GAAG,EAAEf,OAAO,CAACD,EAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,OAAO,CAACe,MAAT,iBACC,oBAAC,eAAD;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,IAAI,EAAErC,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANF,eAcE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BsB,OAAO,CAACS,OAAlC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,YAAY,CAACe,OAAO,CAACgB,SAAT,CADf,CAFF,CAdF,CADD,CADH,CADF,CAlBJ,CADF,eAiDE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,KAAK,EAAEhB,OAJT;AAKE,IAAA,QAAQ,EAAEN,YALZ;AAME,IAAA,QAAQ,EAAEQ,qBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,QAAQ,EAAER,YAFZ;AAGE,IAAA,OAAO,EAAEY,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,GALH,eAME,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAkC,IAAA,IAAI,EAAE3B,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,SAVF,CADF,CADF,CAjDF,CADD,gBA4EC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlFJ,CADF,eAwFE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxFF,CADF,CATF,CADF;AA0GD,CAhKD;;AAkKA,MAAMsC,cAAc,GAAIC,KAAD,KAAY;AACjCvB,EAAAA,oBAAoB,EAAEuB,KAAK,CAACN,QAAN,CAAejB,oBADJ;AAEjCF,EAAAA,OAAO,EAAEyB,KAAK,CAACN,QAAN,CAAenB,OAFS;AAGjCC,EAAAA,YAAY,EAAEwB,KAAK,CAACN,QAAN,CAAelB,YAHI;AAIjCG,EAAAA,KAAK,EAAEqB,KAAK,CAACN,QAAN,CAAef,KAJW;AAKjCD,EAAAA,UAAU,EAAEsB,KAAK,CAACN,QAAN,CAAehB;AALM,CAAZ,CAAvB;;AAQA,eAAetB,OAAO,CAAC2C,cAAD,EAAiB;AACrCrC,EAAAA,mBADqC;AAErCC,EAAAA,WAFqC;AAGrCC,EAAAA,WAHqC;AAIrCC,EAAAA;AAJqC,CAAjB,CAAP,CAKZM,YALY,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faArrowLeft,\n  faUserCircle,\n  faPaperPlane,\n} from '@fortawesome/free-solid-svg-icons';\n\n// Actions\nimport {\n  getConversationById,\n  sendMessage,\n  clearErrors,\n} from '../../../redux/actions/messageActions';\nimport { setAlert } from '../../../redux/actions/alertActions';\n\n// Utils\nimport { WEBSITE_NAME } from '../../../utils/websiteData';\nimport formatedDate from '../../../utils/formatedDate';\n\n// Components\nimport Sidebar from '../../layout/Sidebar';\nimport Spinner from '../../layout/Spinner';\n\nimport useStyles from './messages-jss';\n\nconst MessagesShow = (props) => {\n  const classes = useStyles();\n\n  const {\n    match,\n    loading,\n    loading_send,\n    conversation_current,\n    getConversationById,\n    sendMessage,\n    clearErrors,\n    error_send,\n    error,\n    setAlert,\n  } = props;\n\n  useEffect(() => {\n    getConversationById(match.params.id);\n\n    //eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      setAlert(error);\n      clearErrors();\n    }\n\n    //eslint-disable-next-line\n  }, [error]);\n\n  const [message, setMessage] = useState('');\n  const handleMessageOnChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const sendMessageHandle = async () => {\n    if (!message) {\n      setAlert('Message is empty');\n      return;\n    }\n    if (conversation_current.other_user === null) return;\n\n    await sendMessage({\n      user_Reciever: conversation_current.other_user.id,\n      content: message,\n    });\n\n    if (!error_send) {\n      getConversationById(match.params.id);\n      setMessage('');\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${WEBSITE_NAME} | Messages`}</title>\n      </Helmet>\n      <div className={`${classes.page} card-shadow text-center`}>\n        <h3 className='title'>Messages</h3>\n        <h6 className='subtitle'>Here you can find your messages</h6>\n      </div>\n\n      <div className={`${classes.page} card-shadow text-center`}>\n        <div className='row'>\n          <div className='col-12 col-lg-9'>\n            <h6 className='text-left'>\n              <Link className='link-primary' to={`/messages`}>\n                <FontAwesomeIcon className='mr-1' icon={faArrowLeft} /> Messages\n              </Link>\n            </h6>\n            {conversation_current !== null && !loading ? (\n              <>\n                <div className='conversation-messages mt-3'>\n                  <div className='other-user-details card-shadow p-3 mb-4'>\n                    <div>\n                      <FontAwesomeIcon className='icon' icon={faUserCircle} />\n                    </div>\n\n                    <span className='username d-block'>\n                      @\n                      {conversation_current.other_user !== null &&\n                        conversation_current.other_user.username}\n                    </span>\n                  </div>\n\n                  {conversation_current.messages.length < 1 ? (\n                    <div className='no-messages mt-5'>\n                      <h5>No messages!</h5>\n                    </div>\n                  ) : (\n                    <>\n                      <div className='messages py-3 mb-4'>\n                        {conversation_current.messages.map((message) => (\n                          <div\n                            className={`message message-${\n                              message.isSent ? 'right' : 'left'\n                            }`}\n                            key={message.id}\n                          >\n                            <div className='d-inline-block'>\n                              {!message.isSent && (\n                                <FontAwesomeIcon\n                                  className='icon mr-2'\n                                  icon={faUserCircle}\n                                />\n                              )}\n                            </div>\n                            <div className='d-inline-block'>\n                              <div className='content'>{message.content}</div>\n                              <div className='date'>\n                                {formatedDate(message.createdAt)}\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </>\n                  )}\n                </div>\n\n                <div className='message-form p-3'>\n                  <div className='row'>\n                    <div className='col'>\n                      <textarea\n                        className='form-control message-input'\n                        rows='3'\n                        placeholder='Your message..'\n                        value={message}\n                        disabled={loading_send}\n                        onChange={handleMessageOnChange}\n                      />\n\n                      <button\n                        className='button-primary mt-3'\n                        disabled={loading_send}\n                        onClick={sendMessageHandle}\n                      >\n                        {' '}\n                        <FontAwesomeIcon className='mr-2' icon={faPaperPlane} />\n                        Send\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div className='text-center mt-5'>\n                <Spinner />\n              </div>\n            )}\n          </div>\n          <div className='d-none d-lg-block col-12 col-lg-3'>\n            <Sidebar />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapSateToProps = (state) => ({\n  conversation_current: state.messages.conversation_current,\n  loading: state.messages.loading,\n  loading_send: state.messages.loading_send,\n  error: state.messages.error,\n  error_send: state.messages.error_send,\n});\n\nexport default connect(mapSateToProps, {\n  getConversationById,\n  sendMessage,\n  clearErrors,\n  setAlert,\n})(MessagesShow);\n"]},"metadata":{},"sourceType":"module"}