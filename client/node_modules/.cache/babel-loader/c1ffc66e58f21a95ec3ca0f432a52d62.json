{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc cam\\\\Desktop\\\\Full-Project\\\\client\\\\src\\\\components\\\\pages\\\\Dropdown\\\\Budget\\\\ExpenseForm.jsx\";\nimport React, { useState } from \"react\";\nimport style from \"./expenseForm.module.css\"; //Redux\n\nimport { connect } from \"react-redux\";\nimport { getExpenses, toggleEdit } from '../../../../redux/actions/budgetActions';\n\nconst ExpenseForm = props => {\n  const [expenses, setExpenses] = useState(props.expense);\n  const [error1, setError1] = useState(\"\");\n  const [error2, setError2] = useState(\"\"); //destructuring expenses\n\n  const {\n    expense,\n    expAmount\n  } = expenses;\n\n  const handleChange = e => {\n    setExpenses({ ...expenses,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (expense === \"\") {\n      setError1(\"Must not be empty\");\n    } else {\n      setError1(\"\");\n    }\n\n    if (expAmount === \"\") {\n      setError2(\"Must not be empty\");\n    } else {\n      setError2(\"\");\n    }\n\n    if (expense === \"\" || expAmount === \"\") {\n      return;\n    }\n\n    setExpenses(props.expense);\n    expenses.isEdit === true ? props.editExpense(expenses) : props.getExpenses(expenses);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${style.budgetForm} ${expenses.isEdit === true ? \"mt-05\" : \"mt-5\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Expenses\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.inputGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    placeholder: \"Add your expense...\",\n    className: \"input\",\n    name: \"expense\",\n    value: expense,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), error1 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }\n  }, error1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.inputGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Add your expense amount...\",\n    name: \"expAmount\",\n    className: \"input\",\n    value: expAmount,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), error2 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }\n  }, error2), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, expenses.isEdit === true ? \"Edit expense\" : \"Add expense\"), expenses.isEdit && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ml-2 simple-button\",\n    onClick: () => props.toggleEdit(expenses.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getExpenses: expenses => dispatch(getExpenses(expenses)),\n    toggleEdit: id => dispatch(toggleEdit(id))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ExpenseForm);","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/Full-Project/client/src/components/pages/Dropdown/Budget/ExpenseForm.jsx"],"names":["React","useState","style","connect","getExpenses","toggleEdit","ExpenseForm","props","expenses","setExpenses","expense","error1","setError1","error2","setError2","expAmount","handleChange","e","target","name","value","handleSubmit","preventDefault","isEdit","editExpense","budgetForm","inputGroup","id","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport style from \"./expenseForm.module.css\";\n\n//Redux\nimport { connect } from \"react-redux\";\nimport { getExpenses, toggleEdit } from '../../../../redux/actions/budgetActions';\n\nconst ExpenseForm = props => {\n  const [expenses, setExpenses] = useState(props.expense);\n  const [error1, setError1] = useState(\"\");\n  const [error2, setError2] = useState(\"\");\n\n  //destructuring expenses\n  const { expense, expAmount } = expenses;\n\n  const handleChange = e => {\n    setExpenses({\n      ...expenses,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (expense === \"\") {\n      setError1(\"Must not be empty\");\n    } else {\n      setError1(\"\");\n    }\n    if (expAmount === \"\") {\n      setError2(\"Must not be empty\");\n    } else {\n      setError2(\"\");\n    }\n\n    if (expense === \"\" || expAmount === \"\") {\n      return;\n    }\n\n    setExpenses(props.expense);\n\n    expenses.isEdit === true\n      ? props.editExpense(expenses)\n      : props.getExpenses(expenses);\n  };\n\n  return (\n    <div\n      className={`${style.budgetForm} ${\n        expenses.isEdit === true ? \"mt-05\" : \"mt-5\"\n      }`}\n    >\n      <p className=\"label\">Expenses</p>\n      <form onSubmit={handleSubmit}>\n        <div className={style.inputGroup}>\n          <input\n            type=\"input\"\n            placeholder=\"Add your expense...\"\n            className=\"input\"\n            name=\"expense\"\n            value={expense}\n            onChange={handleChange}\n          />\n          {error1 && <p className=\"error\">{error1}</p>}\n        </div>\n        <div className={style.inputGroup}>\n          <input\n            type=\"number\"\n            placeholder=\"Add your expense amount...\"\n            name=\"expAmount\"\n            className=\"input\"\n            value={expAmount}\n            onChange={handleChange}\n          />\n          {error2 && <p className=\"error\">{error2}</p>}\n          <button type=\"submit\" className=\"button\">\n            {expenses.isEdit === true ? \"Edit expense\" : \"Add expense\"}\n          </button>\n          {expenses.isEdit && (\n            <button\n              className=\"ml-2 simple-button\"\n              onClick={() => props.toggleEdit(expenses.id)}\n            >\n              Cancel\n            </button>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getExpenses: expenses => dispatch(getExpenses(expenses)),\n    toggleEdit: id => dispatch(toggleEdit(id))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ExpenseForm);\n"]},"metadata":{},"sourceType":"module"}