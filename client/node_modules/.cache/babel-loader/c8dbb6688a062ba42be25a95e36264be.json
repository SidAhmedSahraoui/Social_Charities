{"ast":null,"code":"import { SET_LOADING, USER_LOADED, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, AUTH_ERROR, CLEAR_ERRORS, PROFILE_LOADED, SET_LOADING_PROFILE, UPDATE_PROFILE, UPDATE_PASSWORD, PROFILE_ERROR } from '../types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  loading_profile: true,\n  user: null,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload\n      };\n\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload || null\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case PROFILE_LOADED:\n      return { ...state,\n        loading_profile: false,\n        user: action.payload\n      };\n\n    case SET_LOADING_PROFILE:\n      return { ...state,\n        loading_profile: true\n      };\n\n    case UPDATE_PROFILE:\n    case UPDATE_PASSWORD:\n      return { ...state,\n        loading_profile: false\n      };\n\n    case PROFILE_ERROR:\n      return { ...state,\n        error: action.payload,\n        loading_profile: false\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/redux/reducers/authReducer.js"],"names":["SET_LOADING","USER_LOADED","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AUTH_ERROR","CLEAR_ERRORS","PROFILE_LOADED","SET_LOADING_PROFILE","UPDATE_PROFILE","UPDATE_PASSWORD","PROFILE_ERROR","initialState","token","localStorage","getItem","isAuthenticated","loading","loading_profile","user","error","state","action","type","setItem","payload","removeItem"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,YAPF,EAQEC,cARF,EASEC,mBATF,EAUEC,cAVF,EAWEC,eAXF,EAYEC,aAZF,QAaO,UAbP;AAeA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,eAAe,EAAE,IAJE;AAKnBC,EAAAA,IAAI,EAAE,IALa;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAArB;AASA,gBAAe,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKrB,aAAL;AACEY,MAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BF,MAAM,CAACG,OAAP,CAAeZ,KAA7C;AAEA,aAAO,EACL,GAAGQ,KADE;AAEL,WAAGC,MAAM,CAACG,OAFL;AAGLT,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF,SAAKhB,WAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELL,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILE,QAAAA,IAAI,EAAEG,MAAM,CAACG;AAJR,OAAP;;AAQF,SAAKpB,UAAL;AACA,SAAKF,UAAL;AACA,SAAKC,MAAL;AACEU,MAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGL,KADE;AAELR,QAAAA,KAAK,EAAE,IAFF;AAGLG,QAAAA,eAAe,EAAE,KAHZ;AAILC,QAAAA,OAAO,EAAE,KAJJ;AAKLE,QAAAA,IAAI,EAAE,IALD;AAMLC,QAAAA,KAAK,EAAEE,MAAM,CAACG,OAAP,IAAkB;AANpB,OAAP;;AASF,SAAKzB,WAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKV,cAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELH,QAAAA,eAAe,EAAE,KAFZ;AAGLC,QAAAA,IAAI,EAAEG,MAAM,CAACG;AAHR,OAAP;;AAMF,SAAKjB,mBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,eAAe,EAAE;AAFZ,OAAP;;AAKF,SAAKT,cAAL;AACA,SAAKC,eAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,eAAe,EAAE;AAFZ,OAAP;;AAKF,SAAKP,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELD,QAAAA,KAAK,EAAEE,MAAM,CAACG,OAFT;AAGLP,QAAAA,eAAe,EAAE;AAHZ,OAAP;;AAMF,SAAKZ,YAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELD,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAKF;AACE,aAAOC,KAAP;AAzEJ;AA2ED,CA5ED","sourcesContent":["import {\n  SET_LOADING,\n  USER_LOADED,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  AUTH_ERROR,\n  CLEAR_ERRORS,\n  PROFILE_LOADED,\n  SET_LOADING_PROFILE,\n  UPDATE_PROFILE,\n  UPDATE_PASSWORD,\n  PROFILE_ERROR,\n} from '../types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  loading_profile: true,\n  user: null,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n\n   \n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload || null,\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case PROFILE_LOADED:\n      return {\n        ...state,\n        loading_profile: false,\n        user: action.payload,\n      };\n\n    case SET_LOADING_PROFILE:\n      return {\n        ...state,\n        loading_profile: true,\n      };\n\n    case UPDATE_PROFILE:\n    case UPDATE_PASSWORD:\n      return {\n        ...state,\n        loading_profile: false,\n      };\n\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading_profile: false,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}