{"ast":null,"code":"import { GET_USER_PHONE, CLEAR_USER_PHONE, GET_PHONE_ERROR, SEND_MESSAGE, GET_CONVERSATIONS, GET_CONVERSATION_BY_ID, MESSAGE_ERROR, SEND_MESSAGE_ERROR, SET_LOADING_PHONE, SET_LOADING_MESSAGE, SET_LOADING_SEND_MESSAGE, CLEAR_ERRORS } from '../types';\nconst initialState = {\n  user_phone: null,\n  loading_phone: false,\n  conversations: null,\n  conversation_current: null,\n  loading: false,\n  loading_send: false,\n  error: null,\n  error_send: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER_PHONE:\n      return { ...state,\n        user_phone: action.payload,\n        loading_phone: false\n      };\n\n    case SEND_MESSAGE:\n      return { ...state,\n        error_send: false,\n        loading_send: false\n      };\n\n    case GET_CONVERSATIONS:\n      return { ...state,\n        conversations: action.payload,\n        loading: false\n      };\n\n    case GET_CONVERSATION_BY_ID:\n      return { ...state,\n        conversation_current: action.payload,\n        loading: false\n      };\n\n    case CLEAR_USER_PHONE:\n      return { ...state,\n        user_phone: null,\n        loading_phone: false\n      };\n\n    case GET_PHONE_ERROR:\n      return { ...state,\n        error: action.payload,\n        loading_phone: false\n      };\n\n    case MESSAGE_ERROR:\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    case SEND_MESSAGE_ERROR:\n      return { ...state,\n        error_send: action.payload,\n        loading_send: false\n      };\n\n    case SET_LOADING_PHONE:\n      return { ...state,\n        loading_phone: true\n      };\n\n    case SET_LOADING_MESSAGE:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_LOADING_SEND_MESSAGE:\n      return { ...state,\n        loading_send: true\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/soc/src/redux/reducers/messageReducer.js"],"names":["GET_USER_PHONE","CLEAR_USER_PHONE","GET_PHONE_ERROR","SEND_MESSAGE","GET_CONVERSATIONS","GET_CONVERSATION_BY_ID","MESSAGE_ERROR","SEND_MESSAGE_ERROR","SET_LOADING_PHONE","SET_LOADING_MESSAGE","SET_LOADING_SEND_MESSAGE","CLEAR_ERRORS","initialState","user_phone","loading_phone","conversations","conversation_current","loading","loading_send","error","error_send","state","action","type","payload"],"mappings":"AAAA,SACEA,cADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,YAJF,EAKEC,iBALF,EAMEC,sBANF,EAOEC,aAPF,EAQEC,kBARF,EASEC,iBATF,EAUEC,mBAVF,EAWEC,wBAXF,EAYEC,YAZF,QAaO,UAbP;AAeA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,IADO;AAEnBC,EAAAA,aAAa,EAAE,KAFI;AAGnBC,EAAAA,aAAa,EAAE,IAHI;AAInBC,EAAAA,oBAAoB,EAAE,IAJH;AAKnBC,EAAAA,OAAO,EAAE,KALU;AAMnBC,EAAAA,YAAY,EAAE,KANK;AAOnBC,EAAAA,KAAK,EAAE,IAPY;AAQnBC,EAAAA,UAAU,EAAE;AARO,CAArB;AAWA,gBAAe,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKvB,cAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELR,QAAAA,UAAU,EAAES,MAAM,CAACE,OAFd;AAGLV,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAMF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELD,QAAAA,UAAU,EAAE,KAFP;AAGLF,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKF,SAAKd,iBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELN,QAAAA,aAAa,EAAEO,MAAM,CAACE,OAFjB;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKZ,sBAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELL,QAAAA,oBAAoB,EAAEM,MAAM,CAACE,OAFxB;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKhB,gBAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELR,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAMF,SAAKZ,eAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFT;AAGLV,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAMF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFT;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKV,kBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELD,QAAAA,UAAU,EAAEE,MAAM,CAACE,OAFd;AAGLN,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAMF,SAAKV,iBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELP,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAKF,SAAKL,mBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKP,wBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,YAAY,EAAE;AAFT,OAAP;;AAKF,SAAKP,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAKF;AACE,aAAOE,KAAP;AAhFJ;AAkFD,CAnFD","sourcesContent":["import {\n  GET_USER_PHONE,\n  CLEAR_USER_PHONE,\n  GET_PHONE_ERROR,\n  SEND_MESSAGE,\n  GET_CONVERSATIONS,\n  GET_CONVERSATION_BY_ID,\n  MESSAGE_ERROR,\n  SEND_MESSAGE_ERROR,\n  SET_LOADING_PHONE,\n  SET_LOADING_MESSAGE,\n  SET_LOADING_SEND_MESSAGE,\n  CLEAR_ERRORS,\n} from '../types';\n\nconst initialState = {\n  user_phone: null,\n  loading_phone: false,\n  conversations: null,\n  conversation_current: null,\n  loading: false,\n  loading_send: false,\n  error: null,\n  error_send: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_USER_PHONE:\n      return {\n        ...state,\n        user_phone: action.payload,\n        loading_phone: false,\n      };\n\n    case SEND_MESSAGE:\n      return {\n        ...state,\n        error_send: false,\n        loading_send: false,\n      };\n    case GET_CONVERSATIONS:\n      return {\n        ...state,\n        conversations: action.payload,\n        loading: false,\n      };\n    case GET_CONVERSATION_BY_ID:\n      return {\n        ...state,\n        conversation_current: action.payload,\n        loading: false,\n      };\n\n    case CLEAR_USER_PHONE:\n      return {\n        ...state,\n        user_phone: null,\n        loading_phone: false,\n      };\n\n    case GET_PHONE_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading_phone: false,\n      };\n\n    case MESSAGE_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n\n    case SEND_MESSAGE_ERROR:\n      return {\n        ...state,\n        error_send: action.payload,\n        loading_send: false,\n      };\n\n    case SET_LOADING_PHONE:\n      return {\n        ...state,\n        loading_phone: true,\n      };\n\n    case SET_LOADING_MESSAGE:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case SET_LOADING_SEND_MESSAGE:\n      return {\n        ...state,\n        loading_send: true,\n      };\n\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}