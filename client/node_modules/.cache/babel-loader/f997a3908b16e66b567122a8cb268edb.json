{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOADED, SETTINGS_LOADED, UPDATE_SETTINGS, UPDATE_PASSWORD, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_LOADING, SET_LOADING_SETTINGS, AUTH_ERROR, SETTINGS_ERROR, CLEAR_ERRORS, REQUEST_SUCCESS, REQUEST_FAIL } from '../types'; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n}; // Register Request\n\nexport const request = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch(setLoading());\n    const res = await axios.post('/api/request', formData, config);\n    dispatch({\n      type: REQUEST_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response;\n\n    dispatch({\n      type: REQUEST_FAIL,\n      payload: error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/pc cam/Desktop/Full-Project/client/src/redux/actions/requestActions.js"],"names":["axios","USER_LOADED","SETTINGS_LOADED","UPDATE_SETTINGS","UPDATE_PASSWORD","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_LOADING","SET_LOADING_SETTINGS","AUTH_ERROR","SETTINGS_ERROR","CLEAR_ERRORS","REQUEST_SUCCESS","REQUEST_FAIL","clearErrors","type","request","formData","dispatch","config","headers","setLoading","res","post","payload","data","loadUser","error","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,WADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,eAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,WARF,EASEC,oBATF,EAUEC,UAVF,EAWEC,cAXF,EAYEC,YAZF,EAaEC,eAbF,EAcEC,YAdF,QAeO,UAfP,C,CAkBA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAMK,OAAO,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AACvD,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAMA,MAAI;AACFF,IAAAA,QAAQ,CAACG,UAAU,EAAX,CAAR;AAEA,UAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,cAAX,EAA2BN,QAA3B,EAAqCE,MAArC,CAAlB;AAEAD,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAEH,eADC;AAEPY,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAKAP,IAAAA,QAAQ,CAACQ,QAAQ,EAAT,CAAR;AACD,GAXD,CAWE,OAAOC,KAAP,EAAc;AAAA;;AACdT,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAEF,YADC;AAEPW,MAAAA,OAAO,EAAEG,KAAF,aAAEA,KAAF,0CAAEA,KAAK,CAAEC,QAAT,oDAAE,gBAAiBH;AAFnB,KAAD,CAAR;AAID;AACF,CAxBM","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n  USER_LOADED,\r\n  SETTINGS_LOADED,\r\n  UPDATE_SETTINGS,\r\n  UPDATE_PASSWORD,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_LOADING,\r\n  SET_LOADING_SETTINGS,\r\n  AUTH_ERROR,\r\n  SETTINGS_ERROR,\r\n  CLEAR_ERRORS,\r\n  REQUEST_SUCCESS,\r\n  REQUEST_FAIL,\r\n} from '../types';\r\n\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n  return { type: CLEAR_ERRORS };\r\n};\r\n\r\n// Register Request\r\nexport const request = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    dispatch(setLoading());\r\n\r\n    const res = await axios.post('/api/request', formData, config);\r\n\r\n    dispatch({\r\n      type: REQUEST_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REQUEST_FAIL,\r\n      payload: error?.response?.data,\r\n    });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}